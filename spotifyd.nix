# Generated by carnix 0.6.6: carnix -o spotifyd.nix Cargo.lock --src src
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  spotifyd = f: spotifyd_0_2_1 { features = spotifyd_0_2_1_features { spotifyd_0_2_1 = f; }; };
  adler32_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "adler32";
    version = "1.0.3";
    authors = [ "Remi Rampin <remirampin@gmail.com>" ];
    sha256 = "1z3mvjgw02mbqk98kizzibrca01d5wfkpazsrp3vkkv3i56pn6fb";
    inherit dependencies buildDependencies features;
  };
  aho_corasick_0_6_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "aho-corasick";
    version = "0.6.6";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0ap5lv1q6ylmzq70bjgg66dsa6p9926gwv2q4z0chfjnii8hczq8";
    libName = "aho_corasick";
    crateBin = [ {  name = "aho-corasick-dot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  alsa_0_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "alsa";
    version = "0.0.1";
    authors = [ "Mikko Perttunen <cyndis@kapsi.fi>" ];
    src = fetchgit {
       url = "https://github.com/plietar/rust-alsa";
       rev = "8c63543fa0ccd971cf15f5675293d19febd6f79e";
       sha256 = "06zp82i9ilg3kdga9wkzvj39wzh5la4lx0b00jn90sq63jghkx8p";
    };
    libPath = "src/alsa.rs";
    inherit dependencies buildDependencies features;
  };
  alsa_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "alsa";
    version = "0.2.0";
    authors = [ "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "0skvlis7h4fiim11d1m9sxhadjgn4g6szfp26brqb1r8d230gw1b";
    inherit dependencies buildDependencies features;
  };
  alsa_sys_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "alsa-sys";
    version = "0.1.2";
    authors = [ "Pierre Krieger <pierre.krieger1708@gmail.com>" "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "094kzgc9rdji745iigpqinaxgx55qhbihfpnfk89fqmdhhpk8a1b";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  arrayvec_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayvec";
    version = "0.4.7";
    authors = [ "bluss" ];
    sha256 = "0fzgv7z1x1qnyd7j32vdcadk4k9wfx897y06mr3bw1yi52iqf4z4";
    inherit dependencies buildDependencies features;
  };
  atty_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "atty";
    version = "0.2.11";
    authors = [ "softprops <d.tangren@gmail.com>" ];
    sha256 = "0by1bj2km9jxi4i4g76zzi76fc2rcm9934jpnyrqd95zw344pb20";
    inherit dependencies buildDependencies features;
  };
  backtrace_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace";
    version = "0.3.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "The Rust Project Developers" ];
    sha256 = "137pjkcn89b7fqk78w65ggj92pynmf1hkr1sjz53aga4b50lkmwm";
    inherit dependencies buildDependencies features;
  };
  backtrace_sys_0_1_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "backtrace-sys";
    version = "0.1.23";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0sx7h7bl5j5dj4hlk7bcf8fwbhrxrvq2hfpy70vw2140gnlrl9dw";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  base64_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.5.2";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "1xl4zf9y9mk8syl1bg8hnf99g2zxlr7xj1xii3b2j88a07c1c6f7";
    inherit dependencies buildDependencies features;
  };
  base64_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.6.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0ql1rmczbnww3iszc0pfc6mqa47ravpsdf525vp6s8r32nyzspl5";
    inherit dependencies buildDependencies features;
  };
  base64_0_9_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.9.2";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0g4xxl8jhwjhvr69qlxdmbzd521xcn5j67lhkr20nh7ajvl6k0l1";
    inherit dependencies buildDependencies features;
  };
  bit_set_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bit-set";
    version = "0.4.0";
    authors = [ "Alexis Beingessner <a.beingessner@gmail.com>" ];
    sha256 = "1vqf0n4hmy1gnzsbb8kc3a2p62smldgywdf8kf0q0r2sfblw3gvz";
    inherit dependencies buildDependencies features;
  };
  bit_vec_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bit-vec";
    version = "0.4.4";
    authors = [ "Alexis Beingessner <a.beingessner@gmail.com>" ];
    sha256 = "06czykmn001z6c3a4nsrpc3lrj63ga0kzp7kgva9r9wylhkkqpq9";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.3.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "17w1iks6d0dmhhfm6l20a661k62p7hyb5df36rrkrwy25ayc1q1j";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.7.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1hr72xg5slm0z4pxs2hiy4wcyx3jva70h58b7mid8l0a4c8f7gn5";
    inherit dependencies buildDependencies features;
  };
  bitflags_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "0.9.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "18h073l5jd88rx4qdr95fjddr9rk79pb1aqnshzdnw16cfmb9rws";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "162p4w4h1ad76awq6b5yivmls3d50m9cl27d8g588lsps6g8s5rw";
    inherit dependencies buildDependencies features;
  };
  build_const_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "build_const";
    version = "0.2.1";
    authors = [ "Garrett Berg <vitiral@gmail.com>" ];
    sha256 = "15249xzi3qlm72p4glxgavwyq70fx2sp4df6ii0sdlrixrrp77pl";
    inherit dependencies buildDependencies features;
  };
  byteorder_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "0.5.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0zsr6b0m0yl5c0yy92nq7srfpczd1dx1xqcx3rlm5fbl8si9clqx";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.4";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "095xbm5bi23fkbfb97kg81x02dymfmd2kp5nl93rvw6dar2kpwyw";
    inherit dependencies buildDependencies features;
  };
  bytes_0_4_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bytes";
    version = "0.4.9";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1jiqc94j85la9vs165vqpf6s1sah8n3ivnhsfapcjrvbhjawi6i6";
    inherit dependencies buildDependencies features;
  };
  c_linked_list_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "c_linked_list";
    version = "1.1.1";
    authors = [ "Andrew Cann <shum@canndrew.org>" ];
    sha256 = "1w6dckv4bnqv0di6d2ipdjsssl5svx4iaa75hyhzhhinya1xa7s3";
    inherit dependencies buildDependencies features;
  };
  cc_1_0_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cc";
    version = "1.0.18";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0wcnpa54qvm5921wwrrkn8cwxd5y0p5f4gb1qgyh5imii7rdhpjx";
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1i0w5v51fxnlfsfs9asrnx5bs2di4hcq363gbaw39wya3cmw6vky";
    inherit dependencies buildDependencies features;
  };
  chrono_0_4_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "chrono";
    version = "0.4.5";
    authors = [ "Kang Seonghoon <public+rust@mearie.org>" "Brandon W Maister <quodlibetor@gmail.com>" ];
    sha256 = "0v3gpbkaxjsskil0si321bak9p0k1sfz43cx9p50kvx0s5p3x0yr";
    inherit dependencies buildDependencies features;
  };
  cloudabi_0_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cloudabi";
    version = "0.0.3";
    authors = [ "Nuxi (https://nuxi.nl/) and contributors" ];
    sha256 = "1z9lby5sr6vslfd14d6igk03s7awf91mxpsfmsp3prxbxlk0x7h5";
    libPath = "cloudabi.rs";
    inherit dependencies buildDependencies features;
  };
  core_foundation_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "1g0vpya5h2wa0nlz4a74jar6y8z09f0p76zbzfqrm3dbfsrld1pm";
    inherit dependencies buildDependencies features;
  };
  core_foundation_sys_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "core-foundation-sys";
    version = "0.2.3";
    authors = [ "The Servo Project Developers" ];
    sha256 = "19s0d03294m9s5j8cvy345db3gkhs2y02j5268ap0c6ky5apl53s";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  crc_1_8_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crc";
    version = "1.8.1";
    authors = [ "Rui Hu <code@mrhooray.com>" ];
    sha256 = "00m9jjqrddp3bqyanvyxv0hf6s56bx1wy51vcdcxg4n2jdhg109s";
    inherit dependencies buildDependencies features;
  };
  crossbeam_deque_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-deque";
    version = "0.3.1";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1km0mavyp9ddwb7k7kcdmyryi3bwxf0nmr6jqcpyjzvzmxjlkqap";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.4.3";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "18xfgi7h9aq4lqqrqzy366xg885z1hlkbhvycl2i3zhkhkvadhv3";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.3.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1byx31nkxl48la58571h40ssk94faky26jwz15w40v2gba3v4fql";
    inherit dependencies buildDependencies features;
  };
  ctrlc_3_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ctrlc";
    version = "3.1.1";
    authors = [ "Antti Keränen <detegr@gmail.com>" "nabijaczleweli <nabijaczleweli@gmail.com>" "Henning Ottesen <henning@live.no>" "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0wzqkmfkc45ab3acjh9a3mj9rc59gvnp9xg9j2qqjqy4r6inds2v";
    inherit dependencies buildDependencies features;
  };
  daemonize_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "daemonize";
    version = "0.2.3";
    authors = [ "Fedor Gogolev <knsd@knsd.net>" ];
    sha256 = "05iikngqn28x2bbc3g9v5f9vbwkhk4i7cafp7spsb1q9g88a2q54";
    inherit dependencies buildDependencies features;
  };
  dbus_0_6_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dbus";
    version = "0.6.2";
    authors = [ "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "0bgmn0rmymhdc83fg8b00mzbsvg822xf58pzy880qsm2qxxj97nq";
    inherit dependencies buildDependencies features;
  };
  dbus_tokio_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dbus-tokio";
    version = "0.2.1";
    authors = [ "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "1j9ldar0mxgsa5fbx90i0fj67s41y2r5195b9h3455c8n271lcv0";
    inherit dependencies buildDependencies features;
  };
  derive_error_chain_0_10_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "derive-error-chain";
    version = "0.10.1";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" "Arnav Singh <arnavion@gmail.com>" ];
    sha256 = "1m0wplzfb6cir43ay1lbfa0xg9avv1vcwnkm3kwk6b6sqialxwcr";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  derive_builder_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "derive_builder";
    version = "0.5.1";
    authors = [ "Colin Kiegel <kiegel@gmx.de>" "Pascal Hertleif <killercup@gmail.com>" "Jan-Erik Rediger <janerik@fnordig.de>" "Ted Driggs <ted.driggs@outlook.com>" ];
    sha256 = "0w4k4k5g4lfrhzzzqxi9zp4x8m889kg0z36wvbxi9xxgcfy3az8n";
    procMacro = true;
    build = "build/mod.rs";
    inherit dependencies buildDependencies features;
  };
  derive_builder_core_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "derive_builder_core";
    version = "0.2.0";
    authors = [ "Colin Kiegel <kiegel@gmx.de>" "Pascal Hertleif <killercup@gmail.com>" "Jan-Erik Rediger <janerik@fnordig.de>" "Ted Driggs <ted.driggs@outlook.com>" ];
    sha256 = "14kggzaggy6ra7q88cilyriy3ji4bin5favq6qd1z9vl9nvafgs9";
    inherit dependencies buildDependencies features;
  };
  dns_parser_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dns-parser";
    version = "0.3.2";
    authors = [ "paul@colomiets.name" ];
    src = fetchgit {
       url = "https://github.com/plietar/dns-parser";
       rev = "1d3e5a5591bc72eb061c23bd426c4a25f2f73791";
       sha256 = "1z3jvypjiqp7h5sbmcjq2h7c6ig9ghbl44qanvnnjsyi3gdrb3ra";
    };
    libPath = "src/lib.rs";
    libName = "dns_parser";
    inherit dependencies buildDependencies features;
  };
  dotenv_0_10_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dotenv";
    version = "0.10.1";
    authors = [ "Santiago Lapresta <santiago.lapresta@gmail.com>" "Craig Hills <chills@gmail.com>" "Mike Piccolo <mfpiccolo@gmail.com>" "Alice Maz <alice@alicemaz.com>" "Sean Griffin <sean@seantheprogrammer.com>" ];
    sha256 = "1dhkc41yqchvyxpb9k711pqgfpv0ly44ghmqqfi31mjpirdlg09v";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1xysdxdm24sk5ysim7lps4r2qaxfnj0sbakhmps4d42yssx30cw8";
    inherit dependencies buildDependencies features;
  };
  either_1_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "either";
    version = "1.5.0";
    authors = [ "bluss" ];
    sha256 = "1f7kl2ln01y02m8fpd2zrdjiwqmgfvl9nxxrfry3k19d1gd2bsvz";
    inherit dependencies buildDependencies features;
  };
  encoding_rs_0_7_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "encoding_rs";
    version = "0.7.2";
    authors = [ "Henri Sivonen <hsivonen@hsivonen.fi>" ];
    sha256 = "1c23bi3q4qmi2ci8g7p5j4b4i5abyggvyg6hkl7w4p4r527c9g3q";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.4.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0nrx04p4xa86d5kc7aq4fwvipbqji9cmgy449h47nc9f1chafhgg";
    inherit dependencies buildDependencies features;
  };
  env_logger_0_5_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "env_logger";
    version = "0.5.12";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1ixp61arb6ib0rm24h50k0iv7csvi45wh9b2y177axh9gvi2x22k";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_10_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.10.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "1xxbzd8cjlpzsb9fsih7mdnndhzrvykj0w77yg90qc85az1xwy5z";
    inherit dependencies buildDependencies features;
  };
  error_chain_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "error-chain";
    version = "0.11.0";
    authors = [ "Brian Anderson <banderson@mozilla.com>" "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" "Yamakaky <yamakaky@yamaworld.fr>" ];
    sha256 = "19nz17q6dzp0mx2jhh9qbj45gkvvgcl7zq9z2ai5a8ihbisfj6d7";
    inherit dependencies buildDependencies features;
  };
  extprim_1_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "extprim";
    version = "1.6.0";
    authors = [ "kennytm <kennytm@gmail.com>" ];
    sha256 = "0wzyrjjiwmih8kn65r9d6p491njqsljvd27w95smr0j87zclyqiw";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  failure_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "failure";
    version = "0.1.2";
    authors = [ "Without Boats <boats@mozilla.com>" ];
    sha256 = "0xlvmy42sjv63pgbbb0l9bdmvanlchyzbyd9mv1fs0yhw8np73x1";
    inherit dependencies buildDependencies features;
  };
  failure_derive_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "failure_derive";
    version = "0.1.2";
    authors = [ "Without Boats <woboats@gmail.com>" ];
    sha256 = "16zw2n9rmjisk8n4rxxqm7ffmxgd5dspf04b97lh7ns1nypk54w3";
    procMacro = true;
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  foreign_types_0_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types";
    version = "0.3.2";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "105n8sp2djb1s5lzrw04p7ss3dchr5qa3canmynx396nh3vwm2p8";
    inherit dependencies buildDependencies features;
  };
  foreign_types_shared_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "foreign-types-shared";
    version = "0.1.1";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0b6cnvqbflws8dxywk4589vgbz80049lz4x1g9dfy4s1ppd3g4z5";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  futures_0_1_23_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures";
    version = "0.1.23";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "075s7sv1iqzf2r3lvb4hk81k5c9xzfcyb8q92h2s35fnypxyqd21";
    inherit dependencies buildDependencies features;
  };
  futures_cpupool_0_1_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "futures-cpupool";
    version = "0.1.8";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0ficd31n5ljiixy6x0vjglhq4fp0v1p4qzxm3v6ymsrb3z080l5c";
    inherit dependencies buildDependencies features;
  };
  gcc_0_3_54_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gcc";
    version = "0.3.54";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07a5i47r8achc6gxsba3ga17h9gnh4b9a2cak8vjg4hx62aajkr4";
    inherit dependencies buildDependencies features;
  };
  get_if_addrs_0_5_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "get_if_addrs";
    version = "0.5.3";
    authors = [ "MaidSafe Developers <dev@maidsafe.net>" ];
    sha256 = "1zjb2kipfahg7gx4bnfrv9pgp5qfl846cj7qvjq6c5qk68qz89cg";
    inherit dependencies buildDependencies features;
  };
  get_if_addrs_sys_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "get_if_addrs-sys";
    version = "0.1.1";
    authors = [ "MaidSafe Developers <dev@maidsafe.net>" ];
    sha256 = "1w7zpkav8qjrn0m13lawrfqfbk5j0rv7i07ifnvagbqvny1bj2jz";
    libPath = "lib.rs";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  getopts_0_2_18_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "getopts";
    version = "0.2.18";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0c1m95wg8pkvdq4mwcd2v78r1lb6a5s3ljm7158dsl56mvzcwd5y";
    inherit dependencies buildDependencies features;
  };
  hostname_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hostname";
    version = "0.1.5";
    authors = [ "fengcen <fengcen.love@gmail.com>" ];
    sha256 = "1383lcnzmiqm0bz0i0h33rvbl5ma125ca5lfnx4qzx1dzdz0wl2a";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  httparse_1_3_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "httparse";
    version = "1.3.2";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1mm10m2hv1inxzzvm85s6fdmwl9a3q9vik0nzh5qrx2hx5x8fcwl";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  humantime_1_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "humantime";
    version = "1.1.1";
    authors = [ "Paul Colomiets <paul@colomiets.name>" ];
    sha256 = "1lzdfsfzdikcp1qb6wcdvnsdv16pmzr7p7cv171vnbnyz2lrwbgn";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  hyper_0_11_27_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper";
    version = "0.11.27";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "0q5as4lhvh31bzk4qm7j84snrmxyxyaqk040rfk72b42dn98mryi";
    inherit dependencies buildDependencies features;
  };
  hyper_proxy_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper-proxy";
    version = "0.4.1";
    authors = [ "Johann Tuffe <tafia973@gmail.com>" ];
    sha256 = "0vdwbclsq3l3qb5yamfsk1q75vdymn8wv5hkrfphffbjg96lyvnz";
    inherit dependencies buildDependencies features;
  };
  hyper_tls_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper-tls";
    version = "0.1.4";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "1242mxvkgkm936fcsfcmmwwb5blclf0xld4d6gqzbvhlfc9yhnl8";
    inherit dependencies buildDependencies features;
  };
  idna_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "idna";
    version = "0.1.5";
    authors = [ "The rust-url developers" ];
    sha256 = "1gwgl19rz5vzi67rrhamczhxy050f5ynx4ybabfapyalv7z1qmjy";
    inherit dependencies buildDependencies features;
  };
  iovec_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "iovec";
    version = "0.1.2";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0vjymmb7wj4v4kza5jjn48fcdb85j3k37y7msjl3ifz0p9yiyp2r";
    inherit dependencies buildDependencies features;
  };
  itertools_0_7_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itertools";
    version = "0.7.8";
    authors = [ "bluss" ];
    sha256 = "0ib30cd7d1icjxsa13mji1gry3grp72kx8p33yd84mphdbc3d357";
    inherit dependencies buildDependencies features;
  };
  itoa_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.3.4";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1nfkzz6vrgj0d9l3yzjkkkqzdgs68y294fjdbl7jq118qi8xc9d9";
    inherit dependencies buildDependencies features;
  };
  itoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "193a744yd74rmk13hl8xvd9p2hqhdkyf8xkvi1mxm5s10bby0h8v";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  language_tags_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "language-tags";
    version = "0.2.2";
    authors = [ "Pyfisch <pyfisch@gmail.com>" ];
    sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.1.0";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1da2b6nxfc2l547qgl9kd1pn9sh1af96a6qx6xw8xdnv6hh5fag0";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  lazycell_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazycell";
    version = "0.6.0";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Nikita Pekin <contact@nikitapek.in>" ];
    sha256 = "1ax148clinbvp6alxcih8s5i2bg3mc5mi69n3hvzvzbwlm6k532r";
    inherit dependencies buildDependencies features;
  };
  lewton_0_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lewton";
    version = "0.8.0";
    authors = [ "est31 <MTest31@outlook.com>" ];
    sha256 = "1mlfn8h3d4xv6kapc3f243nz6852bzmmvh67ysd50n2a152dscxn";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0pshydmsq71kl9276zc2928ld50sp524ixcqkcqsgq410dx6c50b";
    inherit dependencies buildDependencies features;
  };
  libdbus_sys_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libdbus-sys";
    version = "0.1.3";
    authors = [ "David Henningsson <diwic@ubuntu.com>" ];
    sha256 = "1ydlmz9i9n685g5p899rpjz1ml91h2mbxz2qymjv7cjq4hxyk11y";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  libflate_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libflate";
    version = "0.1.16";
    authors = [ "Takeru Ohta <phjgt308@gmail.com>" ];
    sha256 = "0l15g61h10bznxsjirwq9c43w17mjpqx6wz0357agskardkdh14n";
    inherit dependencies buildDependencies features;
  };
  libpulse_sys_0_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libpulse-sys";
    version = "0.0.0";
    authors = [ "Astro <astro@spaceboyz.net>" ];
    sha256 = "1hfzsw2c3qqn6kk52vgms87z17ii5lsk8ciwklqmj3li5h9vrqpq";
    inherit dependencies buildDependencies features;
  };
  librespot_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "librespot";
    version = "0.1.0";
    authors = [ "Paul Liétar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/librespot-org/librespot.git";
       rev = "ee87904ac1d4a8b626582db51dc5c51e5f61216e";
       sha256 = "0xlkx5mwlj9vyc2jgkav0fi6z1gmp2kigg0hyf59c42bf8b83qvf";
    };
    libPath = "src/lib.rs";
    crateBin = [ {  name = "librespot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  librespot_audio_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "librespot-audio";
    version = "0.1.0";
    authors = [ "Paul Liétar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/librespot-org/librespot.git";
       rev = "ee87904ac1d4a8b626582db51dc5c51e5f61216e";
       sha256 = "0xlkx5mwlj9vyc2jgkav0fi6z1gmp2kigg0hyf59c42bf8b83qvf";
    };
    libPath = "src/lib.rs";
    libName = "librespot";
    crateBin = [ {  name = "librespot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  librespot_connect_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "librespot-connect";
    version = "0.1.0";
    authors = [ "Paul Liétar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/librespot-org/librespot.git";
       rev = "ee87904ac1d4a8b626582db51dc5c51e5f61216e";
       sha256 = "0xlkx5mwlj9vyc2jgkav0fi6z1gmp2kigg0hyf59c42bf8b83qvf";
    };
    libPath = "src/lib.rs";
    libName = "librespot";
    crateBin = [ {  name = "librespot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  librespot_core_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "librespot-core";
    version = "0.1.0";
    authors = [ "Paul Liétar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/librespot-org/librespot.git";
       rev = "ee87904ac1d4a8b626582db51dc5c51e5f61216e";
       sha256 = "0xlkx5mwlj9vyc2jgkav0fi6z1gmp2kigg0hyf59c42bf8b83qvf";
    };
    libPath = "src/lib.rs";
    libName = "librespot";
    crateBin = [ {  name = "librespot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  librespot_metadata_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "librespot-metadata";
    version = "0.1.0";
    authors = [ "Paul Liétar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/librespot-org/librespot.git";
       rev = "ee87904ac1d4a8b626582db51dc5c51e5f61216e";
       sha256 = "0xlkx5mwlj9vyc2jgkav0fi6z1gmp2kigg0hyf59c42bf8b83qvf";
    };
    libPath = "src/lib.rs";
    libName = "librespot";
    crateBin = [ {  name = "librespot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  librespot_playback_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "librespot-playback";
    version = "0.1.0";
    authors = [ "Paul Liétar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/librespot-org/librespot.git";
       rev = "ee87904ac1d4a8b626582db51dc5c51e5f61216e";
       sha256 = "0xlkx5mwlj9vyc2jgkav0fi6z1gmp2kigg0hyf59c42bf8b83qvf";
    };
    libPath = "src/lib.rs";
    libName = "librespot";
    crateBin = [ {  name = "librespot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  librespot_protocol_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "librespot-protocol";
    version = "0.1.0";
    authors = [ "Paul Liétar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/librespot-org/librespot.git";
       rev = "ee87904ac1d4a8b626582db51dc5c51e5f61216e";
       sha256 = "0xlkx5mwlj9vyc2jgkav0fi6z1gmp2kigg0hyf59c42bf8b83qvf";
    };
    libPath = "src/lib.rs";
    libName = "librespot";
    crateBin = [ {  name = "librespot";  path = "src/main.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  linear_map_1_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "linear-map";
    version = "1.2.0";
    authors = [ "Andrew Paseltiner <apaseltiner@gmail.com>" "Tobias Bucher <tobiasbucher5991@gmail.com>" ];
    sha256 = "1b89vb1ky177hvqdgngvd4h6ljmrh02fj9dxglp0n6jv2b7x96wf";
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1gdmwrbm7s18zcdz4lcdhz975m4gwhi854c7j1rvj1gsr8aca250";
    inherit dependencies buildDependencies features;
  };
  matches_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "matches";
    version = "0.1.7";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0zx9gi5flyzkh9nx52fyc3k2zz08b9ww1c4yndlfrw72kr8m7yfy";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  mdns_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mdns";
    version = "0.2.0";
    authors = [ "Paul Lietar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/plietar/rust-mdns";
       rev = "0974ab4ff7874437e11a89037c8258362a0061f8";
       sha256 = "0glsq6a8fl1m9parclvy2h3lzwhvfn5i6yxpaxvvzhylnn5pgam3";
    };
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  memoffset_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memoffset";
    version = "0.2.1";
    authors = [ "Gilad Naaman <gilad.naaman@gmail.com>" ];
    sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
    inherit dependencies buildDependencies features;
  };
  mime_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime";
    version = "0.3.9";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "0fns19sr62gqdzw3jy6pwqm1iy1q1ainb6cdvsg0kfwzy7nvyjww";
    inherit dependencies buildDependencies features;
  };
  mime_guess_2_0_0_alpha_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime_guess";
    version = "2.0.0-alpha.6";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "1k2mdq43gi2qr63b7m5zs624rfi40ysk33cay49jlhq97jwnk9db";
    inherit dependencies buildDependencies features;
  };
  mio_0_6_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio";
    version = "0.6.15";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0a93wxsmkh8x38wxivhn6qdj08pj9f0j3y46p4wv3xclbq8i4aaa";
    inherit dependencies buildDependencies features;
  };
  mio_uds_0_6_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mio-uds";
    version = "0.6.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1428ywzd30ayagqmagmzslzi70d91mj402wp4mw1mz1yhvjrj9v8";
    inherit dependencies buildDependencies features;
  };
  miow_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "miow";
    version = "0.2.1";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "14f8zkc6ix7mkyis1vsqnim8m29b6l55abkba3p2yz7j1ibcvrl0";
    inherit dependencies buildDependencies features;
  };
  multimap_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "multimap";
    version = "0.4.0";
    authors = [ "Håvar Nøvik <havar.novik@gmail.com>" ];
    sha256 = "00w5bcv7kwxf5c821lvnji12ik4gg5ajcbq956iqd7byrgkp2ga3";
    inherit dependencies buildDependencies features;
  };
  native_tls_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "native-tls";
    version = "0.1.5";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "11f75qmbny5pnn6zp0vlvadrvc9ph9qsxiyn4n6q02xyd93pxxlf";
    inherit dependencies buildDependencies features;
  };
  net2_0_2_33_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "net2";
    version = "0.2.33";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1qnmajafgybj5wyxz9iffa8x5wgbwd2znfklmhqj7vl6lw1m65mq";
    inherit dependencies buildDependencies features;
  };
  nix_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nix";
    version = "0.9.0";
    authors = [ "The nix-rust Project Developers" ];
    sha256 = "00p63bphzwwn460rja5l2wcpgmv7ljf7illf6n95cppx63d180q0";
    inherit dependencies buildDependencies features;
  };
  nix_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nix";
    version = "0.11.0";
    authors = [ "The nix-rust Project Developers" ];
    sha256 = "0kv5w42x8hb3bvkf0ydacvwm3i14pvj4yq8y0097wprqc0zmb8gm";
    inherit dependencies buildDependencies features;
  };
  nodrop_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nodrop";
    version = "0.1.12";
    authors = [ "bluss" ];
    sha256 = "1b9rxvdg8061gxjc239l9slndf0ds3m6fy2sf3gs8f9kknqgl49d";
    inherit dependencies buildDependencies features;
  };
  num_bigint_0_1_44_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-bigint";
    version = "0.1.44";
    authors = [ "The Rust Project Developers" ];
    sha256 = "13sf3jhjs6y7cnfrdxns0k8vmbxwjl038wm3yl08b3dbrla7hvx1";
    inherit dependencies buildDependencies features;
  };
  num_integer_0_1_39_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-integer";
    version = "0.1.39";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1f42ls46cghs13qfzgbd7syib2zc6m7hlmv1qlar6c9mdxapvvbg";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_1_43_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.1.43";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1zdzx78vrcg3f39w94pqjs1mwxl1phyv7843hwgwkzggwcxhhf6s";
    inherit dependencies buildDependencies features;
  };
  num_traits_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num-traits";
    version = "0.2.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0ql203ca6lzppksy4fsfnpz3kq96vwlwvyn3ahvnd9g6k9f5ncj0";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  ogg_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ogg";
    version = "0.5.1";
    authors = [ "est31 <MTest31@outlook.com>" ];
    sha256 = "0j72zcw8nqzwk5a8knps81wi5vcx6pjc74axq2whm1s5krawaxf9";
    inherit dependencies buildDependencies features;
  };
  ogg_sys_0_0_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ogg-sys";
    version = "0.0.9";
    authors = [ "Pierre Krieger <pierre.krieger1708@gmail.com>" ];
    sha256 = "0gv64gxmzdp950rgscl0dxly5a8k5sv1cv5813n3hdcpprz8xjd7";
    build = "libogg/build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_0_9_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl";
    version = "0.9.24";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0wzm3c11g3ndaqyzq36mcdcm1q4a8pmsyi33ibybhjz28g2z0f79";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  openssl_sys_0_9_35_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "openssl-sys";
    version = "0.9.35";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0z6lh8pzchqqqahd11f9xx0rz23rqprzlyhhgqfcmn6b97w5qx26";
    build = "build/main.rs";
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_0_7_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf";
    version = "0.7.22";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0b58l863rhmqyqsfj2d89nmdzc21g9yvvvq1m4c3a615zpcykb3i";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  phf_codegen_0_7_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_codegen";
    version = "0.7.22";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0k8yx4gr9m6cfrvh21s6bhnh1azz13j4xih88bvm06r6blfl89fs";
    inherit dependencies buildDependencies features;
  };
  phf_generator_0_7_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_generator";
    version = "0.7.22";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "093gla320qb6rbk8z7wqqxl79zrh874sa7sxir31q2p7mrw4b70k";
    inherit dependencies buildDependencies features;
  };
  phf_shared_0_7_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "phf_shared";
    version = "0.7.22";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0ij9flicfi0ab5vpzdwbizpdyxhk891qxa8nxsqlv4sg4abqang6";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  pkg_config_0_3_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pkg-config";
    version = "0.3.13";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0jq0hi8lax9rgnizh46yh8w5g11xldazxm7y575hr7448d1dl79s";
    inherit dependencies buildDependencies features;
  };
  portaudio_rs_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "portaudio-rs";
    version = "0.3.0";
    authors = [ "mvdnes <git@mathijs.vd-nes.nl>" ];
    sha256 = "0bn0yv37p56l3n2kdcvazjfwvkggwf9p76isaxm3cl07qzj7bg96";
    libName = "portaudio_rs";
    inherit dependencies buildDependencies features;
  };
  portaudio_sys_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "portaudio-sys";
    version = "0.1.1";
    authors = [ "Mathijs van de Nes <git@mathijs.vd-nes.nl>" ];
    sha256 = "0cshc69db9qm74nbk193jdi78gnnmgxir201js1y1ifap90aws8r";
    libPath = "lib.rs";
    libName = "portaudio_sys";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  proc_macro2_0_4_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "proc-macro2";
    version = "0.4.12";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "04kfm67fr7xpxhrq90pqps88gdbwn5jnfd3gjwm8da4jim37niya";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  protobuf_1_7_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "protobuf";
    version = "1.7.4";
    authors = [ "Stepan Koltsov <stepan.koltsov@gmail.com>" ];
    sha256 = "0r6wpylfwb27dl3varqmfzrymb1qjh1zd4hq4a00y5620bzjrb1s";
    crateBin = [ {  name = "protoc-gen-rust";  path = "protoc-gen-rust.rs"; } {  name = "protobuf-bin-gen-rust-do-not-use";  path = "protobuf-bin-gen-rust-do-not-use.rs"; } ];
    inherit dependencies buildDependencies features;
  };
  quick_error_1_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quick-error";
    version = "1.2.2";
    authors = [ "Paul Colomiets <paul@colomiets.name>" "Colin Kiegel <kiegel@gmx.de>" ];
    sha256 = "192a3adc5phgpibgqblsdx1b421l5yg9bjbmv552qqq9f37h60k5";
    inherit dependencies buildDependencies features;
  };
  quote_0_3_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.3.15";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "09il61jv4kd1360spaj46qwyl21fv1qz18fsv2jra8wdnlgl5jsg";
    inherit dependencies buildDependencies features;
  };
  quote_0_6_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "quote";
    version = "0.6.6";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0q5mijl80g0394fnjb68nz7ck95wzkgfmnsjwxgqlg77w8hcn78f";
    inherit dependencies buildDependencies features;
  };
  rand_0_3_22_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.3.22";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wrj12acx7l4hr7ag3nz8b50yhp8ancyq988bzmnnsxln67rsys0";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  rand_0_5_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.5.5";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0d7pnsh57qxhz1ghrzk113ddkn13kf2g758ffnbxq4nhwjfzhlc9";
    inherit dependencies buildDependencies features;
  };
  rand_core_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand_core";
    version = "0.2.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "12mbdma0is3a43s6xkz5g48ndx3zn4hb611gngv1yrbaghpw8nrw";
    inherit dependencies buildDependencies features;
  };
  random_0_12_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "random";
    version = "0.12.2";
    authors = [ "Ivan Ukhov <ivan.ukhov@gmail.com>" ];
    sha256 = "1nnxpbfbq3va75zxw9djk25v9c9dj7v8s0m8r8gy9p6q38i4pw74";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.40";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "132rnhrq49l3z7gjrwj2zfadgw6q0355s6a7id7x7c0d7sk72611";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  redox_termios_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_termios";
    version = "0.1.1";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "04s6yyzjca552hdaqlvqhp3vw0zqbc304md5czyd3axh56iry8wh";
    libPath = "src/lib.rs";
    inherit dependencies buildDependencies features;
  };
  regex_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "0.2.11";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0r50cymxdqp0fv1dxd22mjr6y32q450nwacd279p9s7lh0cafijj";
    inherit dependencies buildDependencies features;
  };
  regex_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex";
    version = "1.0.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1dakmqc994kbsbbkks6psfafwyh74zvsnzlw8vqz2yp958di9s0i";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_5_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.5.6";
    authors = [ "The Rust Project Developers" ];
    sha256 = "10vf3r34bgjnbrnqd5aszn35bjvm8insw498l1vjy8zx5yms3427";
    inherit dependencies buildDependencies features;
  };
  regex_syntax_0_6_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "regex-syntax";
    version = "0.6.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "109426mj7nhwr6szdzbcvn1a8g5zy52f9maqxjd9agm8wg87ylyw";
    inherit dependencies buildDependencies features;
  };
  relay_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "relay";
    version = "0.1.1";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "16csfaslbmj25iaxs88p8wcfh2zfpkh9isg9adid0nxjxvknh07r";
    inherit dependencies buildDependencies features;
  };
  remove_dir_all_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "remove_dir_all";
    version = "0.5.1";
    authors = [ "Aaronepower <theaaronepower@gmail.com>" ];
    sha256 = "1chx3yvfbj46xjz4bzsvps208l46hfbcy0sm98gpiya454n4rrl7";
    inherit dependencies buildDependencies features;
  };
  reqwest_0_8_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "reqwest";
    version = "0.8.7";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1wfc77jir16xcjcdjn988f8bpaldd0la1gf1piphfxydp8i7gr56";
    inherit dependencies buildDependencies features;
  };
  rpassword_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rpassword";
    version = "0.3.1";
    authors = [ "Conrad Kleinespel <conradk@conradk.com>" ];
    sha256 = "0g6vxyrf9kbpsz60j4y00kkvvb6zs0f0lpw882a1rfaiqlxvy1gh";
    inherit dependencies buildDependencies features;
  };
  rspotify_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rspotify";
    version = "0.2.3";
    authors = [ "Samray Leung <samrayleung@gmail.com>" ];
    sha256 = "1apdfmgq867wh7rpyik63qnccbzb4fjk7cdbm8avkz4r6y9lnrwr";
    inherit dependencies buildDependencies features;
  };
  rust_crypto_0_2_36_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rust-crypto";
    version = "0.2.36";
    authors = [ "The Rust-Crypto Project Developers" ];
    sha256 = "1hm79xjmkyl20bx4b8ns77xbrm8wqklhqnci54n93zr6wiq3ddgi";
    libName = "crypto";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rust_ini_0_10_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rust-ini";
    version = "0.10.3";
    authors = [ "Y. T. Chung <zonyitoo@gmail.com>" ];
    sha256 = "02bvpqd5najhkdqsjp3in5y1mhag4m7clr8yydnfis5xg6lbipr2";
    libName = "ini";
    inherit dependencies buildDependencies features;
  };
  rustc_demangle_0_1_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-demangle";
    version = "0.1.9";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "00ma4r9haq0zv5krps617mym6y74056pfcivyld0kpci156vfaax";
    inherit dependencies buildDependencies features;
  };
  rustc_serialize_0_3_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc-serialize";
    version = "0.3.24";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0rfk6p66mqkd3g36l0ddlv2rvnp1mp3lrq5frq9zz5cbnz5pmmxn";
    inherit dependencies buildDependencies features;
  };
  rustc_version_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rustc_version";
    version = "0.2.3";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0rgwzbgs3i9fqjm1p4ra3n7frafmpwl29c8lw85kv1rxn7n2zaa7";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  schannel_0_1_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "schannel";
    version = "0.1.13";
    authors = [ "Steven Fackler <sfackler@gmail.com>" "Steffen Butzer <steffen.butzer@outlook.com>" ];
    sha256 = "033zavvq2k6z5akk38vzaglzbxzljaixgmhj9am27nr21dgaj6b3";
    inherit dependencies buildDependencies features;
  };
  scoped_tls_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scoped-tls";
    version = "0.1.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0nblksgki698cqsclsnd6f1pq4yy34350dn2slaah9dlmx9z5xla";
    inherit dependencies buildDependencies features;
  };
  scopeguard_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scopeguard";
    version = "0.3.3";
    authors = [ "bluss" ];
    sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
    inherit dependencies buildDependencies features;
  };
  security_framework_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "1kxczsaj8gz4922jl5af2gkxh71rasb6khaf3dp7ldlnw9qf2sbm";
    inherit dependencies buildDependencies features;
  };
  security_framework_sys_0_1_16_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "security-framework-sys";
    version = "0.1.16";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0ai2pivdr5fyc7czbkpcrwap0imyy0r8ndarrl3n5kiv0jha1js3";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  semver_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver";
    version = "0.9.0";
    authors = [ "Steve Klabnik <steve@steveklabnik.com>" "The Rust Project Developers" ];
    sha256 = "0azak2lb2wc36s3x15az886kck7rpnksrw14lalm157rg9sc9z63";
    inherit dependencies buildDependencies features;
  };
  semver_parser_0_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "semver-parser";
    version = "0.7.0";
    authors = [ "Steve Klabnik <steve@steveklabnik.com>" ];
    sha256 = "1da66c8413yakx0y15k8c055yna5lyb6fr0fw9318kdwkrk5k12h";
    inherit dependencies buildDependencies features;
  };
  serde_0_9_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "0.9.15";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "0rlflkc57kvy69hnhj4arfsj7ic4hpihxsb00zg5lkdxfj5qjx9b";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_71_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.71";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0hv9hhcdk4d79ndh0lznyxjhrs211fiydrwgn00vvji1cjaw77i9";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  serde_codegen_internals_0_14_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_codegen_internals";
    version = "0.14.2";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "1v7kbxfhg42nmxwbchd6wgp1b3q5xfay3vii4f4jf0h1grn8mr9r";
    inherit dependencies buildDependencies features;
  };
  serde_derive_0_9_15_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "0.9.15";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "11f78k33nvyfhbi2j4qjxz42l8d7s2nhcfarp4g4izvh81yq7hgw";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_derive_1_0_71_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_derive";
    version = "1.0.71";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0ywvs5gcl4xmhlvwl1kbbg7a568kaaqfb7sxj1609004361yn57n";
    procMacro = true;
    inherit dependencies buildDependencies features;
  };
  serde_json_0_9_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "0.9.10";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" ];
    sha256 = "0g6bxlfnvf2miicnsizyrxm686rfval6gbss1i2qcna8msfwc005";
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_24_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.24";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1wvvc3y0202my2p00ah8ygl1794nspar9pf39fz1525jd6m6k8a1";
    inherit dependencies buildDependencies features;
  };
  serde_urlencoded_0_5_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_urlencoded";
    version = "0.5.2";
    authors = [ "Anthony Ramine <n.oxyde@gmail.com>" ];
    sha256 = "0m5pigng0665qrk4ii1z84pb4lchbsswhgb863yglljskmm056m0";
    inherit dependencies buildDependencies features;
  };
  shannon_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "shannon";
    version = "0.2.0";
    authors = [ "Paul Liétar <paul@lietar.net>" ];
    sha256 = "19m7a32xh9dd7plg56q9fllxxn1r4gz9552m0m9dxjndhcp6m76l";
    inherit dependencies buildDependencies features;
  };
  simplelog_0_4_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "simplelog";
    version = "0.4.4";
    authors = [ "Drakulix <github@drakulix.de>" ];
    sha256 = "1cjni96w139k56zyxhj2vwjc5pg7ydp3wm3i7nfb5ikzqjwvpaff";
    inherit dependencies buildDependencies features;
  };
  siphasher_0_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "siphasher";
    version = "0.2.3";
    authors = [ "Frank Denis <github@pureftpd.org>" ];
    sha256 = "1ganj1grxqnkvv4ds3vby039bm999jrr58nfq2x3kjhzkw2bnqkw";
    inherit dependencies buildDependencies features;
  };
  slab_0_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.3.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0y6lhjggksh57hyfd3l6p9wgv5nhvw9c6djrysq7jnalz8fih21k";
    inherit dependencies buildDependencies features;
  };
  slab_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "slab";
    version = "0.4.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0njmznhcjp4aiznybxm7wacnb4q49ch98wizyf4lpn3rg6sjrak4";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.2.1";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "0rnsll9af52bpjngz0067dpm1ndqmh76i64a58fc118l4lvnjxw2";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  socket2_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "socket2";
    version = "0.2.4";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1pdwqlx4wnabgv549i3pb3whbk8ggcq4kg0lfx9cpcazcjk5p6iz";
    inherit dependencies buildDependencies features;
  };
  spotifyd_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "spotifyd";
    version = "0.2.1";
    authors = [ "Simon Persson <simon@flaskpost.org>" ];
    src = ./src;
    inherit dependencies buildDependencies features;
  };
  syn_0_11_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.11.11";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "0yw8ng7x1dn5a6ykg0ib49y7r9nhzgpiq2989rqdp7rdz3n85502";
    inherit dependencies buildDependencies features;
  };
  syn_0_14_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syn";
    version = "0.14.8";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "01v6d527ig5jmvlbz4nffihfzw3ccy98gw51ba6n5v6izxhyc2g6";
    inherit dependencies buildDependencies features;
  };
  synom_0_11_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synom";
    version = "0.11.3";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1l6d1s9qjfp6ng2s2z8219igvlv7gyk8gby97sdykqc1r93d8rhc";
    inherit dependencies buildDependencies features;
  };
  synstructure_0_9_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "synstructure";
    version = "0.9.0";
    authors = [ "Nika Layzell <nika@thelayzells.com>" ];
    sha256 = "1ipvy750zdyrxn9d60ns5r2niqnv8k3dky5ila725s25gxsxrq19";
    inherit dependencies buildDependencies features;
  };
  syslog_3_3_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "syslog";
    version = "3.3.0";
    authors = [ "contact@geoffroycouprie.com" ];
    sha256 = "1z7c97nx1xlxdsrfdzdn22g65jq7s4y9dmax4nzaa36sh6amv2cg";
    inherit dependencies buildDependencies features;
  };
  take_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "take";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "17rfh39di5n8w9aghpic2r94cndi3dr04l60nkjylmxfxr3iwlhd";
    inherit dependencies buildDependencies features;
  };
  tempdir_0_3_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempdir";
    version = "0.3.7";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0y53sxybyljrr7lh0x0ysrsa7p7cljmwv9v80acy3rc6n97g67vy";
    inherit dependencies buildDependencies features;
  };
  tempfile_2_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tempfile";
    version = "2.2.0";
    authors = [ "Steven Allen <steven@stebalien.com>" ];
    sha256 = "1z3l901ipvi0s0mdppw4lwfa77ydb22rfnf6y9sh0pifj7ah5drf";
    inherit dependencies buildDependencies features;
  };
  term_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "term";
    version = "0.4.6";
    authors = [ "The Rust Project Developers" "Steven Allen" ];
    sha256 = "14fll0l6247b4iyxnj52lpvxhd10yxbkmnpyxrn84iafzqmp56kv";
    inherit dependencies buildDependencies features;
  };
  termcolor_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termcolor";
    version = "1.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0004j42x8gv75hwwdg4nf3jbb6gs7lfhyswqsmjfv4nyqrpxp5lh";
    inherit dependencies buildDependencies features;
  };
  termion_1_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termion";
    version = "1.5.1";
    authors = [ "ticki <Ticki@users.noreply.github.com>" "gycos <alexandre.bury@gmail.com>" "IGI-111 <igi-111@protonmail.com>" ];
    sha256 = "02gq4vd8iws1f3gjrgrgpajsk2bk43nds5acbbb4s8dvrdvr8nf1";
    inherit dependencies buildDependencies features;
  };
  termios_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "termios";
    version = "0.2.2";
    authors = [ "David Cuddeback <david.cuddeback@gmail.com>" ];
    sha256 = "0hjy4idvcapx9i6qbhf5536aqnf6rqk2aaj424sfwy7qhv6xmcx3";
    inherit dependencies buildDependencies features;
  };
  thread_local_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "thread_local";
    version = "0.3.5";
    authors = [ "Amanieu d'Antras <amanieu@gmail.com>" ];
    sha256 = "0mkp0sp91aqsk7brgygai4igv751r1754rsxn37mig3ag5rx8np6";
    inherit dependencies buildDependencies features;
  };
  time_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wgnbjamljz6bqxsd5axc4p2mmhkqfrryj4gf2yswjaxiw5dd01m";
    inherit dependencies buildDependencies features;
  };
  tokio_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio";
    version = "0.1.7";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0d5fj90wk05m5vbd924irg1pl1d4fn86jjw5napzanh6vbwsnr66";
    inherit dependencies buildDependencies features;
  };
  tokio_codec_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-codec";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" "Bryan Burgers <bryan@burgers.io>" ];
    sha256 = "0347ygccbj05yn9krjk4ifcy5xbv41xk7yyi9cl2cnxrc285xnm7";
    inherit dependencies buildDependencies features;
  };
  tokio_core_0_1_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-core";
    version = "0.1.17";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1j6c5q3aakvb1hjx4r95xwl5ms8rp19k4qsr6v6ngwbvr6f9z6rs";
    inherit dependencies buildDependencies features;
  };
  tokio_executor_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-executor";
    version = "0.1.3";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "19gad1rm703qqxi52h6l5k6d71mjhlj13bxrhph5nfy07lcq7qkm";
    inherit dependencies buildDependencies features;
  };
  tokio_fs_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-fs";
    version = "0.1.3";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "10xy1qzc975xp1bjfr62k4rlwm0v9p57mfzfb3yr6zpr4a7hjdbg";
    inherit dependencies buildDependencies features;
  };
  tokio_io_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-io";
    version = "0.1.7";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "08r46b5lp7929agwal1iaabdhfv309wyvd6cld1g39x5ml8x7hp2";
    inherit dependencies buildDependencies features;
  };
  tokio_proto_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-proto";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "030q9h8pn1ngm80klff5irglxxki60hf5maw0mppmmr46k773z66";
    inherit dependencies buildDependencies features;
  };
  tokio_reactor_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-reactor";
    version = "0.1.3";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0b4da7wgvpj6dm3s5axfn4mmhr0id7w07hksclr4dcwcnn9kwn21";
    inherit dependencies buildDependencies features;
  };
  tokio_service_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-service";
    version = "0.1.0";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0c85wm5qz9fabg0k6k763j89m43n6max72d3a8sxcs940id6qmih";
    inherit dependencies buildDependencies features;
  };
  tokio_signal_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-signal";
    version = "0.1.5";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "1rqbb1n2kzzy3gqc4ha3rd3km1wdgy1mgbbngn5alpq9xvd4x1kz";
    inherit dependencies buildDependencies features;
  };
  tokio_tcp_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-tcp";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0ln4v75m417xs3chbi6ranmdrbl3scdd2hmgq4lvd8hps3gm6y27";
    inherit dependencies buildDependencies features;
  };
  tokio_threadpool_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-threadpool";
    version = "0.1.5";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "04nzjdjlir33s0z5nh3vh2h4v3vb1rwzv45jdjridrk92rqpb2vc";
    inherit dependencies buildDependencies features;
  };
  tokio_timer_0_2_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-timer";
    version = "0.2.5";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "0jyhizvnpldkbqvqygrg0zd5zvfj9p0ywvjzf47iy632vq3qnwzm";
    inherit dependencies buildDependencies features;
  };
  tokio_tls_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-tls";
    version = "0.1.4";
    authors = [ "Carl Lerche <me@carllerche.com>" "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07rwv3q6jbg65ln1ahzb4g648l8lcn4hvc0ax3r12bnsi1py7agp";
    inherit dependencies buildDependencies features;
  };
  tokio_udp_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tokio-udp";
    version = "0.1.1";
    authors = [ "Carl Lerche <me@carllerche.com>" ];
    sha256 = "1zsq3bny959dq7cnhdjrlaglrdcm63zn82jpkjs6nrrcfhb9l6z9";
    inherit dependencies buildDependencies features;
  };
  tremor_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tremor";
    version = "0.1.0";
    authors = [ "Paul Lietar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/plietar/rust-tremor";
       rev = "5958cc302e78f535dad90e9665da981ddff4000a";
       sha256 = "0brbhlbbydy909gsi50lcs6dqjsmmhl91a6pq869rgs2kn6mfwzn";
    };
    inherit dependencies buildDependencies features;
  };
  tremor_sys_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "tremor-sys";
    version = "0.1.0";
    authors = [ "Paul Lietar <paul@lietar.net>" ];
    src = fetchgit {
       url = "https://github.com/plietar/rust-tremor";
       rev = "5958cc302e78f535dad90e9665da981ddff4000a";
       sha256 = "0brbhlbbydy909gsi50lcs6dqjsmmhl91a6pq869rgs2kn6mfwzn";
    };
    inherit dependencies buildDependencies features;
  };
  try_lock_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "try-lock";
    version = "0.1.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "0kfrqrb2xkjig54s3qfy80dpldknr19p3rmp0n82yk5929j879k3";
    inherit dependencies buildDependencies features;
  };
  ucd_util_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ucd-util";
    version = "0.1.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "02a8h3siipx52b832xc8m8rwasj6nx9jpiwfldw8hp6k205hgkn0";
    inherit dependencies buildDependencies features;
  };
  unicase_1_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "1.4.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicase_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "2.1.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1zzn16hh8fdx5pnbbnl32q8m2mh4vpd1jm9pdcv969ik83dw4byp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-bidi";
    version = "0.3.4";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
    libName = "unicode_bidi";
    inherit dependencies buildDependencies features;
  };
  unicode_normalization_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-normalization";
    version = "0.1.7";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1da2hv800pd0wilmn4idwpgv5p510hjxizjcfv6xzb40xcsjd8gs";
    inherit dependencies buildDependencies features;
  };
  unicode_width_0_1_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-width";
    version = "0.1.5";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "0886lc2aymwgy0lhavwn6s48ik3c61ykzzd3za6prgnw51j7bi4w";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.0.4";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "1dc8wkkcd3s6534s5aw4lbjn8m67flkkbnajp5bl8408wdg8rh9v";
    inherit dependencies buildDependencies features;
  };
  unicode_xid_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-xid";
    version = "0.1.0";
    authors = [ "erick.tryzelaar <erick.tryzelaar@gmail.com>" "kwantam <kwantam@gmail.com>" ];
    sha256 = "05wdmwlfzxhq3nhsxn6wx4q8dhxzzfb9szsz6wiw092m1rjj01zj";
    inherit dependencies buildDependencies features;
  };
  unix_socket_0_5_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unix_socket";
    version = "0.5.0";
    authors = [ "Steven Fackler <sfackler@gmail.com>" ];
    sha256 = "0gc4g7lybvq31cr6a1jfmn5lgg328lwjr9278j9dq4py5dq3n70f";
    inherit dependencies buildDependencies features;
  };
  unreachable_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unreachable";
    version = "1.0.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1am8czbk5wwr25gbp2zr007744fxjshhdqjz9liz7wl4pnv3whcf";
    inherit dependencies buildDependencies features;
  };
  url_1_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "url";
    version = "1.7.1";
    authors = [ "The rust-url developers" ];
    sha256 = "1l36pbvlwdnh3zqz4wp5n6jg332wkis9pi2g3vy12xr8k4nfyk8i";
    inherit dependencies buildDependencies features;
  };
  utf8_ranges_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "utf8-ranges";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0rzmqprwjv9yp1n0qqgahgm24872x6c0xddfym5pfndy7a36vkn0";
    inherit dependencies buildDependencies features;
  };
  uuid_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.4.0";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1fzgp3ayz7g5zx4gvxkxxm9jkrllj5qlvlyp6r2an0wyqm2y9qlh";
    inherit dependencies buildDependencies features;
  };
  uuid_0_6_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "uuid";
    version = "0.6.5";
    authors = [ "Ashley Mannix<ashleymannix@live.com.au>" "Christopher Armstrong" "Dylan DPC<dylan.dpc@gmail.com>" "Hunar Roop Kahlon<hunar.roop@gmail.com>" ];
    sha256 = "1jy15m4yxxwma0jsy070garhbgfprky23i77rawjkk75vqhnnhlf";
    inherit dependencies buildDependencies features;
  };
  vcpkg_0_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vcpkg";
    version = "0.2.4";
    authors = [ "Jim McGrath <jimmc2@gmail.com>" ];
    sha256 = "0xgk5axv1qhj4rfn2rca7768wnvzihccnajkgc6im8ndsx371nml";
    inherit dependencies buildDependencies features;
  };
  vergen_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "vergen";
    version = "0.1.1";
    authors = [ "Jason Ozias <jason.g.ozias@gmail.com>" ];
    sha256 = "16vmhnn18i99p3nqb716wny7rw39jickpz42qxh462dlx8kan225";
    inherit dependencies buildDependencies features;
  };
  version_check_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "version_check";
    version = "0.1.4";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "1ghi6bw2qsj53x2vyprs883dbrq8cjzmshlamjsxvmwd2zp13bck";
    inherit dependencies buildDependencies features;
  };
  void_1_0_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "void";
    version = "1.0.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0h1dm0dx8dhf56a83k68mijyxigqhizpskwxfdrs1drwv2cdclv3";
    inherit dependencies buildDependencies features;
  };
  want_0_0_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "want";
    version = "0.0.4";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1l1qy4pvg5q71nrzfjldw9xzqhhgicj4slly1bal89hr2aaibpy0";
    inherit dependencies buildDependencies features;
  };
  webbrowser_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "webbrowser";
    version = "0.2.2";
    authors = [ "Amod Malviya @amodm" ];
    sha256 = "0hzxg56wpcr1f13j4vcypk6g63g0inyw15373zhan7376qwsfj5n";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_5_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.5";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0cfdsxa5yf832r5i2z7dhdvnryyvhfp3nb32gpcaq502zgjdm3w6";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  wincolor_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "wincolor";
    version = "1.0.0";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "0lagl9v8aipz774nyzg3hmsvyg6494bwi8cm5x8zl3p9zgrvmmjl";
    inherit dependencies buildDependencies features;
  };
  winutil_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winutil";
    version = "0.1.1";
    authors = [ "Dave Lancaster <lancaster.dave@gmail.com>" ];
    sha256 = "1wvq440hl1v3a65agjbp031gw5jim3qasfvmz703dlz95pbjv45r";
    inherit dependencies buildDependencies features;
  };
  ws2_32_sys_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ws2_32-sys";
    version = "0.2.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1zpy9d9wk11sj17fczfngcj28w4xxjs3b4n036yzpy38dxp4f7kc";
    libName = "ws2_32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  xdg_2_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "xdg";
    version = "2.1.0";
    authors = [ "Ben Longbons <b.r.longbons@gmail.com>" "whitequark <whitequark@whitequark.org>" ];
    sha256 = "1n7w46z4qah7m5dajy1h9pcwcj8r96cbi1xi5yq8cp0p3d765kkn";
    inherit dependencies buildDependencies features;
  };
  adler32_1_0_3 = { features?(adler32_1_0_3_features {}) }: adler32_1_0_3_ {};
  adler32_1_0_3_features = f: updateFeatures f (rec {
    adler32_1_0_3.default = (f.adler32_1_0_3.default or true);
  }) [];
  aho_corasick_0_6_6 = { features?(aho_corasick_0_6_6_features {}) }: aho_corasick_0_6_6_ {
    dependencies = mapFeatures features ([ memchr_2_0_1 ]);
  };
  aho_corasick_0_6_6_features = f: updateFeatures f (rec {
    aho_corasick_0_6_6.default = (f.aho_corasick_0_6_6.default or true);
    memchr_2_0_1.default = true;
  }) [ memchr_2_0_1_features ];
  alsa_0_0_1 = { features?(alsa_0_0_1_features {}) }: alsa_0_0_1_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  alsa_0_0_1_features = f: updateFeatures f (rec {
    alsa_0_0_1.default = (f.alsa_0_0_1.default or true);
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features ];
  alsa_0_2_0 = { features?(alsa_0_2_0_features {}) }: alsa_0_2_0_ {
    dependencies = mapFeatures features ([ alsa_sys_0_1_2 bitflags_0_9_1 libc_0_2_43 nix_0_9_0 ]);
  };
  alsa_0_2_0_features = f: updateFeatures f (rec {
    alsa_0_2_0.default = (f.alsa_0_2_0.default or true);
    alsa_sys_0_1_2.default = true;
    bitflags_0_9_1.default = true;
    libc_0_2_43.default = true;
    nix_0_9_0.default = true;
  }) [ alsa_sys_0_1_2_features bitflags_0_9_1_features libc_0_2_43_features nix_0_9_0_features ];
  alsa_sys_0_1_2 = { features?(alsa_sys_0_1_2_features {}) }: alsa_sys_0_1_2_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ pkg_config_0_3_13 ]);
  };
  alsa_sys_0_1_2_features = f: updateFeatures f (rec {
    alsa_sys_0_1_2.default = (f.alsa_sys_0_1_2.default or true);
    libc_0_2_43.default = true;
    pkg_config_0_3_13.default = true;
  }) [ libc_0_2_43_features pkg_config_0_3_13_features ];
  arrayvec_0_4_7 = { features?(arrayvec_0_4_7_features {}) }: arrayvec_0_4_7_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 ]);
    features = mkFeatures (features.arrayvec_0_4_7 or {});
  };
  arrayvec_0_4_7_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or true);
    arrayvec_0_4_7.serde =
      (f.arrayvec_0_4_7.serde or false) ||
      (f.arrayvec_0_4_7.serde-1 or false) ||
      (arrayvec_0_4_7.serde-1 or false);
    arrayvec_0_4_7.std =
      (f.arrayvec_0_4_7.std or false) ||
      (f.arrayvec_0_4_7.default or false) ||
      (arrayvec_0_4_7.default or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
  }) [ nodrop_0_1_12_features ];
  atty_0_2_11 = { features?(atty_0_2_11_features {}) }: atty_0_2_11_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ termion_1_5_1 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  atty_0_2_11_features = f: updateFeatures f (rec {
    atty_0_2_11.default = (f.atty_0_2_11.default or true);
    libc_0_2_43.default = (f.libc_0_2_43.default or false);
    termion_1_5_1.default = true;
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processenv = true;
    winapi_0_3_5.winbase = true;
  }) [ termion_1_5_1_features libc_0_2_43_features winapi_0_3_5_features ];
  backtrace_0_3_9 = { features?(backtrace_0_3_9_features {}) }: backtrace_0_3_9_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 rustc_demangle_0_1_9 ])
      ++ (if (kernel == "linux" || kernel == "darwin") && !(kernel == "fuchsia") && !(kernel == "emscripten") && !(kernel == "darwin") && !(kernel == "ios") then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9.backtrace-sys or false then [ backtrace_sys_0_1_23 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.backtrace_0_3_9.winapi or false then [ winapi_0_3_5 ] else [])) else []);
    features = mkFeatures (features.backtrace_0_3_9 or {});
  };
  backtrace_0_3_9_features = f: updateFeatures f (rec {
    backtrace_0_3_9.addr2line =
      (f.backtrace_0_3_9.addr2line or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.backtrace-sys =
      (f.backtrace_0_3_9.backtrace-sys or false) ||
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (backtrace_0_3_9.libbacktrace or false);
    backtrace_0_3_9.coresymbolication =
      (f.backtrace_0_3_9.coresymbolication or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.dbghelp =
      (f.backtrace_0_3_9.dbghelp or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.default = (f.backtrace_0_3_9.default or true);
    backtrace_0_3_9.dladdr =
      (f.backtrace_0_3_9.dladdr or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.findshlibs =
      (f.backtrace_0_3_9.findshlibs or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.gimli =
      (f.backtrace_0_3_9.gimli or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.libbacktrace =
      (f.backtrace_0_3_9.libbacktrace or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.libunwind =
      (f.backtrace_0_3_9.libunwind or false) ||
      (f.backtrace_0_3_9.default or false) ||
      (backtrace_0_3_9.default or false);
    backtrace_0_3_9.memmap =
      (f.backtrace_0_3_9.memmap or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.object =
      (f.backtrace_0_3_9.object or false) ||
      (f.backtrace_0_3_9.gimli-symbolize or false) ||
      (backtrace_0_3_9.gimli-symbolize or false);
    backtrace_0_3_9.rustc-serialize =
      (f.backtrace_0_3_9.rustc-serialize or false) ||
      (f.backtrace_0_3_9.serialize-rustc or false) ||
      (backtrace_0_3_9.serialize-rustc or false);
    backtrace_0_3_9.serde =
      (f.backtrace_0_3_9.serde or false) ||
      (f.backtrace_0_3_9.serialize-serde or false) ||
      (backtrace_0_3_9.serialize-serde or false);
    backtrace_0_3_9.serde_derive =
      (f.backtrace_0_3_9.serde_derive or false) ||
      (f.backtrace_0_3_9.serialize-serde or false) ||
      (backtrace_0_3_9.serialize-serde or false);
    backtrace_0_3_9.winapi =
      (f.backtrace_0_3_9.winapi or false) ||
      (f.backtrace_0_3_9.dbghelp or false) ||
      (backtrace_0_3_9.dbghelp or false);
    backtrace_sys_0_1_23.default = true;
    cfg_if_0_1_5.default = true;
    libc_0_2_43.default = true;
    rustc_demangle_0_1_9.default = true;
    winapi_0_3_5.dbghelp = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processthreadsapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winnt = true;
  }) [ cfg_if_0_1_5_features rustc_demangle_0_1_9_features backtrace_sys_0_1_23_features libc_0_2_43_features winapi_0_3_5_features ];
  backtrace_sys_0_1_23 = { features?(backtrace_sys_0_1_23_features {}) }: backtrace_sys_0_1_23_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ cc_1_0_18 ]);
  };
  backtrace_sys_0_1_23_features = f: updateFeatures f (rec {
    backtrace_sys_0_1_23.default = (f.backtrace_sys_0_1_23.default or true);
    cc_1_0_18.default = true;
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features cc_1_0_18_features ];
  base64_0_5_2 = { features?(base64_0_5_2_features {}) }: base64_0_5_2_ {
    dependencies = mapFeatures features ([ byteorder_1_2_4 ]);
  };
  base64_0_5_2_features = f: updateFeatures f (rec {
    base64_0_5_2.default = (f.base64_0_5_2.default or true);
    byteorder_1_2_4.default = true;
  }) [ byteorder_1_2_4_features ];
  base64_0_6_0 = { features?(base64_0_6_0_features {}) }: base64_0_6_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_4 safemem_0_2_0 ]);
  };
  base64_0_6_0_features = f: updateFeatures f (rec {
    base64_0_6_0.default = (f.base64_0_6_0.default or true);
    byteorder_1_2_4.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_4_features safemem_0_2_0_features ];
  base64_0_9_2 = { features?(base64_0_9_2_features {}) }: base64_0_9_2_ {
    dependencies = mapFeatures features ([ byteorder_1_2_4 safemem_0_2_0 ]);
  };
  base64_0_9_2_features = f: updateFeatures f (rec {
    base64_0_9_2.default = (f.base64_0_9_2.default or true);
    byteorder_1_2_4.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_4_features safemem_0_2_0_features ];
  bit_set_0_4_0 = { features?(bit_set_0_4_0_features {}) }: bit_set_0_4_0_ {
    dependencies = mapFeatures features ([ bit_vec_0_4_4 ]);
    features = mkFeatures (features.bit_set_0_4_0 or {});
  };
  bit_set_0_4_0_features = f: updateFeatures f (rec {
    bit_set_0_4_0.default = (f.bit_set_0_4_0.default or true);
    bit_vec_0_4_4.default = true;
  }) [ bit_vec_0_4_4_features ];
  bit_vec_0_4_4 = { features?(bit_vec_0_4_4_features {}) }: bit_vec_0_4_4_ {
    features = mkFeatures (features.bit_vec_0_4_4 or {});
  };
  bit_vec_0_4_4_features = f: updateFeatures f (rec {
    bit_vec_0_4_4.default = (f.bit_vec_0_4_4.default or true);
  }) [];
  bitflags_0_3_3 = { features?(bitflags_0_3_3_features {}) }: bitflags_0_3_3_ {};
  bitflags_0_3_3_features = f: updateFeatures f (rec {
    bitflags_0_3_3.default = (f.bitflags_0_3_3.default or true);
  }) [];
  bitflags_0_7_0 = { features?(bitflags_0_7_0_features {}) }: bitflags_0_7_0_ {};
  bitflags_0_7_0_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = (f.bitflags_0_7_0.default or true);
  }) [];
  bitflags_0_9_1 = { features?(bitflags_0_9_1_features {}) }: bitflags_0_9_1_ {
    features = mkFeatures (features.bitflags_0_9_1 or {});
  };
  bitflags_0_9_1_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = (f.bitflags_0_9_1.default or true);
    bitflags_0_9_1.example_generated =
      (f.bitflags_0_9_1.example_generated or false) ||
      (f.bitflags_0_9_1.default or false) ||
      (bitflags_0_9_1.default or false);
  }) [];
  bitflags_1_0_3 = { features?(bitflags_1_0_3_features {}) }: bitflags_1_0_3_ {
    features = mkFeatures (features.bitflags_1_0_3 or {});
  };
  bitflags_1_0_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = (f.bitflags_1_0_3.default or true);
  }) [];
  build_const_0_2_1 = { features?(build_const_0_2_1_features {}) }: build_const_0_2_1_ {
    features = mkFeatures (features.build_const_0_2_1 or {});
  };
  build_const_0_2_1_features = f: updateFeatures f (rec {
    build_const_0_2_1.default = (f.build_const_0_2_1.default or true);
    build_const_0_2_1.std =
      (f.build_const_0_2_1.std or false) ||
      (f.build_const_0_2_1.default or false) ||
      (build_const_0_2_1.default or false);
  }) [];
  byteorder_0_5_3 = { features?(byteorder_0_5_3_features {}) }: byteorder_0_5_3_ {
    features = mkFeatures (features.byteorder_0_5_3 or {});
  };
  byteorder_0_5_3_features = f: updateFeatures f (rec {
    byteorder_0_5_3.default = (f.byteorder_0_5_3.default or true);
    byteorder_0_5_3.std =
      (f.byteorder_0_5_3.std or false) ||
      (f.byteorder_0_5_3.default or false) ||
      (byteorder_0_5_3.default or false);
  }) [];
  byteorder_1_2_4 = { features?(byteorder_1_2_4_features {}) }: byteorder_1_2_4_ {
    features = mkFeatures (features.byteorder_1_2_4 or {});
  };
  byteorder_1_2_4_features = f: updateFeatures f (rec {
    byteorder_1_2_4.default = (f.byteorder_1_2_4.default or true);
    byteorder_1_2_4.std =
      (f.byteorder_1_2_4.std or false) ||
      (f.byteorder_1_2_4.default or false) ||
      (byteorder_1_2_4.default or false);
  }) [];
  bytes_0_4_9 = { features?(bytes_0_4_9_features {}) }: bytes_0_4_9_ {
    dependencies = mapFeatures features ([ byteorder_1_2_4 iovec_0_1_2 ]);
    features = mkFeatures (features.bytes_0_4_9 or {});
  };
  bytes_0_4_9_features = f: updateFeatures f (rec {
    byteorder_1_2_4.default = true;
    byteorder_1_2_4.i128 =
      (f.byteorder_1_2_4.i128 or false) ||
      (bytes_0_4_9.i128 or false) ||
      (f.bytes_0_4_9.i128 or false);
    bytes_0_4_9.default = (f.bytes_0_4_9.default or true);
    iovec_0_1_2.default = true;
  }) [ byteorder_1_2_4_features iovec_0_1_2_features ];
  c_linked_list_1_1_1 = { features?(c_linked_list_1_1_1_features {}) }: c_linked_list_1_1_1_ {};
  c_linked_list_1_1_1_features = f: updateFeatures f (rec {
    c_linked_list_1_1_1.default = (f.c_linked_list_1_1_1.default or true);
  }) [];
  cc_1_0_18 = { features?(cc_1_0_18_features {}) }: cc_1_0_18_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.cc_1_0_18 or {});
  };
  cc_1_0_18_features = f: updateFeatures f (rec {
    cc_1_0_18.default = (f.cc_1_0_18.default or true);
    cc_1_0_18.rayon =
      (f.cc_1_0_18.rayon or false) ||
      (f.cc_1_0_18.parallel or false) ||
      (cc_1_0_18.parallel or false);
  }) [];
  cfg_if_0_1_5 = { features?(cfg_if_0_1_5_features {}) }: cfg_if_0_1_5_ {};
  cfg_if_0_1_5_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = (f.cfg_if_0_1_5.default or true);
  }) [];
  chrono_0_4_5 = { features?(chrono_0_4_5_features {}) }: chrono_0_4_5_ {
    dependencies = mapFeatures features ([ num_integer_0_1_39 num_traits_0_2_5 ]
      ++ (if features.chrono_0_4_5.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else [])
      ++ (if features.chrono_0_4_5.serde or false then [ serde_1_0_71 ] else [])
      ++ (if features.chrono_0_4_5.time or false then [ time_0_1_40 ] else []));
    features = mkFeatures (features.chrono_0_4_5 or {});
  };
  chrono_0_4_5_features = f: updateFeatures f (rec {
    chrono_0_4_5.clock =
      (f.chrono_0_4_5.clock or false) ||
      (f.chrono_0_4_5.default or false) ||
      (chrono_0_4_5.default or false);
    chrono_0_4_5.default = (f.chrono_0_4_5.default or true);
    chrono_0_4_5.time =
      (f.chrono_0_4_5.time or false) ||
      (f.chrono_0_4_5.clock or false) ||
      (chrono_0_4_5.clock or false);
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    rustc_serialize_0_3_24.default = true;
    serde_1_0_71.default = true;
    time_0_1_40.default = true;
  }) [ num_integer_0_1_39_features num_traits_0_2_5_features rustc_serialize_0_3_24_features serde_1_0_71_features time_0_1_40_features ];
  cloudabi_0_0_3 = { features?(cloudabi_0_0_3_features {}) }: cloudabi_0_0_3_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.cloudabi_0_0_3.bitflags or false then [ bitflags_1_0_3 ] else []));
    features = mkFeatures (features.cloudabi_0_0_3 or {});
  };
  cloudabi_0_0_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = true;
    cloudabi_0_0_3.bitflags =
      (f.cloudabi_0_0_3.bitflags or false) ||
      (f.cloudabi_0_0_3.default or false) ||
      (cloudabi_0_0_3.default or false);
    cloudabi_0_0_3.default = (f.cloudabi_0_0_3.default or true);
  }) [ bitflags_1_0_3_features ];
  core_foundation_0_2_3 = { features?(core_foundation_0_2_3_features {}) }: core_foundation_0_2_3_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_43 ]);
  };
  core_foundation_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = (f.core_foundation_0_2_3.default or true);
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_43.default = true;
  }) [ core_foundation_sys_0_2_3_features libc_0_2_43_features ];
  core_foundation_sys_0_2_3 = { features?(core_foundation_sys_0_2_3_features {}) }: core_foundation_sys_0_2_3_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  core_foundation_sys_0_2_3_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = (f.core_foundation_sys_0_2_3.default or true);
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features ];
  crc_1_8_1 = { features?(crc_1_8_1_features {}) }: crc_1_8_1_ {
    buildDependencies = mapFeatures features ([ build_const_0_2_1 ]);
    features = mkFeatures (features.crc_1_8_1 or {});
  };
  crc_1_8_1_features = f: updateFeatures f (rec {
    build_const_0_2_1.default = true;
    crc_1_8_1.default = (f.crc_1_8_1.default or true);
    crc_1_8_1.std =
      (f.crc_1_8_1.std or false) ||
      (f.crc_1_8_1.default or false) ||
      (crc_1_8_1.default or false);
  }) [ build_const_0_2_1_features ];
  crossbeam_deque_0_3_1 = { features?(crossbeam_deque_0_3_1_features {}) }: crossbeam_deque_0_3_1_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_4_3 crossbeam_utils_0_3_2 ]);
  };
  crossbeam_deque_0_3_1_features = f: updateFeatures f (rec {
    crossbeam_deque_0_3_1.default = (f.crossbeam_deque_0_3_1.default or true);
    crossbeam_epoch_0_4_3.default = true;
    crossbeam_utils_0_3_2.default = true;
  }) [ crossbeam_epoch_0_4_3_features crossbeam_utils_0_3_2_features ];
  crossbeam_epoch_0_4_3 = { features?(crossbeam_epoch_0_4_3_features {}) }: crossbeam_epoch_0_4_3_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_5 crossbeam_utils_0_3_2 memoffset_0_2_1 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_4_3.lazy_static or false then [ lazy_static_1_1_0 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_4_3 or {});
  };
  crossbeam_epoch_0_4_3_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_4_3.nightly or false) ||
      (f.crossbeam_epoch_0_4_3.nightly or false);
    cfg_if_0_1_5.default = true;
    crossbeam_epoch_0_4_3.default = (f.crossbeam_epoch_0_4_3.default or true);
    crossbeam_epoch_0_4_3.lazy_static =
      (f.crossbeam_epoch_0_4_3.lazy_static or false) ||
      (f.crossbeam_epoch_0_4_3.use_std or false) ||
      (crossbeam_epoch_0_4_3.use_std or false);
    crossbeam_epoch_0_4_3.use_std =
      (f.crossbeam_epoch_0_4_3.use_std or false) ||
      (f.crossbeam_epoch_0_4_3.default or false) ||
      (crossbeam_epoch_0_4_3.default or false);
    crossbeam_utils_0_3_2.default = (f.crossbeam_utils_0_3_2.default or false);
    crossbeam_utils_0_3_2.use_std =
      (f.crossbeam_utils_0_3_2.use_std or false) ||
      (crossbeam_epoch_0_4_3.use_std or false) ||
      (f.crossbeam_epoch_0_4_3.use_std or false);
    lazy_static_1_1_0.default = true;
    memoffset_0_2_1.default = true;
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_5_features crossbeam_utils_0_3_2_features lazy_static_1_1_0_features memoffset_0_2_1_features scopeguard_0_3_3_features ];
  crossbeam_utils_0_3_2 = { features?(crossbeam_utils_0_3_2_features {}) }: crossbeam_utils_0_3_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ]);
    features = mkFeatures (features.crossbeam_utils_0_3_2 or {});
  };
  crossbeam_utils_0_3_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    crossbeam_utils_0_3_2.default = (f.crossbeam_utils_0_3_2.default or true);
    crossbeam_utils_0_3_2.use_std =
      (f.crossbeam_utils_0_3_2.use_std or false) ||
      (f.crossbeam_utils_0_3_2.default or false) ||
      (crossbeam_utils_0_3_2.default or false);
  }) [ cfg_if_0_1_5_features ];
  ctrlc_3_1_1 = { features?(ctrlc_3_1_1_features {}) }: ctrlc_3_1_1_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ nix_0_11_0 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.ctrlc_3_1_1 or {});
  };
  ctrlc_3_1_1_features = f: updateFeatures f (rec {
    ctrlc_3_1_1.default = (f.ctrlc_3_1_1.default or true);
    nix_0_11_0.default = true;
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.handleapi = true;
    winapi_0_3_5.synchapi = true;
    winapi_0_3_5.winbase = true;
  }) [ nix_0_11_0_features winapi_0_3_5_features ];
  daemonize_0_2_3 = { features?(daemonize_0_2_3_features {}) }: daemonize_0_2_3_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  daemonize_0_2_3_features = f: updateFeatures f (rec {
    daemonize_0_2_3.default = (f.daemonize_0_2_3.default or true);
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features ];
  dbus_0_6_2 = { features?(dbus_0_6_2_features {}) }: dbus_0_6_2_ {
    dependencies = mapFeatures features ([ libc_0_2_43 libdbus_sys_0_1_3 ]);
    features = mkFeatures (features.dbus_0_6_2 or {});
  };
  dbus_0_6_2_features = f: updateFeatures f (rec {
    dbus_0_6_2.default = (f.dbus_0_6_2.default or true);
    libc_0_2_43.default = true;
    libdbus_sys_0_1_3.default = true;
  }) [ libc_0_2_43_features libdbus_sys_0_1_3_features ];
  dbus_tokio_0_2_1 = { features?(dbus_tokio_0_2_1_features {}) }: dbus_tokio_0_2_1_ {
    dependencies = mapFeatures features ([ dbus_0_6_2 futures_0_1_23 log_0_3_9 mio_0_6_15 tokio_core_0_1_17 ]);
  };
  dbus_tokio_0_2_1_features = f: updateFeatures f (rec {
    dbus_0_6_2.default = true;
    dbus_tokio_0_2_1.default = (f.dbus_tokio_0_2_1.default or true);
    futures_0_1_23.default = true;
    log_0_3_9.default = true;
    mio_0_6_15.default = true;
    tokio_core_0_1_17.default = true;
  }) [ dbus_0_6_2_features futures_0_1_23_features log_0_3_9_features mio_0_6_15_features tokio_core_0_1_17_features ];
  derive_error_chain_0_10_1 = { features?(derive_error_chain_0_10_1_features {}) }: derive_error_chain_0_10_1_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
  };
  derive_error_chain_0_10_1_features = f: updateFeatures f (rec {
    derive_error_chain_0_10_1.default = (f.derive_error_chain_0_10_1.default or true);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
    syn_0_11_11.full = true;
    syn_0_11_11.parsing = true;
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  derive_builder_0_5_1 = { features?(derive_builder_0_5_1_features {}) }: derive_builder_0_5_1_ {
    dependencies = mapFeatures features ([ derive_builder_core_0_2_0 quote_0_3_15 syn_0_11_11 ]);
    buildDependencies = mapFeatures features ([]);
    features = mkFeatures (features.derive_builder_0_5_1 or {});
  };
  derive_builder_0_5_1_features = f: updateFeatures f (rec {
    derive_builder_0_5_1.compiletest_rs =
      (f.derive_builder_0_5_1.compiletest_rs or false) ||
      (f.derive_builder_0_5_1.nightlytests or false) ||
      (derive_builder_0_5_1.nightlytests or false);
    derive_builder_0_5_1.default = (f.derive_builder_0_5_1.default or true);
    derive_builder_0_5_1.env_logger =
      (f.derive_builder_0_5_1.env_logger or false) ||
      (f.derive_builder_0_5_1.logging or false) ||
      (derive_builder_0_5_1.logging or false);
    derive_builder_0_5_1.log =
      (f.derive_builder_0_5_1.log or false) ||
      (f.derive_builder_0_5_1.logging or false) ||
      (derive_builder_0_5_1.logging or false);
    derive_builder_0_5_1.skeptic =
      (f.derive_builder_0_5_1.skeptic or false) ||
      (f.derive_builder_0_5_1.skeptic_tests or false) ||
      (derive_builder_0_5_1.skeptic_tests or false);
    derive_builder_core_0_2_0.default = true;
    derive_builder_core_0_2_0.logging =
      (f.derive_builder_core_0_2_0.logging or false) ||
      (derive_builder_0_5_1.logging or false) ||
      (f.derive_builder_0_5_1.logging or false);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
  }) [ derive_builder_core_0_2_0_features quote_0_3_15_features syn_0_11_11_features ];
  derive_builder_core_0_2_0 = { features?(derive_builder_core_0_2_0_features {}) }: derive_builder_core_0_2_0_ {
    dependencies = mapFeatures features ([ quote_0_3_15 syn_0_11_11 ]);
    features = mkFeatures (features.derive_builder_core_0_2_0 or {});
  };
  derive_builder_core_0_2_0_features = f: updateFeatures f (rec {
    derive_builder_core_0_2_0.default = (f.derive_builder_core_0_2_0.default or true);
    derive_builder_core_0_2_0.log =
      (f.derive_builder_core_0_2_0.log or false) ||
      (f.derive_builder_core_0_2_0.logging or false) ||
      (derive_builder_core_0_2_0.logging or false);
    quote_0_3_15.default = true;
    syn_0_11_11.default = true;
  }) [ quote_0_3_15_features syn_0_11_11_features ];
  dns_parser_0_3_2 = { features?(dns_parser_0_3_2_features {}) }: dns_parser_0_3_2_ {
    dependencies = mapFeatures features ([ byteorder_0_5_3 matches_0_1_7 quick_error_1_2_2 ]);
  };
  dns_parser_0_3_2_features = f: updateFeatures f (rec {
    byteorder_0_5_3.default = true;
    dns_parser_0_3_2.default = (f.dns_parser_0_3_2.default or true);
    matches_0_1_7.default = true;
    quick_error_1_2_2.default = true;
  }) [ byteorder_0_5_3_features matches_0_1_7_features quick_error_1_2_2_features ];
  dotenv_0_10_1 = { features?(dotenv_0_10_1_features {}) }: dotenv_0_10_1_ {
    dependencies = mapFeatures features ([ derive_error_chain_0_10_1 error_chain_0_10_0 regex_0_2_11 ]);
    features = mkFeatures (features.dotenv_0_10_1 or {});
  };
  dotenv_0_10_1_features = f: updateFeatures f (rec {
    derive_error_chain_0_10_1.default = true;
    dotenv_0_10_1.backtrace =
      (f.dotenv_0_10_1.backtrace or false) ||
      (f.dotenv_0_10_1.default or false) ||
      (dotenv_0_10_1.default or false);
    dotenv_0_10_1.default = (f.dotenv_0_10_1.default or true);
    error_chain_0_10_0.backtrace =
      (f.error_chain_0_10_0.backtrace or false) ||
      (dotenv_0_10_1.backtrace or false) ||
      (f.dotenv_0_10_1.backtrace or false);
    error_chain_0_10_0.default = (f.error_chain_0_10_0.default or false);
    regex_0_2_11.default = true;
  }) [ derive_error_chain_0_10_1_features error_chain_0_10_0_features regex_0_2_11_features ];
  dtoa_0_4_3 = { features?(dtoa_0_4_3_features {}) }: dtoa_0_4_3_ {};
  dtoa_0_4_3_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = (f.dtoa_0_4_3.default or true);
  }) [];
  either_1_5_0 = { features?(either_1_5_0_features {}) }: either_1_5_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.either_1_5_0 or {});
  };
  either_1_5_0_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or true);
    either_1_5_0.use_std =
      (f.either_1_5_0.use_std or false) ||
      (f.either_1_5_0.default or false) ||
      (either_1_5_0.default or false);
  }) [];
  encoding_rs_0_7_2 = { features?(encoding_rs_0_7_2_features {}) }: encoding_rs_0_7_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ]);
    features = mkFeatures (features.encoding_rs_0_7_2 or {});
  };
  encoding_rs_0_7_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    encoding_rs_0_7_2.default = (f.encoding_rs_0_7_2.default or true);
    encoding_rs_0_7_2.simd =
      (f.encoding_rs_0_7_2.simd or false) ||
      (f.encoding_rs_0_7_2.simd-accel or false) ||
      (encoding_rs_0_7_2.simd-accel or false);
  }) [ cfg_if_0_1_5_features ];
  env_logger_0_4_3 = { features?(env_logger_0_4_3_features {}) }: env_logger_0_4_3_ {
    dependencies = mapFeatures features ([ log_0_3_9 ]
      ++ (if features.env_logger_0_4_3.regex or false then [ regex_0_2_11 ] else []));
    features = mkFeatures (features.env_logger_0_4_3 or {});
  };
  env_logger_0_4_3_features = f: updateFeatures f (rec {
    env_logger_0_4_3.default = (f.env_logger_0_4_3.default or true);
    env_logger_0_4_3.regex =
      (f.env_logger_0_4_3.regex or false) ||
      (f.env_logger_0_4_3.default or false) ||
      (env_logger_0_4_3.default or false);
    log_0_3_9.default = true;
    regex_0_2_11.default = true;
  }) [ log_0_3_9_features regex_0_2_11_features ];
  env_logger_0_5_12 = { features?(env_logger_0_5_12_features {}) }: env_logger_0_5_12_ {
    dependencies = mapFeatures features ([ atty_0_2_11 humantime_1_1_1 log_0_4_3 termcolor_1_0_1 ]
      ++ (if features.env_logger_0_5_12.regex or false then [ regex_1_0_2 ] else []));
    features = mkFeatures (features.env_logger_0_5_12 or {});
  };
  env_logger_0_5_12_features = f: updateFeatures f (rec {
    atty_0_2_11.default = true;
    env_logger_0_5_12.default = (f.env_logger_0_5_12.default or true);
    env_logger_0_5_12.regex =
      (f.env_logger_0_5_12.regex or false) ||
      (f.env_logger_0_5_12.default or false) ||
      (env_logger_0_5_12.default or false);
    humantime_1_1_1.default = true;
    log_0_4_3.default = true;
    log_0_4_3.std = true;
    regex_1_0_2.default = true;
    termcolor_1_0_1.default = true;
  }) [ atty_0_2_11_features humantime_1_1_1_features log_0_4_3_features regex_1_0_2_features termcolor_1_0_1_features ];
  error_chain_0_10_0 = { features?(error_chain_0_10_0_features {}) }: error_chain_0_10_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.error_chain_0_10_0.backtrace or false then [ backtrace_0_3_9 ] else []));
    features = mkFeatures (features.error_chain_0_10_0 or {});
  };
  error_chain_0_10_0_features = f: updateFeatures f (rec {
    backtrace_0_3_9.default = true;
    error_chain_0_10_0.backtrace =
      (f.error_chain_0_10_0.backtrace or false) ||
      (f.error_chain_0_10_0.default or false) ||
      (error_chain_0_10_0.default or false);
    error_chain_0_10_0.default = (f.error_chain_0_10_0.default or true);
    error_chain_0_10_0.example_generated =
      (f.error_chain_0_10_0.example_generated or false) ||
      (f.error_chain_0_10_0.default or false) ||
      (error_chain_0_10_0.default or false);
  }) [ backtrace_0_3_9_features ];
  error_chain_0_11_0 = { features?(error_chain_0_11_0_features {}) }: error_chain_0_11_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.error_chain_0_11_0 or {});
  };
  error_chain_0_11_0_features = f: updateFeatures f (rec {
    error_chain_0_11_0.backtrace =
      (f.error_chain_0_11_0.backtrace or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
    error_chain_0_11_0.default = (f.error_chain_0_11_0.default or true);
    error_chain_0_11_0.example_generated =
      (f.error_chain_0_11_0.example_generated or false) ||
      (f.error_chain_0_11_0.default or false) ||
      (error_chain_0_11_0.default or false);
  }) [];
  extprim_1_6_0 = { features?(extprim_1_6_0_features {}) }: extprim_1_6_0_ {
    dependencies = mapFeatures features ([ num_traits_0_2_5 ]
      ++ (if features.extprim_1_6_0.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.extprim_1_6_0.serde or false then [ serde_1_0_71 ] else []));
    buildDependencies = mapFeatures features ([ rustc_version_0_2_3 semver_0_9_0 ]);
    features = mkFeatures (features.extprim_1_6_0 or {});
  };
  extprim_1_6_0_features = f: updateFeatures f (rec {
    extprim_1_6_0.default = (f.extprim_1_6_0.default or true);
    extprim_1_6_0.rand =
      (f.extprim_1_6_0.rand or false) ||
      (f.extprim_1_6_0.default or false) ||
      (extprim_1_6_0.default or false);
    extprim_1_6_0.serde =
      (f.extprim_1_6_0.serde or false) ||
      (f.extprim_1_6_0.default or false) ||
      (extprim_1_6_0.default or false);
    extprim_1_6_0.use-std =
      (f.extprim_1_6_0.use-std or false) ||
      (f.extprim_1_6_0.default or false) ||
      (extprim_1_6_0.default or false);
    num_traits_0_2_5.default = true;
    rand_0_4_2.default = true;
    rustc_version_0_2_3.default = true;
    semver_0_9_0.default = true;
    serde_1_0_71.default = true;
    serde_1_0_71.derive = true;
  }) [ num_traits_0_2_5_features rand_0_4_2_features serde_1_0_71_features rustc_version_0_2_3_features semver_0_9_0_features ];
  failure_0_1_2 = { features?(failure_0_1_2_features {}) }: failure_0_1_2_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.failure_0_1_2.backtrace or false then [ backtrace_0_3_9 ] else [])
      ++ (if features.failure_0_1_2.failure_derive or false then [ failure_derive_0_1_2 ] else []));
    features = mkFeatures (features.failure_0_1_2 or {});
  };
  failure_0_1_2_features = f: updateFeatures f (rec {
    backtrace_0_3_9.default = true;
    failure_0_1_2.backtrace =
      (f.failure_0_1_2.backtrace or false) ||
      (f.failure_0_1_2.std or false) ||
      (failure_0_1_2.std or false);
    failure_0_1_2.default = (f.failure_0_1_2.default or true);
    failure_0_1_2.derive =
      (f.failure_0_1_2.derive or false) ||
      (f.failure_0_1_2.default or false) ||
      (failure_0_1_2.default or false);
    failure_0_1_2.failure_derive =
      (f.failure_0_1_2.failure_derive or false) ||
      (f.failure_0_1_2.derive or false) ||
      (failure_0_1_2.derive or false);
    failure_0_1_2.std =
      (f.failure_0_1_2.std or false) ||
      (f.failure_0_1_2.default or false) ||
      (failure_0_1_2.default or false);
    failure_derive_0_1_2.default = true;
  }) [ backtrace_0_3_9_features failure_derive_0_1_2_features ];
  failure_derive_0_1_2 = { features?(failure_derive_0_1_2_features {}) }: failure_derive_0_1_2_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_12 quote_0_6_6 syn_0_14_8 synstructure_0_9_0 ]);
    features = mkFeatures (features.failure_derive_0_1_2 or {});
  };
  failure_derive_0_1_2_features = f: updateFeatures f (rec {
    failure_derive_0_1_2.default = (f.failure_derive_0_1_2.default or true);
    proc_macro2_0_4_12.default = true;
    quote_0_6_6.default = true;
    syn_0_14_8.default = true;
    synstructure_0_9_0.default = true;
  }) [ proc_macro2_0_4_12_features quote_0_6_6_features syn_0_14_8_features synstructure_0_9_0_features ];
  foreign_types_0_3_2 = { features?(foreign_types_0_3_2_features {}) }: foreign_types_0_3_2_ {
    dependencies = mapFeatures features ([ foreign_types_shared_0_1_1 ]);
  };
  foreign_types_0_3_2_features = f: updateFeatures f (rec {
    foreign_types_0_3_2.default = (f.foreign_types_0_3_2.default or true);
    foreign_types_shared_0_1_1.default = true;
  }) [ foreign_types_shared_0_1_1_features ];
  foreign_types_shared_0_1_1 = { features?(foreign_types_shared_0_1_1_features {}) }: foreign_types_shared_0_1_1_ {};
  foreign_types_shared_0_1_1_features = f: updateFeatures f (rec {
    foreign_types_shared_0_1_1.default = (f.foreign_types_shared_0_1_1.default or true);
  }) [];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_3 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_3_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  futures_0_1_23 = { features?(futures_0_1_23_features {}) }: futures_0_1_23_ {
    features = mkFeatures (features.futures_0_1_23 or {});
  };
  futures_0_1_23_features = f: updateFeatures f (rec {
    futures_0_1_23.default = (f.futures_0_1_23.default or true);
    futures_0_1_23.use_std =
      (f.futures_0_1_23.use_std or false) ||
      (f.futures_0_1_23.default or false) ||
      (futures_0_1_23.default or false);
    futures_0_1_23.with-deprecated =
      (f.futures_0_1_23.with-deprecated or false) ||
      (f.futures_0_1_23.default or false) ||
      (futures_0_1_23.default or false);
  }) [];
  futures_cpupool_0_1_8 = { features?(futures_cpupool_0_1_8_features {}) }: futures_cpupool_0_1_8_ {
    dependencies = mapFeatures features ([ futures_0_1_23 num_cpus_1_8_0 ]);
    features = mkFeatures (features.futures_cpupool_0_1_8 or {});
  };
  futures_cpupool_0_1_8_features = f: updateFeatures f (rec {
    futures_0_1_23.default = (f.futures_0_1_23.default or false);
    futures_0_1_23.use_std = true;
    futures_0_1_23.with-deprecated =
      (f.futures_0_1_23.with-deprecated or false) ||
      (futures_cpupool_0_1_8.with-deprecated or false) ||
      (f.futures_cpupool_0_1_8.with-deprecated or false);
    futures_cpupool_0_1_8.default = (f.futures_cpupool_0_1_8.default or true);
    futures_cpupool_0_1_8.with-deprecated =
      (f.futures_cpupool_0_1_8.with-deprecated or false) ||
      (f.futures_cpupool_0_1_8.default or false) ||
      (futures_cpupool_0_1_8.default or false);
    num_cpus_1_8_0.default = true;
  }) [ futures_0_1_23_features num_cpus_1_8_0_features ];
  gcc_0_3_54 = { features?(gcc_0_3_54_features {}) }: gcc_0_3_54_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.gcc_0_3_54 or {});
  };
  gcc_0_3_54_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = (f.gcc_0_3_54.default or true);
    gcc_0_3_54.rayon =
      (f.gcc_0_3_54.rayon or false) ||
      (f.gcc_0_3_54.parallel or false) ||
      (gcc_0_3_54.parallel or false);
  }) [];
  get_if_addrs_0_5_3 = { features?(get_if_addrs_0_5_3_features {}) }: get_if_addrs_0_5_3_ {
    dependencies = mapFeatures features ([ c_linked_list_1_1_1 libc_0_2_43 ])
      ++ (if kernel == "android" then mapFeatures features ([ get_if_addrs_sys_0_1_1 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_2_8 ]) else []);
  };
  get_if_addrs_0_5_3_features = f: updateFeatures f (rec {
    c_linked_list_1_1_1.default = true;
    get_if_addrs_0_5_3.default = (f.get_if_addrs_0_5_3.default or true);
    get_if_addrs_sys_0_1_1.default = true;
    libc_0_2_43.default = true;
    winapi_0_2_8.default = true;
  }) [ c_linked_list_1_1_1_features libc_0_2_43_features get_if_addrs_sys_0_1_1_features winapi_0_2_8_features ];
  get_if_addrs_sys_0_1_1 = { features?(get_if_addrs_sys_0_1_1_features {}) }: get_if_addrs_sys_0_1_1_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 ]);
  };
  get_if_addrs_sys_0_1_1_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = true;
    get_if_addrs_sys_0_1_1.default = (f.get_if_addrs_sys_0_1_1.default or true);
    libc_0_2_43.default = true;
  }) [ libc_0_2_43_features gcc_0_3_54_features ];
  getopts_0_2_18 = { features?(getopts_0_2_18_features {}) }: getopts_0_2_18_ {
    dependencies = mapFeatures features ([ unicode_width_0_1_5 ]);
  };
  getopts_0_2_18_features = f: updateFeatures f (rec {
    getopts_0_2_18.default = (f.getopts_0_2_18.default or true);
    unicode_width_0_1_5.default = true;
  }) [ unicode_width_0_1_5_features ];
  hostname_0_1_5 = { features?(hostname_0_1_5_features {}) }: hostname_0_1_5_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") || kernel == "redox" then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winutil_0_1_1 ]) else []);
    features = mkFeatures (features.hostname_0_1_5 or {});
  };
  hostname_0_1_5_features = f: updateFeatures f (rec {
    hostname_0_1_5.default = (f.hostname_0_1_5.default or true);
    libc_0_2_43.default = true;
    winutil_0_1_1.default = true;
  }) [ libc_0_2_43_features winutil_0_1_1_features ];
  httparse_1_3_2 = { features?(httparse_1_3_2_features {}) }: httparse_1_3_2_ {
    features = mkFeatures (features.httparse_1_3_2 or {});
  };
  httparse_1_3_2_features = f: updateFeatures f (rec {
    httparse_1_3_2.default = (f.httparse_1_3_2.default or true);
    httparse_1_3_2.std =
      (f.httparse_1_3_2.std or false) ||
      (f.httparse_1_3_2.default or false) ||
      (httparse_1_3_2.default or false);
  }) [];
  humantime_1_1_1 = { features?(humantime_1_1_1_features {}) }: humantime_1_1_1_ {
    dependencies = mapFeatures features ([ quick_error_1_2_2 ]);
  };
  humantime_1_1_1_features = f: updateFeatures f (rec {
    humantime_1_1_1.default = (f.humantime_1_1_1.default or true);
    quick_error_1_2_2.default = true;
  }) [ quick_error_1_2_2_features ];
  hyper_0_11_27 = { features?(hyper_0_11_27_features {}) }: hyper_0_11_27_ {
    dependencies = mapFeatures features ([ base64_0_9_2 bytes_0_4_9 futures_0_1_23 futures_cpupool_0_1_8 httparse_1_3_2 iovec_0_1_2 language_tags_0_2_2 log_0_4_3 mime_0_3_9 net2_0_2_33 percent_encoding_1_0_1 relay_0_1_1 time_0_1_40 tokio_core_0_1_17 tokio_io_0_1_7 tokio_service_0_1_0 unicase_2_1_0 want_0_0_4 ]
      ++ (if features.hyper_0_11_27.tokio-proto or false then [ tokio_proto_0_1_1 ] else []));
    features = mkFeatures (features.hyper_0_11_27 or {});
  };
  hyper_0_11_27_features = f: updateFeatures f (rec {
    base64_0_9_2.default = true;
    bytes_0_4_9.default = true;
    futures_0_1_23.default = true;
    futures_cpupool_0_1_8.default = true;
    httparse_1_3_2.default = true;
    hyper_0_11_27.default = (f.hyper_0_11_27.default or true);
    hyper_0_11_27.http =
      (f.hyper_0_11_27.http or false) ||
      (f.hyper_0_11_27.compat or false) ||
      (hyper_0_11_27.compat or false);
    hyper_0_11_27.server-proto =
      (f.hyper_0_11_27.server-proto or false) ||
      (f.hyper_0_11_27.default or false) ||
      (hyper_0_11_27.default or false);
    hyper_0_11_27.tokio-proto =
      (f.hyper_0_11_27.tokio-proto or false) ||
      (f.hyper_0_11_27.server-proto or false) ||
      (hyper_0_11_27.server-proto or false);
    iovec_0_1_2.default = true;
    language_tags_0_2_2.default = true;
    log_0_4_3.default = true;
    mime_0_3_9.default = true;
    net2_0_2_33.default = true;
    percent_encoding_1_0_1.default = true;
    relay_0_1_1.default = true;
    time_0_1_40.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    tokio_proto_0_1_1.default = true;
    tokio_service_0_1_0.default = true;
    unicase_2_1_0.default = true;
    want_0_0_4.default = true;
  }) [ base64_0_9_2_features bytes_0_4_9_features futures_0_1_23_features futures_cpupool_0_1_8_features httparse_1_3_2_features iovec_0_1_2_features language_tags_0_2_2_features log_0_4_3_features mime_0_3_9_features net2_0_2_33_features percent_encoding_1_0_1_features relay_0_1_1_features time_0_1_40_features tokio_core_0_1_17_features tokio_io_0_1_7_features tokio_proto_0_1_1_features tokio_service_0_1_0_features unicase_2_1_0_features want_0_0_4_features ];
  hyper_proxy_0_4_1 = { features?(hyper_proxy_0_4_1_features {}) }: hyper_proxy_0_4_1_ {
    dependencies = mapFeatures features ([ bytes_0_4_9 futures_0_1_23 hyper_0_11_27 tokio_core_0_1_17 tokio_io_0_1_7 ]);
    features = mkFeatures (features.hyper_proxy_0_4_1 or {});
  };
  hyper_proxy_0_4_1_features = f: updateFeatures f (rec {
    bytes_0_4_9.default = true;
    futures_0_1_23.default = true;
    hyper_0_11_27.default = true;
    hyper_proxy_0_4_1.default = (f.hyper_proxy_0_4_1.default or true);
    hyper_proxy_0_4_1.hyper-tls =
      (f.hyper_proxy_0_4_1.hyper-tls or false) ||
      (f.hyper_proxy_0_4_1.tls or false) ||
      (hyper_proxy_0_4_1.tls or false);
    hyper_proxy_0_4_1.native-tls =
      (f.hyper_proxy_0_4_1.native-tls or false) ||
      (f.hyper_proxy_0_4_1.tls or false) ||
      (hyper_proxy_0_4_1.tls or false);
    hyper_proxy_0_4_1.tls =
      (f.hyper_proxy_0_4_1.tls or false) ||
      (f.hyper_proxy_0_4_1.default or false) ||
      (hyper_proxy_0_4_1.default or false);
    hyper_proxy_0_4_1.tokio-tls =
      (f.hyper_proxy_0_4_1.tokio-tls or false) ||
      (f.hyper_proxy_0_4_1.tls or false) ||
      (hyper_proxy_0_4_1.tls or false);
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
  }) [ bytes_0_4_9_features futures_0_1_23_features hyper_0_11_27_features tokio_core_0_1_17_features tokio_io_0_1_7_features ];
  hyper_tls_0_1_4 = { features?(hyper_tls_0_1_4_features {}) }: hyper_tls_0_1_4_ {
    dependencies = mapFeatures features ([ futures_0_1_23 hyper_0_11_27 native_tls_0_1_5 tokio_core_0_1_17 tokio_io_0_1_7 tokio_service_0_1_0 tokio_tls_0_1_4 ]);
  };
  hyper_tls_0_1_4_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    hyper_0_11_27.default = (f.hyper_0_11_27.default or false);
    hyper_tls_0_1_4.default = (f.hyper_tls_0_1_4.default or true);
    native_tls_0_1_5.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    tokio_service_0_1_0.default = true;
    tokio_tls_0_1_4.default = (f.tokio_tls_0_1_4.default or false);
  }) [ futures_0_1_23_features hyper_0_11_27_features native_tls_0_1_5_features tokio_core_0_1_17_features tokio_io_0_1_7_features tokio_service_0_1_0_features tokio_tls_0_1_4_features ];
  idna_0_1_5 = { features?(idna_0_1_5_features {}) }: idna_0_1_5_ {
    dependencies = mapFeatures features ([ matches_0_1_7 unicode_bidi_0_3_4 unicode_normalization_0_1_7 ]);
  };
  idna_0_1_5_features = f: updateFeatures f (rec {
    idna_0_1_5.default = (f.idna_0_1_5.default or true);
    matches_0_1_7.default = true;
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_7.default = true;
  }) [ matches_0_1_7_features unicode_bidi_0_3_4_features unicode_normalization_0_1_7_features ];
  iovec_0_1_2 = { features?(iovec_0_1_2_features {}) }: iovec_0_1_2_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_2_8 ]) else []);
  };
  iovec_0_1_2_features = f: updateFeatures f (rec {
    iovec_0_1_2.default = (f.iovec_0_1_2.default or true);
    libc_0_2_43.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_43_features winapi_0_2_8_features ];
  itertools_0_7_8 = { features?(itertools_0_7_8_features {}) }: itertools_0_7_8_ {
    dependencies = mapFeatures features ([ either_1_5_0 ]);
    features = mkFeatures (features.itertools_0_7_8 or {});
  };
  itertools_0_7_8_features = f: updateFeatures f (rec {
    either_1_5_0.default = (f.either_1_5_0.default or false);
    itertools_0_7_8.default = (f.itertools_0_7_8.default or true);
    itertools_0_7_8.use_std =
      (f.itertools_0_7_8.use_std or false) ||
      (f.itertools_0_7_8.default or false) ||
      (itertools_0_7_8.default or false);
  }) [ either_1_5_0_features ];
  itoa_0_3_4 = { features?(itoa_0_3_4_features {}) }: itoa_0_3_4_ {
    features = mkFeatures (features.itoa_0_3_4 or {});
  };
  itoa_0_3_4_features = f: updateFeatures f (rec {
    itoa_0_3_4.default = (f.itoa_0_3_4.default or true);
  }) [];
  itoa_0_4_2 = { features?(itoa_0_4_2_features {}) }: itoa_0_4_2_ {
    features = mkFeatures (features.itoa_0_4_2 or {});
  };
  itoa_0_4_2_features = f: updateFeatures f (rec {
    itoa_0_4_2.default = (f.itoa_0_4_2.default or true);
    itoa_0_4_2.std =
      (f.itoa_0_4_2.std or false) ||
      (f.itoa_0_4_2.default or false) ||
      (itoa_0_4_2.default or false);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  language_tags_0_2_2 = { features?(language_tags_0_2_2_features {}) }: language_tags_0_2_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.language_tags_0_2_2 or {});
  };
  language_tags_0_2_2_features = f: updateFeatures f (rec {
    language_tags_0_2_2.default = (f.language_tags_0_2_2.default or true);
    language_tags_0_2_2.heapsize =
      (f.language_tags_0_2_2.heapsize or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
    language_tags_0_2_2.heapsize_plugin =
      (f.language_tags_0_2_2.heapsize_plugin or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
  }) [];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_1_0 = { features?(lazy_static_1_1_0_features {}) }: lazy_static_1_1_0_ {
    dependencies = mapFeatures features ([]);
    buildDependencies = mapFeatures features ([ version_check_0_1_4 ]);
    features = mkFeatures (features.lazy_static_1_1_0 or {});
  };
  lazy_static_1_1_0_features = f: updateFeatures f (rec {
    lazy_static_1_1_0.default = (f.lazy_static_1_1_0.default or true);
    lazy_static_1_1_0.nightly =
      (f.lazy_static_1_1_0.nightly or false) ||
      (f.lazy_static_1_1_0.spin_no_std or false) ||
      (lazy_static_1_1_0.spin_no_std or false);
    lazy_static_1_1_0.spin =
      (f.lazy_static_1_1_0.spin or false) ||
      (f.lazy_static_1_1_0.spin_no_std or false) ||
      (lazy_static_1_1_0.spin_no_std or false);
    version_check_0_1_4.default = true;
  }) [ version_check_0_1_4_features ];
  lazycell_0_6_0 = { features?(lazycell_0_6_0_features {}) }: lazycell_0_6_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazycell_0_6_0 or {});
  };
  lazycell_0_6_0_features = f: updateFeatures f (rec {
    lazycell_0_6_0.clippy =
      (f.lazycell_0_6_0.clippy or false) ||
      (f.lazycell_0_6_0.nightly-testing or false) ||
      (lazycell_0_6_0.nightly-testing or false);
    lazycell_0_6_0.default = (f.lazycell_0_6_0.default or true);
    lazycell_0_6_0.nightly =
      (f.lazycell_0_6_0.nightly or false) ||
      (f.lazycell_0_6_0.nightly-testing or false) ||
      (lazycell_0_6_0.nightly-testing or false);
  }) [];
  lewton_0_8_0 = { features?(lewton_0_8_0_features {}) }: lewton_0_8_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_4 ]
      ++ (if features.lewton_0_8_0.ogg or false then [ ogg_0_5_1 ] else []));
    features = mkFeatures (features.lewton_0_8_0 or {});
  };
  lewton_0_8_0_features = f: updateFeatures f (rec {
    byteorder_1_2_4.default = true;
    lewton_0_8_0.default = (f.lewton_0_8_0.default or true);
    lewton_0_8_0.futures =
      (f.lewton_0_8_0.futures or false) ||
      (f.lewton_0_8_0.async_ogg or false) ||
      (lewton_0_8_0.async_ogg or false);
    lewton_0_8_0.ogg =
      (f.lewton_0_8_0.ogg or false) ||
      (f.lewton_0_8_0.async_ogg or false) ||
      (lewton_0_8_0.async_ogg or false) ||
      (f.lewton_0_8_0.default or false) ||
      (lewton_0_8_0.default or false);
    lewton_0_8_0.tokio-io =
      (f.lewton_0_8_0.tokio-io or false) ||
      (f.lewton_0_8_0.async_ogg or false) ||
      (lewton_0_8_0.async_ogg or false);
    ogg_0_5_1.async =
      (f.ogg_0_5_1.async or false) ||
      (lewton_0_8_0.async_ogg or false) ||
      (f.lewton_0_8_0.async_ogg or false);
    ogg_0_5_1.default = true;
  }) [ byteorder_1_2_4_features ogg_0_5_1_features ];
  libc_0_2_43 = { features?(libc_0_2_43_features {}) }: libc_0_2_43_ {
    features = mkFeatures (features.libc_0_2_43 or {});
  };
  libc_0_2_43_features = f: updateFeatures f (rec {
    libc_0_2_43.default = (f.libc_0_2_43.default or true);
    libc_0_2_43.use_std =
      (f.libc_0_2_43.use_std or false) ||
      (f.libc_0_2_43.default or false) ||
      (libc_0_2_43.default or false);
  }) [];
  libdbus_sys_0_1_3 = { features?(libdbus_sys_0_1_3_features {}) }: libdbus_sys_0_1_3_ {
    buildDependencies = mapFeatures features ([ pkg_config_0_3_13 ]);};
  libdbus_sys_0_1_3_features = f: updateFeatures f (rec {
    libdbus_sys_0_1_3.default = (f.libdbus_sys_0_1_3.default or true);
    pkg_config_0_3_13.default = true;
  }) [ pkg_config_0_3_13_features ];
  libflate_0_1_16 = { features?(libflate_0_1_16_features {}) }: libflate_0_1_16_ {
    dependencies = mapFeatures features ([ adler32_1_0_3 byteorder_1_2_4 crc_1_8_1 ]);
  };
  libflate_0_1_16_features = f: updateFeatures f (rec {
    adler32_1_0_3.default = true;
    byteorder_1_2_4.default = true;
    crc_1_8_1.default = true;
    libflate_0_1_16.default = (f.libflate_0_1_16.default or true);
  }) [ adler32_1_0_3_features byteorder_1_2_4_features crc_1_8_1_features ];
  libpulse_sys_0_0_0 = { features?(libpulse_sys_0_0_0_features {}) }: libpulse_sys_0_0_0_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  libpulse_sys_0_0_0_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    libpulse_sys_0_0_0.default = (f.libpulse_sys_0_0_0.default or true);
  }) [ libc_0_2_43_features ];
  librespot_0_1_0 = { features?(librespot_0_1_0_features {}) }: librespot_0_1_0_ {
    dependencies = mapFeatures features ([ base64_0_5_2 env_logger_0_4_3 futures_0_1_23 getopts_0_2_18 hyper_0_11_27 librespot_audio_0_1_0 librespot_connect_0_1_0 librespot_core_0_1_0 librespot_metadata_0_1_0 librespot_playback_0_1_0 librespot_protocol_0_1_0 log_0_3_9 num_bigint_0_1_44 protobuf_1_7_4 rand_0_3_22 rpassword_0_3_1 rust_crypto_0_2_36 serde_0_9_15 serde_derive_0_9_15 serde_json_0_9_10 tokio_core_0_1_17 tokio_io_0_1_7 tokio_signal_0_1_5 url_1_7_1 ]);
    buildDependencies = mapFeatures features ([ rand_0_3_22 vergen_0_1_1 ]);
    features = mkFeatures (features.librespot_0_1_0 or {});
  };
  librespot_0_1_0_features = f: updateFeatures f (rec {
    base64_0_5_2.default = true;
    env_logger_0_4_3.default = true;
    futures_0_1_23.default = true;
    getopts_0_2_18.default = true;
    hyper_0_11_27.default = true;
    librespot_0_1_0.default = (f.librespot_0_1_0.default or true);
    librespot_audio_0_1_0.default = true;
    librespot_audio_0_1_0.with-tremor =
      (f.librespot_audio_0_1_0.with-tremor or false) ||
      (librespot_0_1_0.with-tremor or false) ||
      (f.librespot_0_1_0.with-tremor or false);
    librespot_audio_0_1_0.with-vorbis =
      (f.librespot_audio_0_1_0.with-vorbis or false) ||
      (librespot_0_1_0.with-vorbis or false) ||
      (f.librespot_0_1_0.with-vorbis or false);
    librespot_connect_0_1_0.default = true;
    librespot_connect_0_1_0.with-dns-sd =
      (f.librespot_connect_0_1_0.with-dns-sd or false) ||
      (librespot_0_1_0.with-dns-sd or false) ||
      (f.librespot_0_1_0.with-dns-sd or false);
    librespot_core_0_1_0.default = true;
    librespot_metadata_0_1_0.default = true;
    librespot_playback_0_1_0.alsa-backend =
      (f.librespot_playback_0_1_0.alsa-backend or false) ||
      (librespot_0_1_0.alsa-backend or false) ||
      (f.librespot_0_1_0.alsa-backend or false);
    librespot_playback_0_1_0.default = true;
    librespot_playback_0_1_0.jackaudio-backend =
      (f.librespot_playback_0_1_0.jackaudio-backend or false) ||
      (librespot_0_1_0.jackaudio-backend or false) ||
      (f.librespot_0_1_0.jackaudio-backend or false);
    librespot_playback_0_1_0.portaudio-backend =
      (f.librespot_playback_0_1_0.portaudio-backend or false) ||
      (librespot_0_1_0.default or false) ||
      (f.librespot_0_1_0.default or false) ||
      (librespot_0_1_0.portaudio-backend or false) ||
      (f.librespot_0_1_0.portaudio-backend or false);
    librespot_playback_0_1_0.pulseaudio-backend =
      (f.librespot_playback_0_1_0.pulseaudio-backend or false) ||
      (librespot_0_1_0.pulseaudio-backend or false) ||
      (f.librespot_0_1_0.pulseaudio-backend or false);
    librespot_protocol_0_1_0.default = true;
    log_0_3_9.default = true;
    num_bigint_0_1_44.default = true;
    protobuf_1_7_4.default = true;
    rand_0_3_22.default = true;
    rpassword_0_3_1.default = true;
    rust_crypto_0_2_36.default = true;
    serde_0_9_15.default = true;
    serde_derive_0_9_15.default = true;
    serde_json_0_9_10.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    tokio_signal_0_1_5.default = true;
    url_1_7_1.default = true;
    vergen_0_1_1.default = true;
  }) [ base64_0_5_2_features env_logger_0_4_3_features futures_0_1_23_features getopts_0_2_18_features hyper_0_11_27_features librespot_audio_0_1_0_features librespot_connect_0_1_0_features librespot_core_0_1_0_features librespot_metadata_0_1_0_features librespot_playback_0_1_0_features librespot_protocol_0_1_0_features log_0_3_9_features num_bigint_0_1_44_features protobuf_1_7_4_features rand_0_3_22_features rpassword_0_3_1_features rust_crypto_0_2_36_features serde_0_9_15_features serde_derive_0_9_15_features serde_json_0_9_10_features tokio_core_0_1_17_features tokio_io_0_1_7_features tokio_signal_0_1_5_features url_1_7_1_features rand_0_3_22_features vergen_0_1_1_features ];
  librespot_audio_0_1_0 = { features?(librespot_audio_0_1_0_features {}) }: librespot_audio_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_23 librespot_core_0_1_0 log_0_3_9 num_bigint_0_1_44 rust_crypto_0_2_36 ]);
    buildDependencies = mapFeatures features ([]);
    features = mkFeatures (features.librespot_audio_0_1_0 or {});
  };
  librespot_audio_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    librespot_audio_0_1_0.default = (f.librespot_audio_0_1_0.default or true);
    librespot_core_0_1_0.default = true;
    log_0_3_9.default = true;
    num_bigint_0_1_44.default = true;
    rust_crypto_0_2_36.default = true;
  }) [ futures_0_1_23_features librespot_core_0_1_0_features log_0_3_9_features num_bigint_0_1_44_features rust_crypto_0_2_36_features ];
  librespot_connect_0_1_0 = { features?(librespot_connect_0_1_0_features {}) }: librespot_connect_0_1_0_ {
    dependencies = mapFeatures features ([ base64_0_5_2 futures_0_1_23 hyper_0_11_27 librespot_core_0_1_0 librespot_playback_0_1_0 librespot_protocol_0_1_0 log_0_3_9 num_bigint_0_1_44 protobuf_1_7_4 rand_0_3_22 rust_crypto_0_2_36 serde_0_9_15 serde_derive_0_9_15 serde_json_0_9_10 tokio_core_0_1_17 url_1_7_1 ]);
    buildDependencies = mapFeatures features ([ rand_0_3_22 ]);
    features = mkFeatures (features.librespot_connect_0_1_0 or {});
  };
  librespot_connect_0_1_0_features = f: updateFeatures f (rec {
    base64_0_5_2.default = true;
    futures_0_1_23.default = true;
    hyper_0_11_27.default = true;
    librespot_connect_0_1_0.default = (f.librespot_connect_0_1_0.default or true);
    librespot_core_0_1_0.default = true;
    librespot_playback_0_1_0.alsa-backend =
      (f.librespot_playback_0_1_0.alsa-backend or false) ||
      (librespot_connect_0_1_0.alsa-backend or false) ||
      (f.librespot_connect_0_1_0.alsa-backend or false);
    librespot_playback_0_1_0.default = true;
    librespot_playback_0_1_0.jackaudio-backend =
      (f.librespot_playback_0_1_0.jackaudio-backend or false) ||
      (librespot_connect_0_1_0.jackaudio-backend or false) ||
      (f.librespot_connect_0_1_0.jackaudio-backend or false);
    librespot_playback_0_1_0.portaudio-backend =
      (f.librespot_playback_0_1_0.portaudio-backend or false) ||
      (librespot_connect_0_1_0.default or false) ||
      (f.librespot_connect_0_1_0.default or false) ||
      (librespot_connect_0_1_0.portaudio-backend or false) ||
      (f.librespot_connect_0_1_0.portaudio-backend or false);
    librespot_playback_0_1_0.pulseaudio-backend =
      (f.librespot_playback_0_1_0.pulseaudio-backend or false) ||
      (librespot_connect_0_1_0.pulseaudio-backend or false) ||
      (f.librespot_connect_0_1_0.pulseaudio-backend or false);
    librespot_protocol_0_1_0.default = true;
    log_0_3_9.default = true;
    num_bigint_0_1_44.default = true;
    protobuf_1_7_4.default = true;
    rand_0_3_22.default = true;
    rust_crypto_0_2_36.default = true;
    serde_0_9_15.default = true;
    serde_derive_0_9_15.default = true;
    serde_json_0_9_10.default = true;
    tokio_core_0_1_17.default = true;
    url_1_7_1.default = true;
  }) [ base64_0_5_2_features futures_0_1_23_features hyper_0_11_27_features librespot_core_0_1_0_features librespot_playback_0_1_0_features librespot_protocol_0_1_0_features log_0_3_9_features num_bigint_0_1_44_features protobuf_1_7_4_features rand_0_3_22_features rust_crypto_0_2_36_features serde_0_9_15_features serde_derive_0_9_15_features serde_json_0_9_10_features tokio_core_0_1_17_features url_1_7_1_features rand_0_3_22_features ];
  librespot_core_0_1_0 = { features?(librespot_core_0_1_0_features {}) }: librespot_core_0_1_0_ {
    dependencies = mapFeatures features ([ base64_0_5_2 futures_0_1_23 hyper_0_11_27 librespot_protocol_0_1_0 log_0_3_9 num_bigint_0_1_44 protobuf_1_7_4 rand_0_3_22 rpassword_0_3_1 rust_crypto_0_2_36 serde_0_9_15 serde_derive_0_9_15 serde_json_0_9_10 tokio_core_0_1_17 tokio_io_0_1_7 url_1_7_1 ]);
    buildDependencies = mapFeatures features ([ rand_0_3_22 vergen_0_1_1 ]);
    features = mkFeatures (features.librespot_core_0_1_0 or {});
  };
  librespot_core_0_1_0_features = f: updateFeatures f (rec {
    base64_0_5_2.default = true;
    futures_0_1_23.default = true;
    hyper_0_11_27.default = true;
    librespot_core_0_1_0.default = (f.librespot_core_0_1_0.default or true);
    librespot_protocol_0_1_0.default = true;
    log_0_3_9.default = true;
    num_bigint_0_1_44.default = true;
    protobuf_1_7_4.default = true;
    rand_0_3_22.default = true;
    rpassword_0_3_1.default = true;
    rust_crypto_0_2_36.default = true;
    serde_0_9_15.default = true;
    serde_derive_0_9_15.default = true;
    serde_json_0_9_10.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    url_1_7_1.default = true;
    vergen_0_1_1.default = true;
  }) [ base64_0_5_2_features futures_0_1_23_features hyper_0_11_27_features librespot_protocol_0_1_0_features log_0_3_9_features num_bigint_0_1_44_features protobuf_1_7_4_features rand_0_3_22_features rpassword_0_3_1_features rust_crypto_0_2_36_features serde_0_9_15_features serde_derive_0_9_15_features serde_json_0_9_10_features tokio_core_0_1_17_features tokio_io_0_1_7_features url_1_7_1_features rand_0_3_22_features vergen_0_1_1_features ];
  librespot_metadata_0_1_0 = { features?(librespot_metadata_0_1_0_features {}) }: librespot_metadata_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_23 librespot_core_0_1_0 librespot_protocol_0_1_0 protobuf_1_7_4 ]);
    buildDependencies = mapFeatures features ([]);
    features = mkFeatures (features.librespot_metadata_0_1_0 or {});
  };
  librespot_metadata_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    librespot_core_0_1_0.default = true;
    librespot_metadata_0_1_0.default = (f.librespot_metadata_0_1_0.default or true);
    librespot_protocol_0_1_0.default = true;
    protobuf_1_7_4.default = true;
  }) [ futures_0_1_23_features librespot_core_0_1_0_features librespot_protocol_0_1_0_features protobuf_1_7_4_features ];
  librespot_playback_0_1_0 = { features?(librespot_playback_0_1_0_features {}) }: librespot_playback_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_23 librespot_audio_0_1_0 librespot_core_0_1_0 librespot_metadata_0_1_0 log_0_3_9 ]);
    buildDependencies = mapFeatures features ([]);
    features = mkFeatures (features.librespot_playback_0_1_0 or {});
  };
  librespot_playback_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    librespot_audio_0_1_0.default = true;
    librespot_audio_0_1_0.with-tremor =
      (f.librespot_audio_0_1_0.with-tremor or false) ||
      (librespot_playback_0_1_0.with-tremor or false) ||
      (f.librespot_playback_0_1_0.with-tremor or false);
    librespot_audio_0_1_0.with-vorbis =
      (f.librespot_audio_0_1_0.with-vorbis or false) ||
      (librespot_playback_0_1_0.with-vorbis or false) ||
      (f.librespot_playback_0_1_0.with-vorbis or false);
    librespot_core_0_1_0.default = true;
    librespot_metadata_0_1_0.default = true;
    librespot_playback_0_1_0.default = (f.librespot_playback_0_1_0.default or true);
    log_0_3_9.default = true;
  }) [ futures_0_1_23_features librespot_audio_0_1_0_features librespot_core_0_1_0_features librespot_metadata_0_1_0_features log_0_3_9_features ];
  librespot_protocol_0_1_0 = { features?(librespot_protocol_0_1_0_features {}) }: librespot_protocol_0_1_0_ {
    dependencies = mapFeatures features ([ protobuf_1_7_4 ]);
    buildDependencies = mapFeatures features ([]);
    features = mkFeatures (features.librespot_protocol_0_1_0 or {});
  };
  librespot_protocol_0_1_0_features = f: updateFeatures f (rec {
    librespot_protocol_0_1_0.default = (f.librespot_protocol_0_1_0.default or true);
    protobuf_1_7_4.default = true;
  }) [ protobuf_1_7_4_features ];
  linear_map_1_2_0 = { features?(linear_map_1_2_0_features {}) }: linear_map_1_2_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.linear_map_1_2_0 or {});
  };
  linear_map_1_2_0_features = f: updateFeatures f (rec {
    linear_map_1_2_0.default = (f.linear_map_1_2_0.default or true);
    linear_map_1_2_0.serde =
      (f.linear_map_1_2_0.serde or false) ||
      (f.linear_map_1_2_0.serde_impl or false) ||
      (linear_map_1_2_0.serde_impl or false);
    linear_map_1_2_0.serde_test =
      (f.linear_map_1_2_0.serde_test or false) ||
      (f.linear_map_1_2_0.serde_impl or false) ||
      (linear_map_1_2_0.serde_impl or false);
  }) [];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_3 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_3.default = true;
    log_0_4_3.max_level_debug =
      (f.log_0_4_3.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_3.max_level_error =
      (f.log_0_4_3.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_3.max_level_info =
      (f.log_0_4_3.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_3.max_level_off =
      (f.log_0_4_3.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_3.max_level_trace =
      (f.log_0_4_3.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_3.max_level_warn =
      (f.log_0_4_3.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_3.release_max_level_debug =
      (f.log_0_4_3.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_3.release_max_level_error =
      (f.log_0_4_3.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_3.release_max_level_info =
      (f.log_0_4_3.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_3.release_max_level_off =
      (f.log_0_4_3.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_3.release_max_level_trace =
      (f.log_0_4_3.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_3.release_max_level_warn =
      (f.log_0_4_3.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_3.std =
      (f.log_0_4_3.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_3_features ];
  log_0_4_3 = { features?(log_0_4_3_features {}) }: log_0_4_3_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ]);
    features = mkFeatures (features.log_0_4_3 or {});
  };
  log_0_4_3_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    log_0_4_3.default = (f.log_0_4_3.default or true);
  }) [ cfg_if_0_1_5_features ];
  matches_0_1_7 = { features?(matches_0_1_7_features {}) }: matches_0_1_7_ {};
  matches_0_1_7_features = f: updateFeatures f (rec {
    matches_0_1_7.default = (f.matches_0_1_7.default or true);
  }) [];
  mdns_0_2_0 = { features?(mdns_0_2_0_features {}) }: mdns_0_2_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_4 dns_parser_0_3_2 futures_0_1_23 get_if_addrs_0_5_3 libc_0_2_43 log_0_4_3 multimap_0_4_0 net2_0_2_33 nix_0_11_0 rand_0_5_5 tokio_core_0_1_17 ])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 socket2_0_2_4 winapi_0_2_8 ]) else []);
  };
  mdns_0_2_0_features = f: updateFeatures f (rec {
    byteorder_1_2_4.default = true;
    dns_parser_0_3_2.default = true;
    futures_0_1_23.default = true;
    get_if_addrs_0_5_3.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_43.default = true;
    log_0_4_3.default = true;
    mdns_0_2_0.default = (f.mdns_0_2_0.default or true);
    multimap_0_4_0.default = true;
    net2_0_2_33.default = true;
    nix_0_11_0.default = true;
    rand_0_5_5.default = true;
    socket2_0_2_4.default = true;
    tokio_core_0_1_17.default = true;
    winapi_0_2_8.default = true;
  }) [ byteorder_1_2_4_features dns_parser_0_3_2_features futures_0_1_23_features get_if_addrs_0_5_3_features libc_0_2_43_features log_0_4_3_features multimap_0_4_0_features net2_0_2_33_features nix_0_11_0_features rand_0_5_5_features tokio_core_0_1_17_features kernel32_sys_0_2_2_features socket2_0_2_4_features winapi_0_2_8_features ];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_43 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_43.default = (f.libc_0_2_43.default or false);
    libc_0_2_43.use_std =
      (f.libc_0_2_43.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_43_features ];
  memoffset_0_2_1 = { features?(memoffset_0_2_1_features {}) }: memoffset_0_2_1_ {};
  memoffset_0_2_1_features = f: updateFeatures f (rec {
    memoffset_0_2_1.default = (f.memoffset_0_2_1.default or true);
  }) [];
  mime_0_3_9 = { features?(mime_0_3_9_features {}) }: mime_0_3_9_ {
    dependencies = mapFeatures features ([ unicase_2_1_0 ]);
  };
  mime_0_3_9_features = f: updateFeatures f (rec {
    mime_0_3_9.default = (f.mime_0_3_9.default or true);
    unicase_2_1_0.default = true;
  }) [ unicase_2_1_0_features ];
  mime_guess_2_0_0_alpha_6 = { features?(mime_guess_2_0_0_alpha_6_features {}) }: mime_guess_2_0_0_alpha_6_ {
    dependencies = mapFeatures features ([ mime_0_3_9 phf_0_7_22 unicase_1_4_2 ]);
    buildDependencies = mapFeatures features ([ phf_codegen_0_7_22 unicase_1_4_2 ]);
    features = mkFeatures (features.mime_guess_2_0_0_alpha_6 or {});
  };
  mime_guess_2_0_0_alpha_6_features = f: updateFeatures f (rec {
    mime_0_3_9.default = true;
    mime_guess_2_0_0_alpha_6.default = (f.mime_guess_2_0_0_alpha_6.default or true);
    phf_0_7_22.default = true;
    phf_0_7_22.unicase = true;
    phf_codegen_0_7_22.default = true;
    unicase_1_4_2.default = true;
  }) [ mime_0_3_9_features phf_0_7_22_features unicase_1_4_2_features phf_codegen_0_7_22_features unicase_1_4_2_features ];
  mio_0_6_15 = { features?(mio_0_6_15_features {}) }: mio_0_6_15_ {
    dependencies = mapFeatures features ([ iovec_0_1_2 lazycell_0_6_0 log_0_4_3 net2_0_2_33 slab_0_4_1 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 fuchsia_zircon_sys_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 miow_0_2_1 winapi_0_2_8 ]) else []);
    features = mkFeatures (features.mio_0_6_15 or {});
  };
  mio_0_6_15_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    fuchsia_zircon_sys_0_3_3.default = true;
    iovec_0_1_2.default = true;
    kernel32_sys_0_2_2.default = true;
    lazycell_0_6_0.default = true;
    libc_0_2_43.default = true;
    log_0_4_3.default = true;
    mio_0_6_15.default = (f.mio_0_6_15.default or true);
    mio_0_6_15.with-deprecated =
      (f.mio_0_6_15.with-deprecated or false) ||
      (f.mio_0_6_15.default or false) ||
      (mio_0_6_15.default or false);
    miow_0_2_1.default = true;
    net2_0_2_33.default = true;
    slab_0_4_1.default = true;
    winapi_0_2_8.default = true;
  }) [ iovec_0_1_2_features lazycell_0_6_0_features log_0_4_3_features net2_0_2_33_features slab_0_4_1_features fuchsia_zircon_0_3_3_features fuchsia_zircon_sys_0_3_3_features libc_0_2_43_features kernel32_sys_0_2_2_features miow_0_2_1_features winapi_0_2_8_features ];
  mio_uds_0_6_6 = { features?(mio_uds_0_6_6_features {}) }: mio_uds_0_6_6_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ iovec_0_1_2 libc_0_2_43 mio_0_6_15 ]) else []);
  };
  mio_uds_0_6_6_features = f: updateFeatures f (rec {
    iovec_0_1_2.default = true;
    libc_0_2_43.default = true;
    mio_0_6_15.default = true;
    mio_uds_0_6_6.default = (f.mio_uds_0_6_6.default or true);
  }) [ iovec_0_1_2_features libc_0_2_43_features mio_0_6_15_features ];
  miow_0_2_1 = { features?(miow_0_2_1_features {}) }: miow_0_2_1_ {
    dependencies = mapFeatures features ([ kernel32_sys_0_2_2 net2_0_2_33 winapi_0_2_8 ws2_32_sys_0_2_1 ]);
  };
  miow_0_2_1_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    miow_0_2_1.default = (f.miow_0_2_1.default or true);
    net2_0_2_33.default = (f.net2_0_2_33.default or false);
    winapi_0_2_8.default = true;
    ws2_32_sys_0_2_1.default = true;
  }) [ kernel32_sys_0_2_2_features net2_0_2_33_features winapi_0_2_8_features ws2_32_sys_0_2_1_features ];
  multimap_0_4_0 = { features?(multimap_0_4_0_features {}) }: multimap_0_4_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.multimap_0_4_0.serde or false then [ serde_1_0_71 ] else []));
    features = mkFeatures (features.multimap_0_4_0 or {});
  };
  multimap_0_4_0_features = f: updateFeatures f (rec {
    multimap_0_4_0.default = (f.multimap_0_4_0.default or true);
    multimap_0_4_0.serde =
      (f.multimap_0_4_0.serde or false) ||
      (f.multimap_0_4_0.serde_impl or false) ||
      (multimap_0_4_0.serde_impl or false);
    multimap_0_4_0.serde_impl =
      (f.multimap_0_4_0.serde_impl or false) ||
      (f.multimap_0_4_0.default or false) ||
      (multimap_0_4_0.default or false);
    serde_1_0_71.default = true;
  }) [ serde_1_0_71_features ];
  native_tls_0_1_5 = { features?(native_tls_0_1_5_features {}) }: native_tls_0_1_5_ {
    dependencies = mapFeatures features ([ lazy_static_0_2_11 ])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([ libc_0_2_43 security_framework_0_1_16 security_framework_sys_0_1_16 tempdir_0_3_7 ]) else [])
      ++ (if !(kernel == "windows" || kernel == "darwin" || kernel == "ios") then mapFeatures features ([ openssl_0_9_24 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ schannel_0_1_13 ]) else []);
  };
  native_tls_0_1_5_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.default = true;
    libc_0_2_43.default = true;
    native_tls_0_1_5.default = (f.native_tls_0_1_5.default or true);
    openssl_0_9_24.default = true;
    schannel_0_1_13.default = true;
    security_framework_0_1_16.OSX_10_8 = true;
    security_framework_0_1_16.default = true;
    security_framework_sys_0_1_16.default = true;
    tempdir_0_3_7.default = true;
  }) [ lazy_static_0_2_11_features libc_0_2_43_features security_framework_0_1_16_features security_framework_sys_0_1_16_features tempdir_0_3_7_features openssl_0_9_24_features schannel_0_1_13_features ];
  net2_0_2_33 = { features?(net2_0_2_33_features {}) }: net2_0_2_33_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ])
      ++ (if kernel == "redox" || (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.net2_0_2_33 or {});
  };
  net2_0_2_33_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    libc_0_2_43.default = true;
    net2_0_2_33.default = (f.net2_0_2_33.default or true);
    net2_0_2_33.duration =
      (f.net2_0_2_33.duration or false) ||
      (f.net2_0_2_33.default or false) ||
      (net2_0_2_33.default or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.handleapi = true;
    winapi_0_3_5.winsock2 = true;
    winapi_0_3_5.ws2def = true;
    winapi_0_3_5.ws2ipdef = true;
    winapi_0_3_5.ws2tcpip = true;
  }) [ cfg_if_0_1_5_features libc_0_2_43_features winapi_0_3_5_features ];
  nix_0_9_0 = { features?(nix_0_9_0_features {}) }: nix_0_9_0_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 cfg_if_0_1_5 libc_0_2_43 void_1_0_2 ]);
  };
  nix_0_9_0_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    cfg_if_0_1_5.default = true;
    libc_0_2_43.default = true;
    nix_0_9_0.default = (f.nix_0_9_0.default or true);
    void_1_0_2.default = true;
  }) [ bitflags_0_9_1_features cfg_if_0_1_5_features libc_0_2_43_features void_1_0_2_features ];
  nix_0_11_0 = { features?(nix_0_11_0_features {}) }: nix_0_11_0_ {
    dependencies = mapFeatures features ([ bitflags_1_0_3 cfg_if_0_1_5 libc_0_2_43 void_1_0_2 ])
      ++ (if kernel == "dragonfly" then mapFeatures features ([]) else [])
      ++ (if kernel == "freebsd" then mapFeatures features ([]) else []);
  };
  nix_0_11_0_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = true;
    cfg_if_0_1_5.default = true;
    libc_0_2_43.default = true;
    nix_0_11_0.default = (f.nix_0_11_0.default or true);
    void_1_0_2.default = true;
  }) [ bitflags_1_0_3_features cfg_if_0_1_5_features libc_0_2_43_features void_1_0_2_features ];
  nodrop_0_1_12 = { features?(nodrop_0_1_12_features {}) }: nodrop_0_1_12_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.nodrop_0_1_12 or {});
  };
  nodrop_0_1_12_features = f: updateFeatures f (rec {
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or true);
    nodrop_0_1_12.nodrop-union =
      (f.nodrop_0_1_12.nodrop-union or false) ||
      (f.nodrop_0_1_12.use_union or false) ||
      (nodrop_0_1_12.use_union or false);
    nodrop_0_1_12.std =
      (f.nodrop_0_1_12.std or false) ||
      (f.nodrop_0_1_12.default or false) ||
      (nodrop_0_1_12.default or false);
  }) [];
  num_bigint_0_1_44 = { features?(num_bigint_0_1_44_features {}) }: num_bigint_0_1_44_ {
    dependencies = mapFeatures features ([ num_integer_0_1_39 num_traits_0_2_5 ]
      ++ (if features.num_bigint_0_1_44.rand or false then [ rand_0_4_2 ] else [])
      ++ (if features.num_bigint_0_1_44.rustc-serialize or false then [ rustc_serialize_0_3_24 ] else []));
    features = mkFeatures (features.num_bigint_0_1_44 or {});
  };
  num_bigint_0_1_44_features = f: updateFeatures f (rec {
    num_bigint_0_1_44.default = (f.num_bigint_0_1_44.default or true);
    num_bigint_0_1_44.rand =
      (f.num_bigint_0_1_44.rand or false) ||
      (f.num_bigint_0_1_44.default or false) ||
      (num_bigint_0_1_44.default or false);
    num_bigint_0_1_44.rustc-serialize =
      (f.num_bigint_0_1_44.rustc-serialize or false) ||
      (f.num_bigint_0_1_44.default or false) ||
      (num_bigint_0_1_44.default or false);
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    num_traits_0_2_5.std = true;
    rand_0_4_2.default = true;
    rustc_serialize_0_3_24.default = true;
  }) [ num_integer_0_1_39_features num_traits_0_2_5_features rand_0_4_2_features rustc_serialize_0_3_24_features ];
  num_integer_0_1_39 = { features?(num_integer_0_1_39_features {}) }: num_integer_0_1_39_ {
    dependencies = mapFeatures features ([ num_traits_0_2_5 ]);
    features = mkFeatures (features.num_integer_0_1_39 or {});
  };
  num_integer_0_1_39_features = f: updateFeatures f (rec {
    num_integer_0_1_39.default = (f.num_integer_0_1_39.default or true);
    num_integer_0_1_39.std =
      (f.num_integer_0_1_39.std or false) ||
      (f.num_integer_0_1_39.default or false) ||
      (num_integer_0_1_39.default or false);
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or false);
    num_traits_0_2_5.i128 =
      (f.num_traits_0_2_5.i128 or false) ||
      (num_integer_0_1_39.i128 or false) ||
      (f.num_integer_0_1_39.i128 or false);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (num_integer_0_1_39.std or false) ||
      (f.num_integer_0_1_39.std or false);
  }) [ num_traits_0_2_5_features ];
  num_traits_0_1_43 = { features?(num_traits_0_1_43_features {}) }: num_traits_0_1_43_ {
    dependencies = mapFeatures features ([ num_traits_0_2_5 ]);
  };
  num_traits_0_1_43_features = f: updateFeatures f (rec {
    num_traits_0_1_43.default = (f.num_traits_0_1_43.default or true);
    num_traits_0_2_5.default = true;
  }) [ num_traits_0_2_5_features ];
  num_traits_0_2_5 = { features?(num_traits_0_2_5_features {}) }: num_traits_0_2_5_ {
    features = mkFeatures (features.num_traits_0_2_5 or {});
  };
  num_traits_0_2_5_features = f: updateFeatures f (rec {
    num_traits_0_2_5.default = (f.num_traits_0_2_5.default or true);
    num_traits_0_2_5.std =
      (f.num_traits_0_2_5.std or false) ||
      (f.num_traits_0_2_5.default or false) ||
      (num_traits_0_2_5.default or false);
  }) [];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_43_features ];
  ogg_0_5_1 = { features?(ogg_0_5_1_features {}) }: ogg_0_5_1_ {
    dependencies = mapFeatures features ([ byteorder_1_2_4 ]);
    features = mkFeatures (features.ogg_0_5_1 or {});
  };
  ogg_0_5_1_features = f: updateFeatures f (rec {
    byteorder_1_2_4.default = true;
    ogg_0_5_1.bytes =
      (f.ogg_0_5_1.bytes or false) ||
      (f.ogg_0_5_1.async or false) ||
      (ogg_0_5_1.async or false);
    ogg_0_5_1.default = (f.ogg_0_5_1.default or true);
    ogg_0_5_1.futures =
      (f.ogg_0_5_1.futures or false) ||
      (f.ogg_0_5_1.async or false) ||
      (ogg_0_5_1.async or false);
    ogg_0_5_1.tokio-io =
      (f.ogg_0_5_1.tokio-io or false) ||
      (f.ogg_0_5_1.async or false) ||
      (ogg_0_5_1.async or false);
  }) [ byteorder_1_2_4_features ];
  ogg_sys_0_0_9 = { features?(ogg_sys_0_0_9_features {}) }: ogg_sys_0_0_9_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 pkg_config_0_3_13 ]);
  };
  ogg_sys_0_0_9_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = true;
    libc_0_2_43.default = true;
    ogg_sys_0_0_9.default = (f.ogg_sys_0_0_9.default or true);
    pkg_config_0_3_13.default = true;
  }) [ libc_0_2_43_features gcc_0_3_54_features pkg_config_0_3_13_features ];
  openssl_0_9_24 = { features?(openssl_0_9_24_features {}) }: openssl_0_9_24_ {
    dependencies = mapFeatures features ([ bitflags_0_9_1 foreign_types_0_3_2 lazy_static_1_1_0 libc_0_2_43 openssl_sys_0_9_35 ]);
    features = mkFeatures (features.openssl_0_9_24 or {});
  };
  openssl_0_9_24_features = f: updateFeatures f (rec {
    bitflags_0_9_1.default = true;
    foreign_types_0_3_2.default = true;
    lazy_static_1_1_0.default = true;
    libc_0_2_43.default = true;
    openssl_0_9_24.default = (f.openssl_0_9_24.default or true);
    openssl_sys_0_9_35.default = true;
  }) [ bitflags_0_9_1_features foreign_types_0_3_2_features lazy_static_1_1_0_features libc_0_2_43_features openssl_sys_0_9_35_features ];
  openssl_sys_0_9_35 = { features?(openssl_sys_0_9_35_features {}) }: openssl_sys_0_9_35_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ])
      ++ (if abi == "msvc" then mapFeatures features ([]) else []);
    buildDependencies = mapFeatures features ([ cc_1_0_18 pkg_config_0_3_13 ]);
    features = mkFeatures (features.openssl_sys_0_9_35 or {});
  };
  openssl_sys_0_9_35_features = f: updateFeatures f (rec {
    cc_1_0_18.default = true;
    libc_0_2_43.default = true;
    openssl_sys_0_9_35.default = (f.openssl_sys_0_9_35.default or true);
    openssl_sys_0_9_35.openssl-src =
      (f.openssl_sys_0_9_35.openssl-src or false) ||
      (f.openssl_sys_0_9_35.vendored or false) ||
      (openssl_sys_0_9_35.vendored or false);
    pkg_config_0_3_13.default = true;
  }) [ libc_0_2_43_features cc_1_0_18_features pkg_config_0_3_13_features ];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  phf_0_7_22 = { features?(phf_0_7_22_features {}) }: phf_0_7_22_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_22 ]);
    features = mkFeatures (features.phf_0_7_22 or {});
  };
  phf_0_7_22_features = f: updateFeatures f (rec {
    phf_0_7_22.default = (f.phf_0_7_22.default or true);
    phf_shared_0_7_22.core =
      (f.phf_shared_0_7_22.core or false) ||
      (phf_0_7_22.core or false) ||
      (f.phf_0_7_22.core or false);
    phf_shared_0_7_22.default = true;
    phf_shared_0_7_22.unicase =
      (f.phf_shared_0_7_22.unicase or false) ||
      (phf_0_7_22.unicase or false) ||
      (f.phf_0_7_22.unicase or false);
  }) [ phf_shared_0_7_22_features ];
  phf_codegen_0_7_22 = { features?(phf_codegen_0_7_22_features {}) }: phf_codegen_0_7_22_ {
    dependencies = mapFeatures features ([ phf_generator_0_7_22 phf_shared_0_7_22 ]);
  };
  phf_codegen_0_7_22_features = f: updateFeatures f (rec {
    phf_codegen_0_7_22.default = (f.phf_codegen_0_7_22.default or true);
    phf_generator_0_7_22.default = true;
    phf_shared_0_7_22.default = true;
  }) [ phf_generator_0_7_22_features phf_shared_0_7_22_features ];
  phf_generator_0_7_22 = { features?(phf_generator_0_7_22_features {}) }: phf_generator_0_7_22_ {
    dependencies = mapFeatures features ([ phf_shared_0_7_22 rand_0_4_2 ]);
  };
  phf_generator_0_7_22_features = f: updateFeatures f (rec {
    phf_generator_0_7_22.default = (f.phf_generator_0_7_22.default or true);
    phf_shared_0_7_22.default = true;
    rand_0_4_2.default = true;
  }) [ phf_shared_0_7_22_features rand_0_4_2_features ];
  phf_shared_0_7_22 = { features?(phf_shared_0_7_22_features {}) }: phf_shared_0_7_22_ {
    dependencies = mapFeatures features ([ siphasher_0_2_3 ]
      ++ (if features.phf_shared_0_7_22.unicase or false then [ unicase_1_4_2 ] else []));
    features = mkFeatures (features.phf_shared_0_7_22 or {});
  };
  phf_shared_0_7_22_features = f: updateFeatures f (rec {
    phf_shared_0_7_22.default = (f.phf_shared_0_7_22.default or true);
    siphasher_0_2_3.default = true;
    unicase_1_4_2.default = true;
  }) [ siphasher_0_2_3_features unicase_1_4_2_features ];
  pkg_config_0_3_13 = { features?(pkg_config_0_3_13_features {}) }: pkg_config_0_3_13_ {};
  pkg_config_0_3_13_features = f: updateFeatures f (rec {
    pkg_config_0_3_13.default = (f.pkg_config_0_3_13.default or true);
  }) [];
  portaudio_rs_0_3_0 = { features?(portaudio_rs_0_3_0_features {}) }: portaudio_rs_0_3_0_ {
    dependencies = mapFeatures features ([ bitflags_0_3_3 libc_0_2_43 portaudio_sys_0_1_1 ]);
  };
  portaudio_rs_0_3_0_features = f: updateFeatures f (rec {
    bitflags_0_3_3.default = true;
    libc_0_2_43.default = true;
    portaudio_rs_0_3_0.default = (f.portaudio_rs_0_3_0.default or true);
    portaudio_sys_0_1_1.default = true;
  }) [ bitflags_0_3_3_features libc_0_2_43_features portaudio_sys_0_1_1_features ];
  portaudio_sys_0_1_1 = { features?(portaudio_sys_0_1_1_features {}) }: portaudio_sys_0_1_1_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
    buildDependencies = mapFeatures features ([ pkg_config_0_3_13 ]);
  };
  portaudio_sys_0_1_1_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    pkg_config_0_3_13.default = true;
    portaudio_sys_0_1_1.default = (f.portaudio_sys_0_1_1.default or true);
  }) [ libc_0_2_43_features pkg_config_0_3_13_features ];
  proc_macro2_0_4_12 = { features?(proc_macro2_0_4_12_features {}) }: proc_macro2_0_4_12_ {
    dependencies = mapFeatures features ([ unicode_xid_0_1_0 ]);
    features = mkFeatures (features.proc_macro2_0_4_12 or {});
  };
  proc_macro2_0_4_12_features = f: updateFeatures f (rec {
    proc_macro2_0_4_12.default = (f.proc_macro2_0_4_12.default or true);
    proc_macro2_0_4_12.proc-macro =
      (f.proc_macro2_0_4_12.proc-macro or false) ||
      (f.proc_macro2_0_4_12.default or false) ||
      (proc_macro2_0_4_12.default or false) ||
      (f.proc_macro2_0_4_12.nightly or false) ||
      (proc_macro2_0_4_12.nightly or false);
    unicode_xid_0_1_0.default = true;
  }) [ unicode_xid_0_1_0_features ];
  protobuf_1_7_4 = { features?(protobuf_1_7_4_features {}) }: protobuf_1_7_4_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.protobuf_1_7_4 or {});
  };
  protobuf_1_7_4_features = f: updateFeatures f (rec {
    protobuf_1_7_4.bytes =
      (f.protobuf_1_7_4.bytes or false) ||
      (f.protobuf_1_7_4.with-bytes or false) ||
      (protobuf_1_7_4.with-bytes or false);
    protobuf_1_7_4.default = (f.protobuf_1_7_4.default or true);
  }) [];
  quick_error_1_2_2 = { features?(quick_error_1_2_2_features {}) }: quick_error_1_2_2_ {};
  quick_error_1_2_2_features = f: updateFeatures f (rec {
    quick_error_1_2_2.default = (f.quick_error_1_2_2.default or true);
  }) [];
  quote_0_3_15 = { features?(quote_0_3_15_features {}) }: quote_0_3_15_ {};
  quote_0_3_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = (f.quote_0_3_15.default or true);
  }) [];
  quote_0_6_6 = { features?(quote_0_6_6_features {}) }: quote_0_6_6_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_12 ]);
    features = mkFeatures (features.quote_0_6_6 or {});
  };
  quote_0_6_6_features = f: updateFeatures f (rec {
    proc_macro2_0_4_12.default = (f.proc_macro2_0_4_12.default or false);
    proc_macro2_0_4_12.proc-macro =
      (f.proc_macro2_0_4_12.proc-macro or false) ||
      (quote_0_6_6.proc-macro or false) ||
      (f.quote_0_6_6.proc-macro or false);
    quote_0_6_6.default = (f.quote_0_6_6.default or true);
    quote_0_6_6.proc-macro =
      (f.quote_0_6_6.proc-macro or false) ||
      (f.quote_0_6_6.default or false) ||
      (quote_0_6_6.default or false);
  }) [ proc_macro2_0_4_12_features ];
  rand_0_3_22 = { features?(rand_0_3_22_features {}) }: rand_0_3_22_ {
    dependencies = mapFeatures features ([ libc_0_2_43 rand_0_4_2 ])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else []);
    features = mkFeatures (features.rand_0_3_22 or {});
  };
  rand_0_3_22_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_43.default = true;
    rand_0_3_22.default = (f.rand_0_3_22.default or true);
    rand_0_3_22.i128_support =
      (f.rand_0_3_22.i128_support or false) ||
      (f.rand_0_3_22.nightly or false) ||
      (rand_0_3_22.nightly or false);
    rand_0_4_2.default = true;
  }) [ libc_0_2_43_features rand_0_4_2_features fuchsia_zircon_0_3_3_features ];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_43 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_43.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntsecapi = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_43_features winapi_0_3_5_features ];
  rand_0_5_5 = { features?(rand_0_5_5_features {}) }: rand_0_5_5_ {
    dependencies = mapFeatures features ([ rand_core_0_2_1 ])
      ++ (if kernel == "cloudabi" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_5.cloudabi or false then [ cloudabi_0_0_3 ] else [])) else [])
      ++ (if kernel == "fuchsia" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_5.fuchsia-zircon or false then [ fuchsia_zircon_0_3_3 ] else [])) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_5_5.libc or false then [ libc_0_2_43 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ ]
      ++ (if features.rand_0_5_5.winapi or false then [ winapi_0_3_5 ] else [])) else [])
      ++ (if kernel == "wasm32-unknown-unknown" then mapFeatures features ([]) else []);
    features = mkFeatures (features.rand_0_5_5 or {});
  };
  rand_0_5_5_features = f: updateFeatures f (rec {
    cloudabi_0_0_3.default = true;
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_43.default = true;
    rand_0_5_5.alloc =
      (f.rand_0_5_5.alloc or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_0_5_5.cloudabi =
      (f.rand_0_5_5.cloudabi or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_0_5_5.default = (f.rand_0_5_5.default or true);
    rand_0_5_5.fuchsia-zircon =
      (f.rand_0_5_5.fuchsia-zircon or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_0_5_5.i128_support =
      (f.rand_0_5_5.i128_support or false) ||
      (f.rand_0_5_5.nightly or false) ||
      (rand_0_5_5.nightly or false);
    rand_0_5_5.libc =
      (f.rand_0_5_5.libc or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_0_5_5.serde =
      (f.rand_0_5_5.serde or false) ||
      (f.rand_0_5_5.serde1 or false) ||
      (rand_0_5_5.serde1 or false);
    rand_0_5_5.serde_derive =
      (f.rand_0_5_5.serde_derive or false) ||
      (f.rand_0_5_5.serde1 or false) ||
      (rand_0_5_5.serde1 or false);
    rand_0_5_5.std =
      (f.rand_0_5_5.std or false) ||
      (f.rand_0_5_5.default or false) ||
      (rand_0_5_5.default or false);
    rand_0_5_5.winapi =
      (f.rand_0_5_5.winapi or false) ||
      (f.rand_0_5_5.std or false) ||
      (rand_0_5_5.std or false);
    rand_core_0_2_1.alloc =
      (f.rand_core_0_2_1.alloc or false) ||
      (rand_0_5_5.alloc or false) ||
      (f.rand_0_5_5.alloc or false);
    rand_core_0_2_1.default = (f.rand_core_0_2_1.default or false);
    rand_core_0_2_1.serde1 =
      (f.rand_core_0_2_1.serde1 or false) ||
      (rand_0_5_5.serde1 or false) ||
      (f.rand_0_5_5.serde1 or false);
    rand_core_0_2_1.std =
      (f.rand_core_0_2_1.std or false) ||
      (rand_0_5_5.std or false) ||
      (f.rand_0_5_5.std or false);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntsecapi = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.winnt = true;
  }) [ rand_core_0_2_1_features cloudabi_0_0_3_features fuchsia_zircon_0_3_3_features libc_0_2_43_features winapi_0_3_5_features ];
  rand_core_0_2_1 = { features?(rand_core_0_2_1_features {}) }: rand_core_0_2_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.rand_core_0_2_1 or {});
  };
  rand_core_0_2_1_features = f: updateFeatures f (rec {
    rand_core_0_2_1.alloc =
      (f.rand_core_0_2_1.alloc or false) ||
      (f.rand_core_0_2_1.std or false) ||
      (rand_core_0_2_1.std or false);
    rand_core_0_2_1.default = (f.rand_core_0_2_1.default or true);
    rand_core_0_2_1.serde =
      (f.rand_core_0_2_1.serde or false) ||
      (f.rand_core_0_2_1.serde1 or false) ||
      (rand_core_0_2_1.serde1 or false);
    rand_core_0_2_1.serde_derive =
      (f.rand_core_0_2_1.serde_derive or false) ||
      (f.rand_core_0_2_1.serde1 or false) ||
      (rand_core_0_2_1.serde1 or false);
    rand_core_0_2_1.std =
      (f.rand_core_0_2_1.std or false) ||
      (f.rand_core_0_2_1.default or false) ||
      (rand_core_0_2_1.default or false);
  }) [];
  random_0_12_2 = { features?(random_0_12_2_features {}) }: random_0_12_2_ {};
  random_0_12_2_features = f: updateFeatures f (rec {
    random_0_12_2.default = (f.random_0_12_2.default or true);
  }) [];
  redox_syscall_0_1_40 = { features?(redox_syscall_0_1_40_features {}) }: redox_syscall_0_1_40_ {};
  redox_syscall_0_1_40_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = (f.redox_syscall_0_1_40.default or true);
  }) [];
  redox_termios_0_1_1 = { features?(redox_termios_0_1_1_features {}) }: redox_termios_0_1_1_ {
    dependencies = mapFeatures features ([ redox_syscall_0_1_40 ]);
  };
  redox_termios_0_1_1_features = f: updateFeatures f (rec {
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = (f.redox_termios_0_1_1.default or true);
  }) [ redox_syscall_0_1_40_features ];
  regex_0_2_11 = { features?(regex_0_2_11_features {}) }: regex_0_2_11_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_6 memchr_2_0_1 regex_syntax_0_5_6 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_0_2_11 or {});
  };
  regex_0_2_11_features = f: updateFeatures f (rec {
    aho_corasick_0_6_6.default = true;
    memchr_2_0_1.default = true;
    regex_0_2_11.default = (f.regex_0_2_11.default or true);
    regex_0_2_11.pattern =
      (f.regex_0_2_11.pattern or false) ||
      (f.regex_0_2_11.unstable or false) ||
      (regex_0_2_11.unstable or false);
    regex_syntax_0_5_6.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_6_features memchr_2_0_1_features regex_syntax_0_5_6_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_1_0_2 = { features?(regex_1_0_2_features {}) }: regex_1_0_2_ {
    dependencies = mapFeatures features ([ aho_corasick_0_6_6 memchr_2_0_1 regex_syntax_0_6_2 thread_local_0_3_5 utf8_ranges_1_0_0 ]);
    features = mkFeatures (features.regex_1_0_2 or {});
  };
  regex_1_0_2_features = f: updateFeatures f (rec {
    aho_corasick_0_6_6.default = true;
    memchr_2_0_1.default = true;
    regex_1_0_2.default = (f.regex_1_0_2.default or true);
    regex_1_0_2.pattern =
      (f.regex_1_0_2.pattern or false) ||
      (f.regex_1_0_2.unstable or false) ||
      (regex_1_0_2.unstable or false);
    regex_1_0_2.use_std =
      (f.regex_1_0_2.use_std or false) ||
      (f.regex_1_0_2.default or false) ||
      (regex_1_0_2.default or false);
    regex_syntax_0_6_2.default = true;
    thread_local_0_3_5.default = true;
    utf8_ranges_1_0_0.default = true;
  }) [ aho_corasick_0_6_6_features memchr_2_0_1_features regex_syntax_0_6_2_features thread_local_0_3_5_features utf8_ranges_1_0_0_features ];
  regex_syntax_0_5_6 = { features?(regex_syntax_0_5_6_features {}) }: regex_syntax_0_5_6_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_5_6_features = f: updateFeatures f (rec {
    regex_syntax_0_5_6.default = (f.regex_syntax_0_5_6.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  regex_syntax_0_6_2 = { features?(regex_syntax_0_6_2_features {}) }: regex_syntax_0_6_2_ {
    dependencies = mapFeatures features ([ ucd_util_0_1_1 ]);
  };
  regex_syntax_0_6_2_features = f: updateFeatures f (rec {
    regex_syntax_0_6_2.default = (f.regex_syntax_0_6_2.default or true);
    ucd_util_0_1_1.default = true;
  }) [ ucd_util_0_1_1_features ];
  relay_0_1_1 = { features?(relay_0_1_1_features {}) }: relay_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_23 ]);
  };
  relay_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    relay_0_1_1.default = (f.relay_0_1_1.default or true);
  }) [ futures_0_1_23_features ];
  remove_dir_all_0_5_1 = { features?(remove_dir_all_0_5_1_features {}) }: remove_dir_all_0_5_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  remove_dir_all_0_5_1_features = f: updateFeatures f (rec {
    remove_dir_all_0_5_1.default = (f.remove_dir_all_0_5_1.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.errhandlingapi = true;
    winapi_0_3_5.fileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.winerror = true;
  }) [ winapi_0_3_5_features ];
  reqwest_0_8_7 = { features?(reqwest_0_8_7_features {}) }: reqwest_0_8_7_ {
    dependencies = mapFeatures features ([ bytes_0_4_9 encoding_rs_0_7_2 futures_0_1_23 hyper_0_11_27 hyper_tls_0_1_4 libflate_0_1_16 log_0_4_3 mime_guess_2_0_0_alpha_6 native_tls_0_1_5 serde_1_0_71 serde_json_1_0_24 serde_urlencoded_0_5_2 tokio_core_0_1_17 tokio_io_0_1_7 tokio_tls_0_1_4 url_1_7_1 uuid_0_6_5 ]);
    features = mkFeatures (features.reqwest_0_8_7 or {});
  };
  reqwest_0_8_7_features = f: updateFeatures f (rec {
    bytes_0_4_9.default = true;
    encoding_rs_0_7_2.default = true;
    futures_0_1_23.default = true;
    hyper_0_11_27.default = (f.hyper_0_11_27.default or false);
    hyper_tls_0_1_4.default = true;
    libflate_0_1_16.default = true;
    log_0_4_3.default = true;
    mime_guess_2_0_0_alpha_6.default = true;
    native_tls_0_1_5.default = true;
    reqwest_0_8_7.default = (f.reqwest_0_8_7.default or true);
    serde_1_0_71.default = true;
    serde_json_1_0_24.default = true;
    serde_urlencoded_0_5_2.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    tokio_tls_0_1_4.default = (f.tokio_tls_0_1_4.default or false);
    url_1_7_1.default = true;
    uuid_0_6_5.default = true;
    uuid_0_6_5.v4 = true;
  }) [ bytes_0_4_9_features encoding_rs_0_7_2_features futures_0_1_23_features hyper_0_11_27_features hyper_tls_0_1_4_features libflate_0_1_16_features log_0_4_3_features mime_guess_2_0_0_alpha_6_features native_tls_0_1_5_features serde_1_0_71_features serde_json_1_0_24_features serde_urlencoded_0_5_2_features tokio_core_0_1_17_features tokio_io_0_1_7_features tokio_tls_0_1_4_features url_1_7_1_features uuid_0_6_5_features ];
  rpassword_0_3_1 = { features?(rpassword_0_3_1_features {}) }: rpassword_0_3_1_ {
    dependencies = (if !(kernel == "windows") then mapFeatures features ([ libc_0_2_43 termios_0_2_2 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  rpassword_0_3_1_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_43.default = true;
    rpassword_0_3_1.default = (f.rpassword_0_3_1.default or true);
    termios_0_2_2.default = true;
    winapi_0_2_8.default = true;
  }) [ libc_0_2_43_features termios_0_2_2_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  rspotify_0_2_3 = { features?(rspotify_0_2_3_features {}) }: rspotify_0_2_3_ {
    dependencies = mapFeatures features ([ base64_0_6_0 chrono_0_4_5 derive_builder_0_5_1 dotenv_0_10_1 env_logger_0_5_12 failure_0_1_2 hyper_0_11_27 itertools_0_7_8 lazy_static_1_1_0 log_0_4_3 percent_encoding_1_0_1 rand_0_4_2 random_0_12_2 reqwest_0_8_7 serde_1_0_71 serde_derive_1_0_71 serde_json_1_0_24 url_1_7_1 webbrowser_0_2_2 ]);
  };
  rspotify_0_2_3_features = f: updateFeatures f (rec {
    base64_0_6_0.default = true;
    chrono_0_4_5.default = true;
    chrono_0_4_5.rustc-serialize = true;
    chrono_0_4_5.serde = true;
    derive_builder_0_5_1.default = true;
    dotenv_0_10_1.default = true;
    env_logger_0_5_12.default = true;
    failure_0_1_2.default = true;
    hyper_0_11_27.default = true;
    itertools_0_7_8.default = true;
    lazy_static_1_1_0.default = true;
    log_0_4_3.default = true;
    percent_encoding_1_0_1.default = true;
    rand_0_4_2.default = true;
    random_0_12_2.default = true;
    reqwest_0_8_7.default = true;
    rspotify_0_2_3.default = (f.rspotify_0_2_3.default or true);
    serde_1_0_71.default = true;
    serde_derive_1_0_71.default = true;
    serde_json_1_0_24.default = true;
    url_1_7_1.default = true;
    webbrowser_0_2_2.default = true;
  }) [ base64_0_6_0_features chrono_0_4_5_features derive_builder_0_5_1_features dotenv_0_10_1_features env_logger_0_5_12_features failure_0_1_2_features hyper_0_11_27_features itertools_0_7_8_features lazy_static_1_1_0_features log_0_4_3_features percent_encoding_1_0_1_features rand_0_4_2_features random_0_12_2_features reqwest_0_8_7_features serde_1_0_71_features serde_derive_1_0_71_features serde_json_1_0_24_features url_1_7_1_features webbrowser_0_2_2_features ];
  rust_crypto_0_2_36 = { features?(rust_crypto_0_2_36_features {}) }: rust_crypto_0_2_36_ {
    dependencies = mapFeatures features ([ libc_0_2_43 rand_0_3_22 rustc_serialize_0_3_24 time_0_1_40 ]);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 ]);
    features = mkFeatures (features.rust_crypto_0_2_36 or {});
  };
  rust_crypto_0_2_36_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = true;
    libc_0_2_43.default = true;
    rand_0_3_22.default = true;
    rust_crypto_0_2_36.default = (f.rust_crypto_0_2_36.default or true);
    rustc_serialize_0_3_24.default = true;
    time_0_1_40.default = true;
  }) [ libc_0_2_43_features rand_0_3_22_features rustc_serialize_0_3_24_features time_0_1_40_features gcc_0_3_54_features ];
  rust_ini_0_10_3 = { features?(rust_ini_0_10_3_features {}) }: rust_ini_0_10_3_ {};
  rust_ini_0_10_3_features = f: updateFeatures f (rec {
    rust_ini_0_10_3.default = (f.rust_ini_0_10_3.default or true);
  }) [];
  rustc_demangle_0_1_9 = { features?(rustc_demangle_0_1_9_features {}) }: rustc_demangle_0_1_9_ {};
  rustc_demangle_0_1_9_features = f: updateFeatures f (rec {
    rustc_demangle_0_1_9.default = (f.rustc_demangle_0_1_9.default or true);
  }) [];
  rustc_serialize_0_3_24 = { features?(rustc_serialize_0_3_24_features {}) }: rustc_serialize_0_3_24_ {};
  rustc_serialize_0_3_24_features = f: updateFeatures f (rec {
    rustc_serialize_0_3_24.default = (f.rustc_serialize_0_3_24.default or true);
  }) [];
  rustc_version_0_2_3 = { features?(rustc_version_0_2_3_features {}) }: rustc_version_0_2_3_ {
    dependencies = mapFeatures features ([ semver_0_9_0 ]);
  };
  rustc_version_0_2_3_features = f: updateFeatures f (rec {
    rustc_version_0_2_3.default = (f.rustc_version_0_2_3.default or true);
    semver_0_9_0.default = true;
  }) [ semver_0_9_0_features ];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  schannel_0_1_13 = { features?(schannel_0_1_13_features {}) }: schannel_0_1_13_ {
    dependencies = mapFeatures features ([ lazy_static_1_1_0 winapi_0_3_5 ]);
  };
  schannel_0_1_13_features = f: updateFeatures f (rec {
    lazy_static_1_1_0.default = true;
    schannel_0_1_13.default = (f.schannel_0_1_13.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.lmcons = true;
    winapi_0_3_5.minschannel = true;
    winapi_0_3_5.schannel = true;
    winapi_0_3_5.securitybaseapi = true;
    winapi_0_3_5.sysinfoapi = true;
    winapi_0_3_5.timezoneapi = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.wincrypt = true;
    winapi_0_3_5.winerror = true;
  }) [ lazy_static_1_1_0_features winapi_0_3_5_features ];
  scoped_tls_0_1_2 = { features?(scoped_tls_0_1_2_features {}) }: scoped_tls_0_1_2_ {
    features = mkFeatures (features.scoped_tls_0_1_2 or {});
  };
  scoped_tls_0_1_2_features = f: updateFeatures f (rec {
    scoped_tls_0_1_2.default = (f.scoped_tls_0_1_2.default or true);
  }) [];
  scopeguard_0_3_3 = { features?(scopeguard_0_3_3_features {}) }: scopeguard_0_3_3_ {
    features = mkFeatures (features.scopeguard_0_3_3 or {});
  };
  scopeguard_0_3_3_features = f: updateFeatures f (rec {
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or true);
    scopeguard_0_3_3.use_std =
      (f.scopeguard_0_3_3.use_std or false) ||
      (f.scopeguard_0_3_3.default or false) ||
      (scopeguard_0_3_3.default or false);
  }) [];
  security_framework_0_1_16 = { features?(security_framework_0_1_16_features {}) }: security_framework_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_0_2_3 core_foundation_sys_0_2_3 libc_0_2_43 security_framework_sys_0_1_16 ]);
    features = mkFeatures (features.security_framework_0_1_16 or {});
  };
  security_framework_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_0_2_3.default = true;
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_43.default = true;
    security_framework_0_1_16.OSX_10_10 =
      (f.security_framework_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_11 or false);
    security_framework_0_1_16.OSX_10_11 =
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_0_1_16.OSX_10_12 or false) ||
      (security_framework_0_1_16.OSX_10_12 or false);
    security_framework_0_1_16.OSX_10_8 =
      (f.security_framework_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_0_1_16.OSX_10_9 or false) ||
      (security_framework_0_1_16.OSX_10_9 or false);
    security_framework_0_1_16.OSX_10_9 =
      (f.security_framework_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_0_1_16.OSX_10_10 or false) ||
      (security_framework_0_1_16.OSX_10_10 or false);
    security_framework_0_1_16.default = (f.security_framework_0_1_16.default or true);
    security_framework_sys_0_1_16.OSX_10_10 =
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (security_framework_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_0_1_16.OSX_10_10 or false);
    security_framework_sys_0_1_16.OSX_10_11 =
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_0_1_16.OSX_10_11 or false) ||
      (security_framework_0_1_16.OSX_10_12 or false) ||
      (f.security_framework_0_1_16.OSX_10_12 or false);
    security_framework_sys_0_1_16.OSX_10_8 =
      (f.security_framework_sys_0_1_16.OSX_10_8 or false) ||
      (security_framework_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_0_1_16.OSX_10_8 or false);
    security_framework_sys_0_1_16.OSX_10_9 =
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (security_framework_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_0_1_16.OSX_10_9 or false);
    security_framework_sys_0_1_16.default = true;
  }) [ core_foundation_0_2_3_features core_foundation_sys_0_2_3_features libc_0_2_43_features security_framework_sys_0_1_16_features ];
  security_framework_sys_0_1_16 = { features?(security_framework_sys_0_1_16_features {}) }: security_framework_sys_0_1_16_ {
    dependencies = mapFeatures features ([ core_foundation_sys_0_2_3 libc_0_2_43 ]);
    features = mkFeatures (features.security_framework_sys_0_1_16 or {});
  };
  security_framework_sys_0_1_16_features = f: updateFeatures f (rec {
    core_foundation_sys_0_2_3.default = true;
    libc_0_2_43.default = true;
    security_framework_sys_0_1_16.OSX_10_10 =
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (security_framework_sys_0_1_16.OSX_10_11 or false);
    security_framework_sys_0_1_16.OSX_10_11 =
      (f.security_framework_sys_0_1_16.OSX_10_11 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_12 or false) ||
      (security_framework_sys_0_1_16.OSX_10_12 or false);
    security_framework_sys_0_1_16.OSX_10_8 =
      (f.security_framework_sys_0_1_16.OSX_10_8 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (security_framework_sys_0_1_16.OSX_10_9 or false);
    security_framework_sys_0_1_16.OSX_10_9 =
      (f.security_framework_sys_0_1_16.OSX_10_9 or false) ||
      (f.security_framework_sys_0_1_16.OSX_10_10 or false) ||
      (security_framework_sys_0_1_16.OSX_10_10 or false);
    security_framework_sys_0_1_16.default = (f.security_framework_sys_0_1_16.default or true);
  }) [ core_foundation_sys_0_2_3_features libc_0_2_43_features ];
  semver_0_9_0 = { features?(semver_0_9_0_features {}) }: semver_0_9_0_ {
    dependencies = mapFeatures features ([ semver_parser_0_7_0 ]);
    features = mkFeatures (features.semver_0_9_0 or {});
  };
  semver_0_9_0_features = f: updateFeatures f (rec {
    semver_0_9_0.default = (f.semver_0_9_0.default or true);
    semver_0_9_0.serde =
      (f.semver_0_9_0.serde or false) ||
      (f.semver_0_9_0.ci or false) ||
      (semver_0_9_0.ci or false);
    semver_parser_0_7_0.default = true;
  }) [ semver_parser_0_7_0_features ];
  semver_parser_0_7_0 = { features?(semver_parser_0_7_0_features {}) }: semver_parser_0_7_0_ {};
  semver_parser_0_7_0_features = f: updateFeatures f (rec {
    semver_parser_0_7_0.default = (f.semver_parser_0_7_0.default or true);
  }) [];
  serde_0_9_15 = { features?(serde_0_9_15_features {}) }: serde_0_9_15_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_0_9_15 or {});
  };
  serde_0_9_15_features = f: updateFeatures f (rec {
    serde_0_9_15.alloc =
      (f.serde_0_9_15.alloc or false) ||
      (f.serde_0_9_15.collections or false) ||
      (serde_0_9_15.collections or false);
    serde_0_9_15.default = (f.serde_0_9_15.default or true);
    serde_0_9_15.serde_derive =
      (f.serde_0_9_15.serde_derive or false) ||
      (f.serde_0_9_15.derive or false) ||
      (serde_0_9_15.derive or false) ||
      (f.serde_0_9_15.playground or false) ||
      (serde_0_9_15.playground or false);
    serde_0_9_15.std =
      (f.serde_0_9_15.std or false) ||
      (f.serde_0_9_15.default or false) ||
      (serde_0_9_15.default or false) ||
      (f.serde_0_9_15.unstable-testing or false) ||
      (serde_0_9_15.unstable-testing or false);
    serde_0_9_15.unstable =
      (f.serde_0_9_15.unstable or false) ||
      (f.serde_0_9_15.alloc or false) ||
      (serde_0_9_15.alloc or false) ||
      (f.serde_0_9_15.unstable-testing or false) ||
      (serde_0_9_15.unstable-testing or false);
  }) [];
  serde_1_0_71 = { features?(serde_1_0_71_features {}) }: serde_1_0_71_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.serde_1_0_71.serde_derive or false then [ serde_derive_1_0_71 ] else []));
    features = mkFeatures (features.serde_1_0_71 or {});
  };
  serde_1_0_71_features = f: updateFeatures f (rec {
    serde_1_0_71.default = (f.serde_1_0_71.default or true);
    serde_1_0_71.serde_derive =
      (f.serde_1_0_71.serde_derive or false) ||
      (f.serde_1_0_71.derive or false) ||
      (serde_1_0_71.derive or false);
    serde_1_0_71.std =
      (f.serde_1_0_71.std or false) ||
      (f.serde_1_0_71.default or false) ||
      (serde_1_0_71.default or false);
    serde_1_0_71.unstable =
      (f.serde_1_0_71.unstable or false) ||
      (f.serde_1_0_71.alloc or false) ||
      (serde_1_0_71.alloc or false);
    serde_derive_1_0_71.default = true;
  }) [ serde_derive_1_0_71_features ];
  serde_codegen_internals_0_14_2 = { features?(serde_codegen_internals_0_14_2_features {}) }: serde_codegen_internals_0_14_2_ {
    dependencies = mapFeatures features ([ syn_0_11_11 ]);
  };
  serde_codegen_internals_0_14_2_features = f: updateFeatures f (rec {
    serde_codegen_internals_0_14_2.default = (f.serde_codegen_internals_0_14_2.default or true);
    syn_0_11_11.default = (f.syn_0_11_11.default or false);
    syn_0_11_11.parsing = true;
  }) [ syn_0_11_11_features ];
  serde_derive_0_9_15 = { features?(serde_derive_0_9_15_features {}) }: serde_derive_0_9_15_ {
    dependencies = mapFeatures features ([ quote_0_3_15 serde_codegen_internals_0_14_2 syn_0_11_11 ]);
    features = mkFeatures (features.serde_derive_0_9_15 or {});
  };
  serde_derive_0_9_15_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    serde_codegen_internals_0_14_2.default = (f.serde_codegen_internals_0_14_2.default or false);
    serde_derive_0_9_15.default = (f.serde_derive_0_9_15.default or true);
    syn_0_11_11.default = true;
    syn_0_11_11.visit = true;
  }) [ quote_0_3_15_features serde_codegen_internals_0_14_2_features syn_0_11_11_features ];
  serde_derive_1_0_71 = { features?(serde_derive_1_0_71_features {}) }: serde_derive_1_0_71_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_12 quote_0_6_6 syn_0_14_8 ]);
    features = mkFeatures (features.serde_derive_1_0_71 or {});
  };
  serde_derive_1_0_71_features = f: updateFeatures f (rec {
    proc_macro2_0_4_12.default = true;
    quote_0_6_6.default = true;
    serde_derive_1_0_71.default = (f.serde_derive_1_0_71.default or true);
    syn_0_14_8.default = true;
    syn_0_14_8.visit = true;
  }) [ proc_macro2_0_4_12_features quote_0_6_6_features syn_0_14_8_features ];
  serde_json_0_9_10 = { features?(serde_json_0_9_10_features {}) }: serde_json_0_9_10_ {
    dependencies = mapFeatures features ([ dtoa_0_4_3 itoa_0_3_4 num_traits_0_1_43 serde_0_9_15 ]);
    features = mkFeatures (features.serde_json_0_9_10 or {});
  };
  serde_json_0_9_10_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = true;
    itoa_0_3_4.default = true;
    num_traits_0_1_43.default = true;
    serde_0_9_15.default = true;
    serde_json_0_9_10.default = (f.serde_json_0_9_10.default or true);
    serde_json_0_9_10.linked-hash-map =
      (f.serde_json_0_9_10.linked-hash-map or false) ||
      (f.serde_json_0_9_10.preserve_order or false) ||
      (serde_json_0_9_10.preserve_order or false);
  }) [ dtoa_0_4_3_features itoa_0_3_4_features num_traits_0_1_43_features serde_0_9_15_features ];
  serde_json_1_0_24 = { features?(serde_json_1_0_24_features {}) }: serde_json_1_0_24_ {
    dependencies = mapFeatures features ([ dtoa_0_4_3 itoa_0_4_2 serde_1_0_71 ]);
    features = mkFeatures (features.serde_json_1_0_24 or {});
  };
  serde_json_1_0_24_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = true;
    itoa_0_4_2.default = true;
    serde_1_0_71.default = true;
    serde_json_1_0_24.default = (f.serde_json_1_0_24.default or true);
    serde_json_1_0_24.indexmap =
      (f.serde_json_1_0_24.indexmap or false) ||
      (f.serde_json_1_0_24.preserve_order or false) ||
      (serde_json_1_0_24.preserve_order or false);
  }) [ dtoa_0_4_3_features itoa_0_4_2_features serde_1_0_71_features ];
  serde_urlencoded_0_5_2 = { features?(serde_urlencoded_0_5_2_features {}) }: serde_urlencoded_0_5_2_ {
    dependencies = mapFeatures features ([ dtoa_0_4_3 itoa_0_4_2 serde_1_0_71 url_1_7_1 ]);
  };
  serde_urlencoded_0_5_2_features = f: updateFeatures f (rec {
    dtoa_0_4_3.default = true;
    itoa_0_4_2.default = true;
    serde_1_0_71.default = true;
    serde_urlencoded_0_5_2.default = (f.serde_urlencoded_0_5_2.default or true);
    url_1_7_1.default = true;
  }) [ dtoa_0_4_3_features itoa_0_4_2_features serde_1_0_71_features url_1_7_1_features ];
  shannon_0_2_0 = { features?(shannon_0_2_0_features {}) }: shannon_0_2_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_4 ]);
  };
  shannon_0_2_0_features = f: updateFeatures f (rec {
    byteorder_1_2_4.default = true;
    shannon_0_2_0.default = (f.shannon_0_2_0.default or true);
  }) [ byteorder_1_2_4_features ];
  simplelog_0_4_4 = { features?(simplelog_0_4_4_features {}) }: simplelog_0_4_4_ {
    dependencies = mapFeatures features ([ log_0_3_9 time_0_1_40 ]
      ++ (if features.simplelog_0_4_4.term or false then [ term_0_4_6 ] else []));
    features = mkFeatures (features.simplelog_0_4_4 or {});
  };
  simplelog_0_4_4_features = f: updateFeatures f (rec {
    log_0_3_9.default = true;
    simplelog_0_4_4.default = (f.simplelog_0_4_4.default or true);
    simplelog_0_4_4.term =
      (f.simplelog_0_4_4.term or false) ||
      (f.simplelog_0_4_4.default or false) ||
      (simplelog_0_4_4.default or false);
    term_0_4_6.default = true;
    time_0_1_40.default = true;
  }) [ log_0_3_9_features term_0_4_6_features time_0_1_40_features ];
  siphasher_0_2_3 = { features?(siphasher_0_2_3_features {}) }: siphasher_0_2_3_ {};
  siphasher_0_2_3_features = f: updateFeatures f (rec {
    siphasher_0_2_3.default = (f.siphasher_0_2_3.default or true);
  }) [];
  slab_0_3_0 = { features?(slab_0_3_0_features {}) }: slab_0_3_0_ {};
  slab_0_3_0_features = f: updateFeatures f (rec {
    slab_0_3_0.default = (f.slab_0_3_0.default or true);
  }) [];
  slab_0_4_1 = { features?(slab_0_4_1_features {}) }: slab_0_4_1_ {};
  slab_0_4_1_features = f: updateFeatures f (rec {
    slab_0_4_1.default = (f.slab_0_4_1.default or true);
  }) [];
  smallvec_0_2_1 = { features?(smallvec_0_2_1_features {}) }: smallvec_0_2_1_ {};
  smallvec_0_2_1_features = f: updateFeatures f (rec {
    smallvec_0_2_1.default = (f.smallvec_0_2_1.default or true);
  }) [];
  socket2_0_2_4 = { features?(socket2_0_2_4_features {}) }: socket2_0_2_4_ {
    dependencies = (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ cfg_if_0_1_5 libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ws2_32_sys_0_2_1 ]) else []);
    features = mkFeatures (features.socket2_0_2_4 or {});
  };
  socket2_0_2_4_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    kernel32_sys_0_2_2.default = true;
    libc_0_2_43.default = true;
    socket2_0_2_4.default = (f.socket2_0_2_4.default or true);
    winapi_0_2_8.default = true;
    ws2_32_sys_0_2_1.default = true;
  }) [ cfg_if_0_1_5_features libc_0_2_43_features kernel32_sys_0_2_2_features winapi_0_2_8_features ws2_32_sys_0_2_1_features ];
  spotifyd_0_2_1 = { features?(spotifyd_0_2_1_features {}) }: spotifyd_0_2_1_ {
    dependencies = mapFeatures features ([ chrono_0_4_5 ctrlc_3_1_1 daemonize_0_2_3 futures_0_1_23 getopts_0_2_18 hostname_0_1_5 librespot_0_1_0 log_0_3_9 rspotify_0_2_3 rust_crypto_0_2_36 rust_ini_0_10_3 simplelog_0_4_4 syslog_3_3_0 tokio_core_0_1_17 tokio_io_0_1_7 tokio_signal_0_1_5 xdg_2_1_0 ]
      ++ (if features.spotifyd_0_2_1.alsa or false then [ alsa_0_2_0 ] else [])
      ++ (if features.spotifyd_0_2_1.dbus or false then [ dbus_0_6_2 ] else [])
      ++ (if features.spotifyd_0_2_1.dbus-tokio or false then [ dbus_tokio_0_2_1 ] else []));
    features = mkFeatures (features.spotifyd_0_2_1 or {});
  };
  spotifyd_0_2_1_features = f: updateFeatures f (rec {
    alsa_0_2_0.default = true;
    chrono_0_4_5.default = true;
    ctrlc_3_1_1.default = true;
    ctrlc_3_1_1.termination = true;
    daemonize_0_2_3.default = true;
    dbus_0_6_2.default = true;
    dbus_tokio_0_2_1.default = true;
    futures_0_1_23.default = true;
    getopts_0_2_18.default = true;
    hostname_0_1_5.default = true;
    librespot_0_1_0.alsa-backend =
      (f.librespot_0_1_0.alsa-backend or false) ||
      (spotifyd_0_2_1.alsa_backend or false) ||
      (f.spotifyd_0_2_1.alsa_backend or false);
    librespot_0_1_0.default = (f.librespot_0_1_0.default or false);
    librespot_0_1_0.portaudio-backend =
      (f.librespot_0_1_0.portaudio-backend or false) ||
      (spotifyd_0_2_1.portaudio_backend or false) ||
      (f.spotifyd_0_2_1.portaudio_backend or false);
    librespot_0_1_0.pulseaudio-backend =
      (f.librespot_0_1_0.pulseaudio-backend or false) ||
      (spotifyd_0_2_1.pulseaudio_backend or false) ||
      (f.spotifyd_0_2_1.pulseaudio_backend or false);
    librespot_0_1_0.with-tremor = true;
    log_0_3_9.default = true;
    rspotify_0_2_3.default = true;
    rust_crypto_0_2_36.default = true;
    rust_ini_0_10_3.default = true;
    simplelog_0_4_4.default = true;
    spotifyd_0_2_1.alsa =
      (f.spotifyd_0_2_1.alsa or false) ||
      (f.spotifyd_0_2_1.alsa_backend or false) ||
      (spotifyd_0_2_1.alsa_backend or false);
    spotifyd_0_2_1.alsa_backend =
      (f.spotifyd_0_2_1.alsa_backend or false) ||
      (f.spotifyd_0_2_1.default or false) ||
      (spotifyd_0_2_1.default or false);
    spotifyd_0_2_1.dbus =
      (f.spotifyd_0_2_1.dbus or false) ||
      (f.spotifyd_0_2_1.dbus_mpris or false) ||
      (spotifyd_0_2_1.dbus_mpris or false);
    spotifyd_0_2_1.dbus-tokio =
      (f.spotifyd_0_2_1.dbus-tokio or false) ||
      (f.spotifyd_0_2_1.dbus_mpris or false) ||
      (spotifyd_0_2_1.dbus_mpris or false);
    spotifyd_0_2_1.default = (f.spotifyd_0_2_1.default or true);
    syslog_3_3_0.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    tokio_signal_0_1_5.default = true;
    xdg_2_1_0.default = true;
  }) [ alsa_0_2_0_features chrono_0_4_5_features ctrlc_3_1_1_features daemonize_0_2_3_features dbus_0_6_2_features dbus_tokio_0_2_1_features futures_0_1_23_features getopts_0_2_18_features hostname_0_1_5_features librespot_0_1_0_features log_0_3_9_features rspotify_0_2_3_features rust_crypto_0_2_36_features rust_ini_0_10_3_features simplelog_0_4_4_features syslog_3_3_0_features tokio_core_0_1_17_features tokio_io_0_1_7_features tokio_signal_0_1_5_features xdg_2_1_0_features ];
  syn_0_11_11 = { features?(syn_0_11_11_features {}) }: syn_0_11_11_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.syn_0_11_11.quote or false then [ quote_0_3_15 ] else [])
      ++ (if features.syn_0_11_11.synom or false then [ synom_0_11_3 ] else [])
      ++ (if features.syn_0_11_11.unicode-xid or false then [ unicode_xid_0_0_4 ] else []));
    features = mkFeatures (features.syn_0_11_11 or {});
  };
  syn_0_11_11_features = f: updateFeatures f (rec {
    quote_0_3_15.default = true;
    syn_0_11_11.default = (f.syn_0_11_11.default or true);
    syn_0_11_11.parsing =
      (f.syn_0_11_11.parsing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.printing =
      (f.syn_0_11_11.printing or false) ||
      (f.syn_0_11_11.default or false) ||
      (syn_0_11_11.default or false);
    syn_0_11_11.quote =
      (f.syn_0_11_11.quote or false) ||
      (f.syn_0_11_11.printing or false) ||
      (syn_0_11_11.printing or false);
    syn_0_11_11.synom =
      (f.syn_0_11_11.synom or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    syn_0_11_11.unicode-xid =
      (f.syn_0_11_11.unicode-xid or false) ||
      (f.syn_0_11_11.parsing or false) ||
      (syn_0_11_11.parsing or false);
    synom_0_11_3.default = true;
    unicode_xid_0_0_4.default = true;
  }) [ quote_0_3_15_features synom_0_11_3_features unicode_xid_0_0_4_features ];
  syn_0_14_8 = { features?(syn_0_14_8_features {}) }: syn_0_14_8_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_12 unicode_xid_0_1_0 ]
      ++ (if features.syn_0_14_8.quote or false then [ quote_0_6_6 ] else []));
    features = mkFeatures (features.syn_0_14_8 or {});
  };
  syn_0_14_8_features = f: updateFeatures f (rec {
    proc_macro2_0_4_12.default = (f.proc_macro2_0_4_12.default or false);
    proc_macro2_0_4_12.proc-macro =
      (f.proc_macro2_0_4_12.proc-macro or false) ||
      (syn_0_14_8.proc-macro or false) ||
      (f.syn_0_14_8.proc-macro or false);
    quote_0_6_6.default = (f.quote_0_6_6.default or false);
    quote_0_6_6.proc-macro =
      (f.quote_0_6_6.proc-macro or false) ||
      (syn_0_14_8.proc-macro or false) ||
      (f.syn_0_14_8.proc-macro or false);
    syn_0_14_8.clone-impls =
      (f.syn_0_14_8.clone-impls or false) ||
      (f.syn_0_14_8.default or false) ||
      (syn_0_14_8.default or false);
    syn_0_14_8.default = (f.syn_0_14_8.default or true);
    syn_0_14_8.derive =
      (f.syn_0_14_8.derive or false) ||
      (f.syn_0_14_8.default or false) ||
      (syn_0_14_8.default or false);
    syn_0_14_8.parsing =
      (f.syn_0_14_8.parsing or false) ||
      (f.syn_0_14_8.default or false) ||
      (syn_0_14_8.default or false);
    syn_0_14_8.printing =
      (f.syn_0_14_8.printing or false) ||
      (f.syn_0_14_8.default or false) ||
      (syn_0_14_8.default or false);
    syn_0_14_8.proc-macro =
      (f.syn_0_14_8.proc-macro or false) ||
      (f.syn_0_14_8.default or false) ||
      (syn_0_14_8.default or false);
    syn_0_14_8.quote =
      (f.syn_0_14_8.quote or false) ||
      (f.syn_0_14_8.printing or false) ||
      (syn_0_14_8.printing or false);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_12_features quote_0_6_6_features unicode_xid_0_1_0_features ];
  synom_0_11_3 = { features?(synom_0_11_3_features {}) }: synom_0_11_3_ {
    dependencies = mapFeatures features ([ unicode_xid_0_0_4 ]);
  };
  synom_0_11_3_features = f: updateFeatures f (rec {
    synom_0_11_3.default = (f.synom_0_11_3.default or true);
    unicode_xid_0_0_4.default = true;
  }) [ unicode_xid_0_0_4_features ];
  synstructure_0_9_0 = { features?(synstructure_0_9_0_features {}) }: synstructure_0_9_0_ {
    dependencies = mapFeatures features ([ proc_macro2_0_4_12 quote_0_6_6 syn_0_14_8 unicode_xid_0_1_0 ]);
    features = mkFeatures (features.synstructure_0_9_0 or {});
  };
  synstructure_0_9_0_features = f: updateFeatures f (rec {
    proc_macro2_0_4_12.default = true;
    quote_0_6_6.default = true;
    syn_0_14_8.default = true;
    syn_0_14_8.extra-traits = true;
    syn_0_14_8.visit = true;
    synstructure_0_9_0.default = (f.synstructure_0_9_0.default or true);
    unicode_xid_0_1_0.default = true;
  }) [ proc_macro2_0_4_12_features quote_0_6_6_features syn_0_14_8_features unicode_xid_0_1_0_features ];
  syslog_3_3_0 = { features?(syslog_3_3_0_features {}) }: syslog_3_3_0_ {
    dependencies = mapFeatures features ([ libc_0_2_43 log_0_3_9 time_0_1_40 unix_socket_0_5_0 ]);
    features = mkFeatures (features.syslog_3_3_0 or {});
  };
  syslog_3_3_0_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    log_0_3_9.default = true;
    syslog_3_3_0.default = (f.syslog_3_3_0.default or true);
    time_0_1_40.default = true;
    unix_socket_0_5_0.default = true;
  }) [ libc_0_2_43_features log_0_3_9_features time_0_1_40_features unix_socket_0_5_0_features ];
  take_0_1_0 = { features?(take_0_1_0_features {}) }: take_0_1_0_ {};
  take_0_1_0_features = f: updateFeatures f (rec {
    take_0_1_0.default = (f.take_0_1_0.default or true);
  }) [];
  tempdir_0_3_7 = { features?(tempdir_0_3_7_features {}) }: tempdir_0_3_7_ {
    dependencies = mapFeatures features ([ rand_0_4_2 remove_dir_all_0_5_1 ]);
  };
  tempdir_0_3_7_features = f: updateFeatures f (rec {
    rand_0_4_2.default = true;
    remove_dir_all_0_5_1.default = true;
    tempdir_0_3_7.default = (f.tempdir_0_3_7.default or true);
  }) [ rand_0_4_2_features remove_dir_all_0_5_1_features ];
  tempfile_2_2_0 = { features?(tempfile_2_2_0_features {}) }: tempfile_2_2_0_ {
    dependencies = mapFeatures features ([ rand_0_3_22 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  tempfile_2_2_0_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    libc_0_2_43.default = true;
    rand_0_3_22.default = true;
    redox_syscall_0_1_40.default = true;
    tempfile_2_2_0.default = (f.tempfile_2_2_0.default or true);
    winapi_0_2_8.default = true;
  }) [ rand_0_3_22_features redox_syscall_0_1_40_features libc_0_2_43_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  term_0_4_6 = { features?(term_0_4_6_features {}) }: term_0_4_6_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  term_0_4_6_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = true;
    term_0_4_6.default = (f.term_0_4_6.default or true);
    winapi_0_2_8.default = true;
  }) [ kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  termcolor_1_0_1 = { features?(termcolor_1_0_1_features {}) }: termcolor_1_0_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ wincolor_1_0_0 ]) else []);
  };
  termcolor_1_0_1_features = f: updateFeatures f (rec {
    termcolor_1_0_1.default = (f.termcolor_1_0_1.default or true);
    wincolor_1_0_0.default = true;
  }) [ wincolor_1_0_0_features ];
  termion_1_5_1 = { features?(termion_1_5_1_features {}) }: termion_1_5_1_ {
    dependencies = (if !(kernel == "redox") then mapFeatures features ([ libc_0_2_43 ]) else [])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 redox_termios_0_1_1 ]) else []);
  };
  termion_1_5_1_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    redox_syscall_0_1_40.default = true;
    redox_termios_0_1_1.default = true;
    termion_1_5_1.default = (f.termion_1_5_1.default or true);
  }) [ libc_0_2_43_features redox_syscall_0_1_40_features redox_termios_0_1_1_features ];
  termios_0_2_2 = { features?(termios_0_2_2_features {}) }: termios_0_2_2_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  termios_0_2_2_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    termios_0_2_2.default = (f.termios_0_2_2.default or true);
  }) [ libc_0_2_43_features ];
  thread_local_0_3_5 = { features?(thread_local_0_3_5_features {}) }: thread_local_0_3_5_ {
    dependencies = mapFeatures features ([ lazy_static_1_1_0 unreachable_1_0_0 ]);
  };
  thread_local_0_3_5_features = f: updateFeatures f (rec {
    lazy_static_1_1_0.default = true;
    thread_local_0_3_5.default = (f.thread_local_0_3_5.default or true);
    unreachable_1_0_0.default = true;
  }) [ lazy_static_1_1_0_features unreachable_1_0_0_features ];
  time_0_1_40 = { features?(time_0_1_40_features {}) }: time_0_1_40_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  time_0_1_40_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    redox_syscall_0_1_40.default = true;
    time_0_1_40.default = (f.time_0_1_40.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwinbase = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.ntdef = true;
    winapi_0_3_5.profileapi = true;
    winapi_0_3_5.std = true;
    winapi_0_3_5.sysinfoapi = true;
    winapi_0_3_5.timezoneapi = true;
  }) [ libc_0_2_43_features redox_syscall_0_1_40_features winapi_0_3_5_features ];
  tokio_0_1_7 = { features?(tokio_0_1_7_features {}) }: tokio_0_1_7_ {
    dependencies = mapFeatures features ([ futures_0_1_23 mio_0_6_15 tokio_executor_0_1_3 tokio_fs_0_1_3 tokio_io_0_1_7 tokio_reactor_0_1_3 tokio_tcp_0_1_1 tokio_threadpool_0_1_5 tokio_timer_0_2_5 tokio_udp_0_1_1 ]);
  };
  tokio_0_1_7_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    mio_0_6_15.default = true;
    tokio_0_1_7.default = (f.tokio_0_1_7.default or true);
    tokio_executor_0_1_3.default = true;
    tokio_fs_0_1_3.default = true;
    tokio_io_0_1_7.default = true;
    tokio_reactor_0_1_3.default = true;
    tokio_tcp_0_1_1.default = true;
    tokio_threadpool_0_1_5.default = true;
    tokio_timer_0_2_5.default = true;
    tokio_udp_0_1_1.default = true;
  }) [ futures_0_1_23_features mio_0_6_15_features tokio_executor_0_1_3_features tokio_fs_0_1_3_features tokio_io_0_1_7_features tokio_reactor_0_1_3_features tokio_tcp_0_1_1_features tokio_threadpool_0_1_5_features tokio_timer_0_2_5_features tokio_udp_0_1_1_features ];
  tokio_codec_0_1_0 = { features?(tokio_codec_0_1_0_features {}) }: tokio_codec_0_1_0_ {
    dependencies = mapFeatures features ([ bytes_0_4_9 futures_0_1_23 tokio_io_0_1_7 ]);
  };
  tokio_codec_0_1_0_features = f: updateFeatures f (rec {
    bytes_0_4_9.default = true;
    futures_0_1_23.default = true;
    tokio_codec_0_1_0.default = (f.tokio_codec_0_1_0.default or true);
    tokio_io_0_1_7.default = true;
  }) [ bytes_0_4_9_features futures_0_1_23_features tokio_io_0_1_7_features ];
  tokio_core_0_1_17 = { features?(tokio_core_0_1_17_features {}) }: tokio_core_0_1_17_ {
    dependencies = mapFeatures features ([ bytes_0_4_9 futures_0_1_23 iovec_0_1_2 log_0_4_3 mio_0_6_15 scoped_tls_0_1_2 tokio_0_1_7 tokio_executor_0_1_3 tokio_io_0_1_7 tokio_reactor_0_1_3 tokio_timer_0_2_5 ]);
  };
  tokio_core_0_1_17_features = f: updateFeatures f (rec {
    bytes_0_4_9.default = true;
    futures_0_1_23.default = true;
    iovec_0_1_2.default = true;
    log_0_4_3.default = true;
    mio_0_6_15.default = true;
    scoped_tls_0_1_2.default = true;
    tokio_0_1_7.default = true;
    tokio_core_0_1_17.default = (f.tokio_core_0_1_17.default or true);
    tokio_executor_0_1_3.default = true;
    tokio_io_0_1_7.default = true;
    tokio_reactor_0_1_3.default = true;
    tokio_timer_0_2_5.default = true;
  }) [ bytes_0_4_9_features futures_0_1_23_features iovec_0_1_2_features log_0_4_3_features mio_0_6_15_features scoped_tls_0_1_2_features tokio_0_1_7_features tokio_executor_0_1_3_features tokio_io_0_1_7_features tokio_reactor_0_1_3_features tokio_timer_0_2_5_features ];
  tokio_executor_0_1_3 = { features?(tokio_executor_0_1_3_features {}) }: tokio_executor_0_1_3_ {
    dependencies = mapFeatures features ([ futures_0_1_23 ]);
  };
  tokio_executor_0_1_3_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    tokio_executor_0_1_3.default = (f.tokio_executor_0_1_3.default or true);
  }) [ futures_0_1_23_features ];
  tokio_fs_0_1_3 = { features?(tokio_fs_0_1_3_features {}) }: tokio_fs_0_1_3_ {
    dependencies = mapFeatures features ([ futures_0_1_23 tokio_io_0_1_7 tokio_threadpool_0_1_5 ]);
  };
  tokio_fs_0_1_3_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    tokio_fs_0_1_3.default = (f.tokio_fs_0_1_3.default or true);
    tokio_io_0_1_7.default = true;
    tokio_threadpool_0_1_5.default = true;
  }) [ futures_0_1_23_features tokio_io_0_1_7_features tokio_threadpool_0_1_5_features ];
  tokio_io_0_1_7 = { features?(tokio_io_0_1_7_features {}) }: tokio_io_0_1_7_ {
    dependencies = mapFeatures features ([ bytes_0_4_9 futures_0_1_23 log_0_4_3 ]);
  };
  tokio_io_0_1_7_features = f: updateFeatures f (rec {
    bytes_0_4_9.default = true;
    futures_0_1_23.default = true;
    log_0_4_3.default = true;
    tokio_io_0_1_7.default = (f.tokio_io_0_1_7.default or true);
  }) [ bytes_0_4_9_features futures_0_1_23_features log_0_4_3_features ];
  tokio_proto_0_1_1 = { features?(tokio_proto_0_1_1_features {}) }: tokio_proto_0_1_1_ {
    dependencies = mapFeatures features ([ futures_0_1_23 log_0_3_9 net2_0_2_33 rand_0_3_22 slab_0_3_0 smallvec_0_2_1 take_0_1_0 tokio_core_0_1_17 tokio_io_0_1_7 tokio_service_0_1_0 ]);
  };
  tokio_proto_0_1_1_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    log_0_3_9.default = true;
    net2_0_2_33.default = true;
    rand_0_3_22.default = true;
    slab_0_3_0.default = true;
    smallvec_0_2_1.default = true;
    take_0_1_0.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    tokio_proto_0_1_1.default = (f.tokio_proto_0_1_1.default or true);
    tokio_service_0_1_0.default = true;
  }) [ futures_0_1_23_features log_0_3_9_features net2_0_2_33_features rand_0_3_22_features slab_0_3_0_features smallvec_0_2_1_features take_0_1_0_features tokio_core_0_1_17_features tokio_io_0_1_7_features tokio_service_0_1_0_features ];
  tokio_reactor_0_1_3 = { features?(tokio_reactor_0_1_3_features {}) }: tokio_reactor_0_1_3_ {
    dependencies = mapFeatures features ([ futures_0_1_23 log_0_4_3 mio_0_6_15 slab_0_4_1 tokio_executor_0_1_3 tokio_io_0_1_7 ]);
  };
  tokio_reactor_0_1_3_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    log_0_4_3.default = true;
    mio_0_6_15.default = true;
    slab_0_4_1.default = true;
    tokio_executor_0_1_3.default = true;
    tokio_io_0_1_7.default = true;
    tokio_reactor_0_1_3.default = (f.tokio_reactor_0_1_3.default or true);
  }) [ futures_0_1_23_features log_0_4_3_features mio_0_6_15_features slab_0_4_1_features tokio_executor_0_1_3_features tokio_io_0_1_7_features ];
  tokio_service_0_1_0 = { features?(tokio_service_0_1_0_features {}) }: tokio_service_0_1_0_ {
    dependencies = mapFeatures features ([ futures_0_1_23 ]);
  };
  tokio_service_0_1_0_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    tokio_service_0_1_0.default = (f.tokio_service_0_1_0.default or true);
  }) [ futures_0_1_23_features ];
  tokio_signal_0_1_5 = { features?(tokio_signal_0_1_5_features {}) }: tokio_signal_0_1_5_ {
    dependencies = mapFeatures features ([ futures_0_1_23 mio_0_6_15 tokio_core_0_1_17 tokio_io_0_1_7 ])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_43 mio_uds_0_6_6 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  tokio_signal_0_1_5_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    libc_0_2_43.default = true;
    mio_0_6_15.default = true;
    mio_uds_0_6_6.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    tokio_signal_0_1_5.default = (f.tokio_signal_0_1_5.default or true);
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.wincon = true;
  }) [ futures_0_1_23_features mio_0_6_15_features tokio_core_0_1_17_features tokio_io_0_1_7_features libc_0_2_43_features mio_uds_0_6_6_features winapi_0_3_5_features ];
  tokio_tcp_0_1_1 = { features?(tokio_tcp_0_1_1_features {}) }: tokio_tcp_0_1_1_ {
    dependencies = mapFeatures features ([ bytes_0_4_9 futures_0_1_23 iovec_0_1_2 mio_0_6_15 tokio_io_0_1_7 tokio_reactor_0_1_3 ]);
  };
  tokio_tcp_0_1_1_features = f: updateFeatures f (rec {
    bytes_0_4_9.default = true;
    futures_0_1_23.default = true;
    iovec_0_1_2.default = true;
    mio_0_6_15.default = true;
    tokio_io_0_1_7.default = true;
    tokio_reactor_0_1_3.default = true;
    tokio_tcp_0_1_1.default = (f.tokio_tcp_0_1_1.default or true);
  }) [ bytes_0_4_9_features futures_0_1_23_features iovec_0_1_2_features mio_0_6_15_features tokio_io_0_1_7_features tokio_reactor_0_1_3_features ];
  tokio_threadpool_0_1_5 = { features?(tokio_threadpool_0_1_5_features {}) }: tokio_threadpool_0_1_5_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_3_1 futures_0_1_23 log_0_4_3 num_cpus_1_8_0 rand_0_4_2 tokio_executor_0_1_3 ]);
  };
  tokio_threadpool_0_1_5_features = f: updateFeatures f (rec {
    crossbeam_deque_0_3_1.default = true;
    futures_0_1_23.default = true;
    log_0_4_3.default = true;
    num_cpus_1_8_0.default = true;
    rand_0_4_2.default = true;
    tokio_executor_0_1_3.default = true;
    tokio_threadpool_0_1_5.default = (f.tokio_threadpool_0_1_5.default or true);
  }) [ crossbeam_deque_0_3_1_features futures_0_1_23_features log_0_4_3_features num_cpus_1_8_0_features rand_0_4_2_features tokio_executor_0_1_3_features ];
  tokio_timer_0_2_5 = { features?(tokio_timer_0_2_5_features {}) }: tokio_timer_0_2_5_ {
    dependencies = mapFeatures features ([ futures_0_1_23 tokio_executor_0_1_3 ]);
  };
  tokio_timer_0_2_5_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    tokio_executor_0_1_3.default = true;
    tokio_timer_0_2_5.default = (f.tokio_timer_0_2_5.default or true);
  }) [ futures_0_1_23_features tokio_executor_0_1_3_features ];
  tokio_tls_0_1_4 = { features?(tokio_tls_0_1_4_features {}) }: tokio_tls_0_1_4_ {
    dependencies = mapFeatures features ([ futures_0_1_23 native_tls_0_1_5 tokio_core_0_1_17 tokio_io_0_1_7 ])
      ++ (if !(kernel == "darwin") && !(kernel == "windows") && !(kernel == "ios") then mapFeatures features ([]) else [])
      ++ (if kernel == "darwin" || kernel == "ios" then mapFeatures features ([]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([]) else []);
  };
  tokio_tls_0_1_4_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    native_tls_0_1_5.default = true;
    tokio_core_0_1_17.default = true;
    tokio_io_0_1_7.default = true;
    tokio_tls_0_1_4.default = (f.tokio_tls_0_1_4.default or true);
  }) [ futures_0_1_23_features native_tls_0_1_5_features tokio_core_0_1_17_features tokio_io_0_1_7_features ];
  tokio_udp_0_1_1 = { features?(tokio_udp_0_1_1_features {}) }: tokio_udp_0_1_1_ {
    dependencies = mapFeatures features ([ bytes_0_4_9 futures_0_1_23 log_0_4_3 mio_0_6_15 tokio_codec_0_1_0 tokio_io_0_1_7 tokio_reactor_0_1_3 ]);
  };
  tokio_udp_0_1_1_features = f: updateFeatures f (rec {
    bytes_0_4_9.default = true;
    futures_0_1_23.default = true;
    log_0_4_3.default = true;
    mio_0_6_15.default = true;
    tokio_codec_0_1_0.default = true;
    tokio_io_0_1_7.default = true;
    tokio_reactor_0_1_3.default = true;
    tokio_udp_0_1_1.default = (f.tokio_udp_0_1_1.default or true);
  }) [ bytes_0_4_9_features futures_0_1_23_features log_0_4_3_features mio_0_6_15_features tokio_codec_0_1_0_features tokio_io_0_1_7_features tokio_reactor_0_1_3_features ];
  tremor_0_1_0 = { features?(tremor_0_1_0_features {}) }: tremor_0_1_0_ {
    dependencies = mapFeatures features ([ libc_0_2_43 tremor_sys_0_1_0 ]);
  };
  tremor_0_1_0_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    tremor_0_1_0.default = (f.tremor_0_1_0.default or true);
    tremor_sys_0_1_0.default = true;
  }) [ libc_0_2_43_features tremor_sys_0_1_0_features ];
  tremor_sys_0_1_0 = { features?(tremor_sys_0_1_0_features {}) }: tremor_sys_0_1_0_ {
    dependencies = mapFeatures features ([ libc_0_2_43 ]);
  };
  tremor_sys_0_1_0_features = f: updateFeatures f (rec {
    libc_0_2_43.default = true;
    tremor_sys_0_1_0.default = (f.tremor_sys_0_1_0.default or true);
  }) [ libc_0_2_43_features ];
  try_lock_0_1_0 = { features?(try_lock_0_1_0_features {}) }: try_lock_0_1_0_ {};
  try_lock_0_1_0_features = f: updateFeatures f (rec {
    try_lock_0_1_0.default = (f.try_lock_0_1_0.default or true);
  }) [];
  ucd_util_0_1_1 = { features?(ucd_util_0_1_1_features {}) }: ucd_util_0_1_1_ {};
  ucd_util_0_1_1_features = f: updateFeatures f (rec {
    ucd_util_0_1_1.default = (f.ucd_util_0_1_1.default or true);
  }) [];
  unicase_1_4_2 = { features?(unicase_1_4_2_features {}) }: unicase_1_4_2_ {
    dependencies = mapFeatures features ([]);
    buildDependencies = mapFeatures features ([ version_check_0_1_4 ]);
    features = mkFeatures (features.unicase_1_4_2 or {});
  };
  unicase_1_4_2_features = f: updateFeatures f (rec {
    unicase_1_4_2.default = (f.unicase_1_4_2.default or true);
    unicase_1_4_2.heapsize =
      (f.unicase_1_4_2.heapsize or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    unicase_1_4_2.heapsize_plugin =
      (f.unicase_1_4_2.heapsize_plugin or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    version_check_0_1_4.default = true;
  }) [ version_check_0_1_4_features ];
  unicase_2_1_0 = { features?(unicase_2_1_0_features {}) }: unicase_2_1_0_ {
    buildDependencies = mapFeatures features ([ version_check_0_1_4 ]);
    features = mkFeatures (features.unicase_2_1_0 or {});
  };
  unicase_2_1_0_features = f: updateFeatures f (rec {
    unicase_2_1_0.default = (f.unicase_2_1_0.default or true);
    version_check_0_1_4.default = true;
  }) [ version_check_0_1_4_features ];
  unicode_bidi_0_3_4 = { features?(unicode_bidi_0_3_4_features {}) }: unicode_bidi_0_3_4_ {
    dependencies = mapFeatures features ([ matches_0_1_7 ]);
    features = mkFeatures (features.unicode_bidi_0_3_4 or {});
  };
  unicode_bidi_0_3_4_features = f: updateFeatures f (rec {
    matches_0_1_7.default = true;
    unicode_bidi_0_3_4.default = (f.unicode_bidi_0_3_4.default or true);
    unicode_bidi_0_3_4.flame =
      (f.unicode_bidi_0_3_4.flame or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.flamer =
      (f.unicode_bidi_0_3_4.flamer or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.serde =
      (f.unicode_bidi_0_3_4.serde or false) ||
      (f.unicode_bidi_0_3_4.with_serde or false) ||
      (unicode_bidi_0_3_4.with_serde or false);
  }) [ matches_0_1_7_features ];
  unicode_normalization_0_1_7 = { features?(unicode_normalization_0_1_7_features {}) }: unicode_normalization_0_1_7_ {};
  unicode_normalization_0_1_7_features = f: updateFeatures f (rec {
    unicode_normalization_0_1_7.default = (f.unicode_normalization_0_1_7.default or true);
  }) [];
  unicode_width_0_1_5 = { features?(unicode_width_0_1_5_features {}) }: unicode_width_0_1_5_ {
    features = mkFeatures (features.unicode_width_0_1_5 or {});
  };
  unicode_width_0_1_5_features = f: updateFeatures f (rec {
    unicode_width_0_1_5.default = (f.unicode_width_0_1_5.default or true);
  }) [];
  unicode_xid_0_0_4 = { features?(unicode_xid_0_0_4_features {}) }: unicode_xid_0_0_4_ {
    features = mkFeatures (features.unicode_xid_0_0_4 or {});
  };
  unicode_xid_0_0_4_features = f: updateFeatures f (rec {
    unicode_xid_0_0_4.default = (f.unicode_xid_0_0_4.default or true);
  }) [];
  unicode_xid_0_1_0 = { features?(unicode_xid_0_1_0_features {}) }: unicode_xid_0_1_0_ {
    features = mkFeatures (features.unicode_xid_0_1_0 or {});
  };
  unicode_xid_0_1_0_features = f: updateFeatures f (rec {
    unicode_xid_0_1_0.default = (f.unicode_xid_0_1_0.default or true);
  }) [];
  unix_socket_0_5_0 = { features?(unix_socket_0_5_0_features {}) }: unix_socket_0_5_0_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 libc_0_2_43 ]);
  };
  unix_socket_0_5_0_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    libc_0_2_43.default = true;
    unix_socket_0_5_0.default = (f.unix_socket_0_5_0.default or true);
  }) [ cfg_if_0_1_5_features libc_0_2_43_features ];
  unreachable_1_0_0 = { features?(unreachable_1_0_0_features {}) }: unreachable_1_0_0_ {
    dependencies = mapFeatures features ([ void_1_0_2 ]);
  };
  unreachable_1_0_0_features = f: updateFeatures f (rec {
    unreachable_1_0_0.default = (f.unreachable_1_0_0.default or true);
    void_1_0_2.default = (f.void_1_0_2.default or false);
  }) [ void_1_0_2_features ];
  url_1_7_1 = { features?(url_1_7_1_features {}) }: url_1_7_1_ {
    dependencies = mapFeatures features ([ idna_0_1_5 matches_0_1_7 percent_encoding_1_0_1 ]);
    features = mkFeatures (features.url_1_7_1 or {});
  };
  url_1_7_1_features = f: updateFeatures f (rec {
    idna_0_1_5.default = true;
    matches_0_1_7.default = true;
    percent_encoding_1_0_1.default = true;
    url_1_7_1.default = (f.url_1_7_1.default or true);
    url_1_7_1.encoding =
      (f.url_1_7_1.encoding or false) ||
      (f.url_1_7_1.query_encoding or false) ||
      (url_1_7_1.query_encoding or false);
    url_1_7_1.heapsize =
      (f.url_1_7_1.heapsize or false) ||
      (f.url_1_7_1.heap_size or false) ||
      (url_1_7_1.heap_size or false);
  }) [ idna_0_1_5_features matches_0_1_7_features percent_encoding_1_0_1_features ];
  utf8_ranges_1_0_0 = { features?(utf8_ranges_1_0_0_features {}) }: utf8_ranges_1_0_0_ {};
  utf8_ranges_1_0_0_features = f: updateFeatures f (rec {
    utf8_ranges_1_0_0.default = (f.utf8_ranges_1_0_0.default or true);
  }) [];
  uuid_0_4_0 = { features?(uuid_0_4_0_features {}) }: uuid_0_4_0_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.uuid_0_4_0.rand or false then [ rand_0_3_22 ] else []));
    features = mkFeatures (features.uuid_0_4_0 or {});
  };
  uuid_0_4_0_features = f: updateFeatures f (rec {
    rand_0_3_22.default = true;
    uuid_0_4_0.default = (f.uuid_0_4_0.default or true);
    uuid_0_4_0.rand =
      (f.uuid_0_4_0.rand or false) ||
      (f.uuid_0_4_0.v4 or false) ||
      (uuid_0_4_0.v4 or false);
    uuid_0_4_0.sha1 =
      (f.uuid_0_4_0.sha1 or false) ||
      (f.uuid_0_4_0.v5 or false) ||
      (uuid_0_4_0.v5 or false);
  }) [ rand_0_3_22_features ];
  uuid_0_6_5 = { features?(uuid_0_6_5_features {}) }: uuid_0_6_5_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_5 ]
      ++ (if features.uuid_0_6_5.rand or false then [ rand_0_4_2 ] else []));
    features = mkFeatures (features.uuid_0_6_5 or {});
  };
  uuid_0_6_5_features = f: updateFeatures f (rec {
    cfg_if_0_1_5.default = true;
    rand_0_4_2.default = true;
    uuid_0_6_5.byteorder =
      (f.uuid_0_6_5.byteorder or false) ||
      (f.uuid_0_6_5.u128 or false) ||
      (uuid_0_6_5.u128 or false);
    uuid_0_6_5.default = (f.uuid_0_6_5.default or true);
    uuid_0_6_5.md5 =
      (f.uuid_0_6_5.md5 or false) ||
      (f.uuid_0_6_5.v3 or false) ||
      (uuid_0_6_5.v3 or false);
    uuid_0_6_5.nightly =
      (f.uuid_0_6_5.nightly or false) ||
      (f.uuid_0_6_5.const_fn or false) ||
      (uuid_0_6_5.const_fn or false);
    uuid_0_6_5.rand =
      (f.uuid_0_6_5.rand or false) ||
      (f.uuid_0_6_5.v3 or false) ||
      (uuid_0_6_5.v3 or false) ||
      (f.uuid_0_6_5.v4 or false) ||
      (uuid_0_6_5.v4 or false) ||
      (f.uuid_0_6_5.v5 or false) ||
      (uuid_0_6_5.v5 or false);
    uuid_0_6_5.sha1 =
      (f.uuid_0_6_5.sha1 or false) ||
      (f.uuid_0_6_5.v5 or false) ||
      (uuid_0_6_5.v5 or false);
    uuid_0_6_5.std =
      (f.uuid_0_6_5.std or false) ||
      (f.uuid_0_6_5.default or false) ||
      (uuid_0_6_5.default or false) ||
      (f.uuid_0_6_5.use_std or false) ||
      (uuid_0_6_5.use_std or false);
  }) [ cfg_if_0_1_5_features rand_0_4_2_features ];
  vcpkg_0_2_4 = { features?(vcpkg_0_2_4_features {}) }: vcpkg_0_2_4_ {};
  vcpkg_0_2_4_features = f: updateFeatures f (rec {
    vcpkg_0_2_4.default = (f.vcpkg_0_2_4.default or true);
  }) [];
  vergen_0_1_1 = { features?(vergen_0_1_1_features {}) }: vergen_0_1_1_ {
    dependencies = mapFeatures features ([ bitflags_0_7_0 time_0_1_40 ]);
    features = mkFeatures (features.vergen_0_1_1 or {});
  };
  vergen_0_1_1_features = f: updateFeatures f (rec {
    bitflags_0_7_0.default = true;
    time_0_1_40.default = true;
    vergen_0_1_1.clippy =
      (f.vergen_0_1_1.clippy or false) ||
      (f.vergen_0_1_1.lint or false) ||
      (vergen_0_1_1.lint or false);
    vergen_0_1_1.default = (f.vergen_0_1_1.default or true);
  }) [ bitflags_0_7_0_features time_0_1_40_features ];
  version_check_0_1_4 = { features?(version_check_0_1_4_features {}) }: version_check_0_1_4_ {};
  version_check_0_1_4_features = f: updateFeatures f (rec {
    version_check_0_1_4.default = (f.version_check_0_1_4.default or true);
  }) [];
  void_1_0_2 = { features?(void_1_0_2_features {}) }: void_1_0_2_ {
    features = mkFeatures (features.void_1_0_2 or {});
  };
  void_1_0_2_features = f: updateFeatures f (rec {
    void_1_0_2.default = (f.void_1_0_2.default or true);
    void_1_0_2.std =
      (f.void_1_0_2.std or false) ||
      (f.void_1_0_2.default or false) ||
      (void_1_0_2.default or false);
  }) [];
  want_0_0_4 = { features?(want_0_0_4_features {}) }: want_0_0_4_ {
    dependencies = mapFeatures features ([ futures_0_1_23 log_0_4_3 try_lock_0_1_0 ]);
  };
  want_0_0_4_features = f: updateFeatures f (rec {
    futures_0_1_23.default = true;
    log_0_4_3.default = true;
    try_lock_0_1_0.default = true;
    want_0_0_4.default = (f.want_0_0_4.default or true);
  }) [ futures_0_1_23_features log_0_4_3_features try_lock_0_1_0_features ];
  webbrowser_0_2_2 = { features?(webbrowser_0_2_2_features {}) }: webbrowser_0_2_2_ {};
  webbrowser_0_2_2_features = f: updateFeatures f (rec {
    webbrowser_0_2_2.default = (f.webbrowser_0_2_2.default or true);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_5 = { features?(winapi_0_3_5_features {}) }: winapi_0_3_5_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_5 or {});
  };
  winapi_0_3_5_features = f: updateFeatures f (rec {
    winapi_0_3_5.default = (f.winapi_0_3_5.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  wincolor_1_0_0 = { features?(wincolor_1_0_0_features {}) }: wincolor_1_0_0_ {
    dependencies = mapFeatures features ([ winapi_0_3_5 ]);
  };
  wincolor_1_0_0_features = f: updateFeatures f (rec {
    winapi_0_3_5.consoleapi = true;
    winapi_0_3_5.default = true;
    winapi_0_3_5.minwindef = true;
    winapi_0_3_5.processenv = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.wincon = true;
    wincolor_1_0_0.default = (f.wincolor_1_0_0.default or true);
  }) [ winapi_0_3_5_features ];
  winutil_0_1_1 = { features?(winutil_0_1_1_features {}) }: winutil_0_1_1_ {
    dependencies = (if kernel == "windows" then mapFeatures features ([ winapi_0_3_5 ]) else []);
  };
  winutil_0_1_1_features = f: updateFeatures f (rec {
    winapi_0_3_5.default = true;
    winapi_0_3_5.processthreadsapi = true;
    winapi_0_3_5.winbase = true;
    winapi_0_3_5.wow64apiset = true;
    winutil_0_1_1.default = (f.winutil_0_1_1.default or true);
  }) [ winapi_0_3_5_features ];
  ws2_32_sys_0_2_1 = { features?(ws2_32_sys_0_2_1_features {}) }: ws2_32_sys_0_2_1_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  ws2_32_sys_0_2_1_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
    ws2_32_sys_0_2_1.default = (f.ws2_32_sys_0_2_1.default or true);
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  xdg_2_1_0 = { features?(xdg_2_1_0_features {}) }: xdg_2_1_0_ {};
  xdg_2_1_0_features = f: updateFeatures f (rec {
    xdg_2_1_0.default = (f.xdg_2_1_0.default or true);
  }) [];
}
